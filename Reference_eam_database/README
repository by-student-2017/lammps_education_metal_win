------------------------------------------------------------------------------
EAM database tool (original version)
Xiaowang Zhou (Sandia), xzhou at sandia.gov

based on this paper:

X. W. Zhou, R. A. Johnson, and H. N. G. Wadley, Phys. Rev. B, 69,
144113 (2004).

This tool can be used to create an DYNAMO-formatted EAM
setfl file for alloy systems, using any combination 
of the elements discussed in the paper and listed in
the EAM_code file, namely:

Cu, Ag, Au, Ni, Pd, Pt, Al, Pb, Fe, Mo, Ta, W, Mg, Co, Ti, Zr

Steps:

1) compile create.f -> a.out  (e.g. gfortran create.f)
2) edit the input file EAM.input to list 2 or more desired elements to include
3) a.out < EAM.input will create an EAM *.set file
4) in DYNAMO or LAMMPS lingo, this is a setfl file
   that can be used with the LAMMPS pair_style eam/alloy command
------------------------------------------------------------------------------
Zhou04_create_v2.f
==================

The FORTRAN script Zhou04_create_v2.f is an updated version of the create.f
script by X.W. Zhou (Sandia National Laboratories) for generating EAM/alloy
setfl interatomic potential files described in X.W. Zhou, R.A. Johnson, and
H.N.G. Wadley, Phys. Rev. B, 69, 144113 (2004).  This version was updated by
L.M. Hale (National Institute of Standards and Technology) with X.W. Zhou's
advice to fix spurious fluctuations in the original potential files caused by
conversions between single and double precision floating point numbers.

Instructions
------------

Compile the code with
    
    gfortran -o Zhou04_EAM_2 Zhou04_create_v2.f -std=legacy
    
The generated executable needs two input files: EAM_code and EAM.input.
EAM_code contains the parameters used to generate the tabulated potentials for
all of the elements.  EAM.input specifies which elements are to be included
in the resulting potential file.  EAM_code and examples of EAM.input for 
different alloys (EAM.input.Cu for Cu, EAM.input.CuTa for Cu-Ta, etc.) can be
downloaded from the NIST Interatomic Potential Repository
https://www.ctcms.nist.gov/potentials/.

Assuming that EAM_code and the EAM.input file you want to use are in the same
directory as the executable, potential files can be generated with
    
    ./Zhou04_EAM_2  < EAM.input
    
or on Windows
    
    ./Zhou04_EAM_2.exe < EAM.input
    
This will generate a potential file named *_Zhou04.eam.alloy, where * is a
list of the included elements.
------------------------------------------------------------------------------
EAM database tool (+python version)

Fortran version (create.f) by Xiaowang Zhou (Sandia), xzhou at sandia.gov
with revisions by Lucas Hale lucas.hale at nist.gov from https://www.ctcms.nist.gov/potentials/entry/2004--Zhou-X-W-Johnson-R-A-Wadley-H-N-G--Al/

Python version (create_eam.py) by Germain Clavier germain.clavier at gmail.com

Most parameters based on this paper:

X. W. Zhou, R. A. Johnson, and H. N. G. Wadley, Phys. Rev. B, 69,
144113 (2004).

Parameters for Cr were taken from:
m = 20, n = 20
Lin Z B, Johnson R A and Zhigilei L V, Phys. Rev. B 77 214108 (2008)

Or (Only three main parameters are different: beta(ntypes)=beta1(ntypes), A(ntypes), B(ntypes))
For EAM_Cr_Anand-2016_code
G. Anand et al., Scripta Materialia, 124, 90-94 (2016).

Parameters for Nb were taken from:
m = 20, n = 20
De-Ye Lin et al., J. Phys.: Condens. Matter 25 (2013) 105404

Parameters for Hf were taken from:
Maybe, m = 20, n = 20
K. Sasikumar et al., Chem. Mater. 2019, 31, 9, 3089-3102

Parameters for V were taken from:
m = 20, n = 20
S. Zhao et al., Acta Materialia, 219, 117233 (2021)

This tool can be used to create an DYNAMO-formatted EAM
setfl file for alloy systems, using any combination
of the elements discussed in the paper and listed in
the EAM_code file, namely:

Cu, Ag, Au, Ni, Pd, Pt, Al, Pb, Fe, Mo, Ta, W, Mg, Co, Ti, Zr, Cr, Nb, Hf, V

WARNING: Please note that the parameter sets used here are all optimized
for the pure metals of the individual elements and that mixing rules will
be applied for creating the inter-element interactions.  Those are inferior
to models where the mixed terms were specifically optimized for particular
alloys.  Thus any potential files created with this tool should be used
with care and test calculations (e.g. on multiple binary mixtures) performed
to gauge the error.

Steps (create.f):

1) compile create.f -> a.out  (e.g. gfortran create.f)
2) edit the input file EAM.input to list 2 or more desired elements to include
3) a.out < EAM.input will create an *.eam.alloy potential file

Steps (create_eam.py):

Usage: create_eam.py [-h] [-n NAME [NAME ...]] [-nr NR] [-nrho NRHO]

options:
  -n NAME [NAME ...], --names NAME [NAME ...]
                        Element names
  -nr NR                Number of point in r space [default 2000]
  -nrho NRHO            Number of point in rho space [default 2000]

1) you must have numpy installed
2) run "python create_eam.py -n Ta Cu" with the list of desired elements
3) this will create an *.eam.alloy potential file

in DYNAMO or LAMMPS context the created file is referred to as a setfl file
  that can be used with the LAMMPS pair_style eam/alloy command

Parameters of 18 elements: https://github.com/brucefan1983/GPUMD/tree/master/potentials/eam
------------------------------------------------------------------------------
EAM_code
Note: () indicates arguments for Zhou04_create_v2.f in the Fortran code.
Ref: A. Clement et al., Modelling Simul. Mater. Sci. Eng. 31 (2023) 015004.: https://iopscience.iop.org/article/10.1088/1361-651X/aca4ec

Line  1 : element : W
Line  2 : re      : 2.74084 (about the distance to the first neighbour fcc shell)
Line  3 : fe      : 3.48734 (about the element’s cohesive energy / characteristic atomic distance = Ec/(V^(1/3), V is 
the atomic volume of the pure element)
Line  4 : rhoe    : 37.234847 (the equilibrium electronic density [eV/A] evaluated from DFT))
Line  5 : rhos    : 37.234847 (almost same value as rhoe) (In some literature, it is the same value as rhoe.)
Line  6 : alpha   : 8.900114 (about 1.875 * beta)
Line  7 : beta    : 4.746728
Line  8 : A       : 0.882435
Line  9 : B       : 1.394592
Line 10 : chi (cai): 0.139209
Line 11 : lambda (ramda): 0.278417 (about 2 * chi)
Line 12 : Fn0 (Fi0): -4.946281 (=F0+0.0225*F2-0.003375*F3))
Line 13 : Fn1 (Fi1): -0.148818 (=0.85*(-0.3*F2+0.0675*F3))
Line 14 : Fn2 (Fi2): 0.365057 (=0.7225*(F2-0.45*F3))
Line 15 : Fn3 (Fi3): -4.432406 (=Fn0+Fn2-Fn1)
Line 16 : F0 (Fm0) : -4.96 (=Fe*(1-eta*ln(rhoh))*rhoh^eta - F2*0.00225 - F3*0.003375)
Line 17 : F1 (Fm1) : 0.00 (fix value: This comes from the need to keep a symmetric curve in compression or in tension around the equilibrium density, relegating anharmonic effect as a third order correction.)
Line 18 : F2 (Fm2) : 0.661935
Line 19 : F3 (Fm3) : 0.348147 (or F3-)
Line 20 : eta (fnn): -0.582714
Line 21 : Fe (Fn)  : -4.961306
Line 22 : atomic number (ielement) : 74
Line 23 : atomic mass (amass): 183.84
Line 24 : Fm4     : 0.348147 (or F3+) (almost same value as F3=Fm3)
Line 25 : beta1(=beta) : 4.746728
Line 26 : lambda1(=lambda=ramda) : 0.278417
Line 27 : rhol    : 0.85 (fix value ?) (Note: Anything other than Pt 0.25 will result in 0.85 (when I fitted it, it converged to an optimal solution with a value close to 0.85).)
Line 28 : rhoh    : 1.15 (fix value ?)

Note: For F2=(1/0.3)*(-Fe*eta^2*rhoh^(eta-1)*ln(rhoh)-3*F3*rhoh^2)
For W, the 1st derivative continuity equation (F2 = ...) was not satisfied. Multiplying the formula for F2 by -sqrt(8/3)/10 = -0.1633 gives the same result. It is close to the ideal c/a ratio for HCP.

Note: For F3=Fe*eta^2/0.45*rhoh^(eta-2)*(ln(rhoh)*(rhoh/0.15-eta+1)-1)
The constraints on the piecewise embedding function could however not all be simultaneously fullfilled strictly. To cope with this issue, the constraint derived from the continuity of
the second derivative (F3 = ...) of the embedding energy function was removed. For copper and zinc, there is therefore a cusp at ρ = 1.15ρe with a mismatch of the second derivative of 0.145 eV for Cu and 0.125 eV at high density in the
embedding term. The fact that this condition is not satisfied will trigger odd behaviour of the potential only at extremely large compression which is deemed not important in the context of our planned applications of these potentials for plasticity and fracture.

------------------------------------------------------------------------------
[1] https://zrflanl.wordpress.com/category/eam/

There are two format for EAM potential used in DYNAMO 86

"setfl" format:

Line 1 - 3 : comments
Line 4     : ntypes
Line 5     : nrho     drho     nr   dr   rcutoff
Line 6     : ielem(i)   amass(i)     blat(i)    lat(i)
Line 7     : embedding function
...
Line x     : ielem(j)   amass(j)     blat(j)    lat(j)
Line x+1   : embedding function
...
Line y     : electron density
...
Line p1    : pair potential between type1 and type1
...
Line p2    : pair potential between type2 and type1
...
Line p3    : pair potential between type2 and type 2
...

Note:
ntypes     : number of element types in the potential
nrho       : number of points for the electron density
drho       : increment of electron density
nr         : number of points for the pair potential
dr         : increment of inter-atomic distance
rcutoff    : cut-off distance
ielem(i)   : atomic number for element(i)
amass(i)   : atomic mass for element(i)
blat(i)    : lattice constant for elemnent(i)
lat(i)     : lattice type for element(i)

---------------------------
"funcfl" format:

Line 1     : comments
Line 2     : ielem   amass     blat    lat
Line 3     : nrho   drho   nr   dr    rcutoff
Line 4     : embedding function
...
Line x'   : pair potential
...
Line y'   : electron density
...

Note:
nrho       : number of points for the electron density
drho       : increment of electron density
nr         : number of points for the pair potential
dr         : increment of inter-atomic distance
rcutoff    : cut-off distance
ielem      : atomic number for this element
amass      : atomic mass for this element
blat       : lattice constant for this elemnent
lat        : lattice type for this element

  The pair potential is in the format of rp(r), where, 
r is inter-atomic distance, p(r) is the real pair potential. 
  This format is chosen for computational purpose when using code like DYNAMO. 
