LAMMPS (22 Dec 2022)
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
# Compute elastic constant tensor for a crystal
#
# Written by Aidan Thompson (Sandia, athomps@sandia.gov)
#
#  This script uses the following three include files.
#
#   init.mod      (must be modified for different crystal structures)
# 	       	  Define units, deformation parameters and initial
#		  configuration of the atoms and simulation cell.
#
#
#   potential.mod    (must be modified for different pair styles)
# 		     Define pair style and other attributes
#		     not stored in restart file
#
#
#   displace.mod    (displace.mod should not need to be modified)
# 		    Perform positive and negative box displacements
# 		    in direction ${dir} and size ${up}.
# 		    It uses the resultant changes
#		    in stress to compute one
# 		    row of the elastic stiffness tensor
#
#		    Inputs variables:
#		    	   dir = the Voigt deformation component
#		    		    (1,2,3,4,5,6)
#		    Global constants:
#       	    	   up = the deformation magnitude (strain units)
#       		   cfac = conversion from LAMMPS pressure units to
#               	   output units for elastic constants
#
#
#  To run this on a different system, it should only be necessary to
#  modify the files init.mod and potential.mod. In order to calculate
#  the elastic constants correctly, care must be taken to specify
#  the correct units in init.mod (units, cfac and cunits). It is also
#  important to verify that the minimization of energy w.r.t atom
#  positions in the deformed cell is fully converged.
#  One indication of this is that the elastic constants are insensitive
#  to the choice of the variable ${up} in init.mod. Another is to check
#  the final max and two-norm forces reported in the log file. If you know
#  that minimization is not required, you can set maxiter = 0.0 in
#  init.mod.
#

include init.mod
# NOTE: This script can be modified for different atomic structures,
# units, etc. See in.elastic for more info.
#

# Define the finite deformation size. Try several values of this
# variable to verify that results do not depend on it.
variable up equal 1.0e-6

# Define the amount of random jiggle for atoms
# This prevents atoms from staying on saddle points
variable atomjiggle equal 1.0e-5

# Uncomment one of these blocks, depending on what units
# you are using in LAMMPS and for output

# metal units, elastic constants in eV/A^3
#units		metal
#variable cfac equal 6.2414e-7
#variable cunits string eV/A^3

# metal units, elastic constants in GPa
units		metal
variable cfac equal 1.0e-4
variable cunits string GPa

# real units, elastic constants in GPa
#units		real
#variable cfac equal 1.01325e-4
#variable cunits string GPa

# Define minimization parameters
variable etol equal 0.0
variable ftol equal 1.0e-10
variable maxiter equal 1000
variable maxeval equal 100000
variable dmax equal 1.0e-2

# generate the box and atom positions using a diamond lattice

dimension    3
boundary     p p p
read_data    data.in
Reading data file ...
  triclinic box = (0.15393368 0.13331048 0.12424124) to (5.2733948 4.5668939 4.2562038) with tilt (-2.5597306 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 1 MPI processor grid
  reading atoms ...
  8 atoms
  reading velocities ...
  8 velocities
  read_data CPU = 0.001 seconds
#replicate    2 3 4
replicate    2 3 4
Replication is creating a 2x3x4 = 24 times larger system...
  triclinic box = (0.15393368 0.13331048 0.12424124) to (10.392856 13.434061 16.652091) with tilt (-7.6791917 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  192 atoms
  replicate CPU = 0.000 seconds
change_box   all triclinic
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.15393368 0.13331048 0.12424124) to (10.392856 13.434061 16.652091) with tilt (-7.6791917 0 0)

# Need to set mass to something, just to satisfy LAMMPS
mass 1 1.0e-20

include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Compute initial state
fix 3 all box/relax  aniso 0.0
minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
         0   0             -1417.5977     -6.2697549e-07 -11873.105     -11873.105      23746.211      1.1073095e-07 -1.9679809e-11 -4.4887165e-11  10.238922      13.30075       16.52785       2250.851     
         1   0             -1417.6026     -9.4516174     -11644.229     -11644.229      23260.103      1.1926425e-07  1.3499674e-11 -1.0747631e-11  10.23841       13.300085      16.529503      2250.851     
         2   0             -1417.6075     -17.991942     -11414.225     -11414.225      22774.475      1.2763699e-07  2.516229e-11  -6.322137e-13   10.237898      13.299419      16.531156      2250.8506    
         3   0             -1417.6122     -25.649564     -11183.127     -11183.127      22289.305      1.361735e-07   4.3125137e-12 -1.6437561e-11  10.237384      13.298752      16.532808      2250.8499    
         4   0             -1417.6169     -32.452738     -10950.967     -10950.967      21804.575      1.4482478e-07  5.0783962e-12  1.2644283e-12  10.23687       13.298085      16.534461      2250.8489    
         5   0             -1417.6214     -38.430084     -10717.778     -10717.778      21320.266      1.5343942e-07 -2.1914507e-12  1.9598651e-11  10.236356      13.297416      16.536114      2250.8476    
         6   0             -1417.6259     -43.609404     -10483.593     -10483.593      20836.358      1.6232246e-07  2.4245197e-11  2.5288599e-11  10.235841      13.296747      16.537767      2250.8461    
         7   0             -1417.6303     -48.018961     -10248.445     -10248.445      20352.832      1.710734e-07   3.4229468e-11  6.3221549e-12  10.235325      13.296077      16.53942       2250.8442    
         8   0             -1417.6345     -51.688772     -10012.367     -10012.367      19869.668      1.7986105e-07  4.0431268e-11 -4.678399e-11   10.234809      13.295407      16.541072      2250.8421    
         9   0             -1417.6387     -54.649096     -9775.3968     -9775.3968      19386.846      1.8868066e-07  1.0471398e-11 -2.6553103e-11  10.234292      13.294736      16.542725      2250.8398    
        10   0             -1417.6427     -56.930584     -9537.569      -9537.569       18904.346      1.977083e-07   3.5336571e-11  2.5288698e-11  10.233775      13.294064      16.544378      2250.8373    
        11   0             -1417.6467     -58.564282     -9298.9205     -9298.9205      18422.148      2.0695315e-07  2.423606e-11  -3.161091e-11   10.233258      13.293392      16.546031      2250.8346    
        12   0             -1417.6505     -59.581599     -9059.4881     -9059.4881      17940.231      2.1603272e-07  1.0675796e-11 -1.6437695e-11  10.23274       13.29272       16.547684      2250.8316    
        13   0             -1417.6543     -60.014763     -8819.3095     -8819.3095      17458.575      2.2526058e-07  1.2921611e-11 -6.3221989e-12  10.232222      13.292047      16.549336      2250.8286    
        14   0             -1417.6579     -59.897521     -8578.4234     -8578.4234      16977.154      2.3470818e-07  2.0858656e-11  1.0747754e-11  10.231704      13.291374      16.550989      2250.8253    
        15   0             -1417.6615     -59.262418     -8336.8682     -8336.8682      16495.949      2.4389344e-07  2.0521584e-11 -4.0462191e-11  10.231186      13.2907        16.552642      2250.822     
        16   0             -1417.6649     -58.142423     -8094.6829     -8094.6829      16014.938      2.533623e-07   3.0833205e-12  0              10.230667      13.290026      16.554295      2250.8185    
        17   0             -1417.6683     -56.570943     -7851.9068     -7851.9068      15534.101      2.6265228e-07 -8.3680118e-12 -1.9598935e-11  10.230148      13.289353      16.555947      2250.815     
        18   0             -1417.6715     -54.581825     -7608.5802     -7608.5802      15053.415      2.7245377e-07  3.0231332e-12 -4.678463e-11   10.229629      13.288679      16.5576        2250.8113    
        19   0             -1417.6747     -52.209301     -7364.7436     -7364.7436      14572.859      2.8210388e-07  2.5883903e-11  3.8565772e-11  10.229111      13.288004      16.559253      2250.8076    
        20   0             -1417.6777     -49.48745      -7120.4371     -7120.4371      14092.412      2.9168417e-07 -6.2108259e-12 -4.4255877e-12  10.228592      13.28733       16.560906      2250.8039    
        21   0             -1417.6807     -46.451578     -6875.7027     -6875.7027      13612.051      3.016062e-07  -1.005977e-11  -6.3222787e-12  10.228073      13.286656      16.562559      2250.8001    
        22   0             -1417.6835     -43.137498     -6630.5829     -6630.5829      13131.753      3.1148655e-07 -2.5952874e-12 -3.7933736e-11  10.227554      13.285982      16.564211      2250.7964    
        23   0             -1417.6862     -39.581536     -6385.1211     -6385.1211      12651.498      3.2167134e-07  1.3972036e-12  1.201237e-11   10.227035      13.285308      16.565864      2250.7927    
        24   0             -1417.6889     -35.820543     -6139.3611     -6139.3611      12171.261      3.3168198e-07  1.2431304e-11  4.4256171e-12  10.226517      13.284635      16.567517      2250.789     
        25   0             -1417.6914     -31.891921     -5893.3476     -5893.3476      11691.02       3.4197621e-07 -1.112858e-11   2.0231425e-11  10.225998      13.283962      16.56917       2250.7853    
        26   0             -1417.6938     -27.83364      -5647.126      -5647.126       11210.751      3.5215791e-07  2.8712888e-12  8.8512626e-12  10.22548       13.283289      16.570822      2250.7818    
        27   0             -1417.6962     -23.684269     -5400.7422     -5400.7422      10730.432      3.6266081e-07  5.5079684e-12 -1.2012446e-11  10.224962      13.282616      16.572475      2250.7783    
        28   0             -1417.6984     -19.482999     -5154.2433     -5154.2433      10250.038      3.7326678e-07 -1.1440736e-11  2.2128223e-11  10.224445      13.281944      16.574128      2250.7749    
        29   0             -1417.7005     -15.26968      -4907.6771     -4907.6771      9769.5451      3.8393502e-07  7.9325842e-12  3.2876264e-11  10.223928      13.281272      16.575781      2250.7717    
        30   0             -1417.7025     -11.084856     -4661.0921     -4661.0921      9288.9296      3.9465543e-07  4.266363e-12   1.8334865e-11  10.223411      13.280601      16.577434      2250.7687    
        31   0             -1417.7044     -6.9698064     -4414.538      -4414.538       8808.1665      4.0598721e-07 -3.4668102e-12 -5.5636901e-11  10.222895      13.279931      16.579086      2250.7658    
        32   0             -1417.7062     -2.9665966     -4168.0653     -4168.0653      8327.2308      4.1699559e-07 -4.1611033e-12  6.9546209e-12  10.22238       13.279261      16.580739      2250.7632    
        33   0             -1417.7079      0.88186591    -3921.7257     -3921.7257      7846.097       4.2855969e-07  1.1996487e-12  2.5289558e-11  10.221865      13.278592      16.582392      2250.7607    
        34   0             -1417.7095      4.5317656     -3675.572      -3675.572       7364.7393      4.3987466e-07 -2.2955729e-12  2.7186301e-11  10.22135       13.277924      16.584045      2250.7586    
        35   0             -1417.711       7.9383015     -3429.6583     -3429.6583      6883.1316      4.5152469e-07 -1.1499484e-12 -4.0463366e-11  10.220837      13.277257      16.585698      2250.7567    
        36   0             -1417.7124      11.055595     -3184.0401     -3184.0401      6401.247       4.6351735e-07  5.2456207e-12 -3.1612027e-11  10.220324      13.27659       16.58735       2250.7551    
        37   0             -1417.7137      13.836579     -2938.7743     -2938.7743      5919.0584      4.7550427e-07  7.4214215e-13  5.2475995e-11  10.219812      13.275925      16.589003      2250.7538    
        38   0             -1417.7149      16.233313     -2693.9189     -2693.9189      5436.5378      4.8748386e-07  4.7134073e-12  6.9546528e-12  10.219301      13.275261      16.590656      2250.7528    
        39   0             -1417.716       18.196387     -2449.5338     -2449.5338      4953.6568      5.0027327e-07  4.6430222e-12 -5.1843788e-11  10.21879       13.274598      16.592309      2250.7523    
        40   0             -1417.717       19.673903     -2205.6821     -2205.6821      4470.386       5.1281034e-07  2.2145427e-11 -1.6438275e-11  10.218281      13.273937      16.593961      2250.7521    
        41   0             -1417.7179      20.612096     -1962.4295     -1962.4295      3986.6953      5.2600863e-07 -2.7454646e-11 -1.0115861e-11  10.217773      13.273276      16.595614      2250.7524    
        42   0             -1417.7186      20.954901     -1719.8447     -1719.8447      3502.5541      5.3936708e-07 -1.3583305e-11 -5.3740492e-11  10.217266      13.272618      16.597267      2250.7531    
        43   0             -1417.7193      20.643495     -1478          -1478           3017.9305      5.5326408e-07  1.336226e-11  -3.5405482e-11  10.21676       13.27196       16.59892       2250.7543    
        44   0             -1417.7199      19.615662     -1236.9726     -1236.9726      2532.7922      5.6740655e-07 -1.571648e-12  -1.7070487e-11  10.216255      13.271305      16.600573      2250.7561    
        45   0             -1417.7204      17.804854     -996.84601     -996.84601      2047.1066      5.8217509e-07  2.6904142e-12  8.8513547e-12  10.215752      13.270651      16.602225      2250.7583    
        46   0             -1417.7208      15.138728     -757.7128      -757.7128       1560.8418      5.9749002e-07  2.6030458e-12 -5.4372538e-11  10.21525       13.269999      16.603878      2250.7612    
        47   0             -1417.721       11.536592     -519.68039     -519.68039      1073.9706      6.1356533e-07 -6.6125657e-13 -5.0579027e-12  10.214749      13.269349      16.605531      2250.7647    
        48   0             -1417.7212      6.9041649     -282.88595     -282.88595      586.4844       6.3126462e-07 -5.3838905e-13  2.4657231e-11  10.21425       13.268701      16.607184      2250.7688    
        49   0             -1417.7213      1.1185034     -47.558978     -47.558978      98.473466      6.5218332e-07 -4.2743802e-12 -4.9314357e-11  10.213753      13.268054      16.608837      2250.7736    
        50   0             -1417.7213     -3.6834984      104.6799       104.6799      -220.4103       6.7745036e-07  6.7770726e-12 -3.2876196e-11  10.213426      13.26763       16.609921      2250.7765    
        51   0             -1417.7222      79.109292      80.52391       80.523909      76.280057      8.1178801e-07  2.3847597e-11 -1.2645284e-12  10.213297      13.267462      16.609561      2250.6709    
        52   0             -1417.7222     -0.081083996    0.27896936     0.27896849    -0.80118984     7.0410379e-07 -1.7469677e-11 -1.5174058e-11  10.213362      13.267547      16.609659      2250.7128    
        53   0             -1417.7222     -0.061673257   -0.064324151   -0.064324326   -0.056371293    5.0644051e-07 -1.5614906e-11 -1.0116039e-11  10.213363      13.267548      16.609657      2250.7128    
        54   0             -1417.7222      0.0050863409   0.0033386508   0.0033385334   0.0085818384   4.8981575e-07 -2.3723667e-11 -2.5290097e-12  10.213363      13.267548      16.609657      2250.7127    
        55   0             -1417.7222     -0.00042556098  0.072934496    0.072938804   -0.14714998    -7.6879271e-07  8.0223201e-12 -2.5290097e-11  10.213363      13.267547      16.609657      2250.7127    
        56   0             -1417.7222     -0.028876493   -0.028701051   -0.028696898   -0.02923153    -6.5727318e-07  1.8341803e-11 -2.1496582e-11  10.213363      13.267548      16.609657      2250.7128    
        57   0             -1417.7222     -1.6581961e-05 -0.00022548473 -0.00022259532  0.00039833417 -2.9209367e-07 -1.9301296e-11  7.5870291e-12  10.213363      13.267547      16.609657      2250.7127    
        58   0             -1417.7222      3.5122764e-05  3.3277998e-05  3.3899343e-05  3.8190951e-05  3.6266379e-07  1.658119e-12  -3.1612621e-12  10.213363      13.267547      16.609657      2250.7127    
        59   0             -1417.7222     -8.667464e-07  -9.8496899e-07 -5.7079117e-07 -1.044479e-06   4.2258203e-07  1.600852e-11   1.5806311e-11  10.213363      13.267547      16.609657      2250.7127    
        60   0             -1417.7222      5.9374932e-08  2.9662124e-05 -2.9676823e-05  1.9282372e-07  1.7648866e-05  1.3166472e-11  2.592235e-11   10.213363      13.267547      16.609657      2250.7127    
        61   0             -1417.7222     -2.2971434e-08 -1.9571374e-08 -2.454973e-08  -2.4793199e-08  5.1706204e-07  2.5007621e-11  2.4657845e-11  10.213363      13.267547      16.609657      2250.7127    
Loop time of 0.040861 on 4 procs for 61 steps with 192 atoms

57.4% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.59765368657  -1417.72224585109  -1417.72224585109
  Force two-norm initial, final = 40.857928 5.9576212e-11
  Force max component initial, final = 33.360358 3.4657559e-11
  Final line search alpha, max atom move = 1 3.4657559e-11
  Iterations, force evaluations = 61 73

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.035351   | 0.035471   | 0.035596   |   0.1 | 86.81
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001644   | 0.001823   | 0.001947   |   0.3 |  4.46
Output  | 0.000628   | 0.0006745  | 0.000786   |   0.0 |  1.65
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.002892   |            |       |  7.08

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2224 max        2192 min
Histogram: 1 0 0 0 0 2 0 0 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

variable tmp equal pxx
variable pxx0 equal ${tmp}
variable pxx0 equal -1.9571373907148e-08
variable tmp equal pyy
variable pyy0 equal ${tmp}
variable pyy0 equal -2.4549729524815e-08
variable tmp equal pzz
variable pzz0 equal ${tmp}
variable pzz0 equal -2.47931985740322e-08
variable tmp equal pyz
variable pyz0 equal ${tmp}
variable pyz0 equal 2.46578446899942e-11
variable tmp equal pxz
variable pxz0 equal ${tmp}
variable pxz0 equal 2.50076210576045e-11
variable tmp equal pxy
variable pxy0 equal ${tmp}
variable pxy0 equal 5.17062041974406e-07

variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 10.2133628231344
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 13.2675474943527
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 16.6096567387831

# These formulas define the derivatives w.r.t. strain components
# Constants uses $, variables use v_
variable d1 equal -(v_pxx1-${pxx0})/(v_delta/v_len0)*${cfac}
variable d1 equal -(v_pxx1--1.9571373907148e-08)/(v_delta/v_len0)*${cfac}
variable d1 equal -(v_pxx1--1.9571373907148e-08)/(v_delta/v_len0)*0.0001
variable d2 equal -(v_pyy1-${pyy0})/(v_delta/v_len0)*${cfac}
variable d2 equal -(v_pyy1--2.4549729524815e-08)/(v_delta/v_len0)*${cfac}
variable d2 equal -(v_pyy1--2.4549729524815e-08)/(v_delta/v_len0)*0.0001
variable d3 equal -(v_pzz1-${pzz0})/(v_delta/v_len0)*${cfac}
variable d3 equal -(v_pzz1--2.47931985740322e-08)/(v_delta/v_len0)*${cfac}
variable d3 equal -(v_pzz1--2.47931985740322e-08)/(v_delta/v_len0)*0.0001
variable d4 equal -(v_pyz1-${pyz0})/(v_delta/v_len0)*${cfac}
variable d4 equal -(v_pyz1-2.46578446899942e-11)/(v_delta/v_len0)*${cfac}
variable d4 equal -(v_pyz1-2.46578446899942e-11)/(v_delta/v_len0)*0.0001
variable d5 equal -(v_pxz1-${pxz0})/(v_delta/v_len0)*${cfac}
variable d5 equal -(v_pxz1-2.50076210576045e-11)/(v_delta/v_len0)*${cfac}
variable d5 equal -(v_pxz1-2.50076210576045e-11)/(v_delta/v_len0)*0.0001
variable d6 equal -(v_pxy1-${pxy0})/(v_delta/v_len0)*${cfac}
variable d6 equal -(v_pxy1-5.17062041974406e-07)/(v_delta/v_len0)*${cfac}
variable d6 equal -(v_pxy1-5.17062041974406e-07)/(v_delta/v_len0)*0.0001

displace_atoms all random ${atomjiggle} ${atomjiggle} ${atomjiggle} 87287 units box
displace_atoms all random 1e-05 ${atomjiggle} ${atomjiggle} 87287 units box
displace_atoms all random 1e-05 1e-05 ${atomjiggle} 87287 units box
displace_atoms all random 1e-05 1e-05 1e-05 87287 units box
Displacing atoms ...

# Write restart
unfix 3
write_restart restart.equil
System init for write_restart ...

# uxx Perturbation

variable dir equal 1
include displace.mod
# NOTE: This script should not need to be
# modified. See in.elastic for more info.
#
# Find which reference length to use

if "${dir} == 1" then    "variable len0 equal ${lx0}"
variable len0 equal ${lx0}
variable len0 equal 10.2133628231344
if "${dir} == 2" then    "variable len0 equal ${ly0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"
if "${dir} == 4" then    "variable len0 equal ${lz0}"
if "${dir} == 5" then    "variable len0 equal ${lz0}"
if "${dir} == 6" then    "variable len0 equal ${ly0}"

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Negative deformation

variable delta equal -${up}*${len0}
variable delta equal -1e-06*${len0}
variable delta equal -1e-06*10.2133628231344
variable deltaxy equal -${up}*xy
variable deltaxy equal -1e-06*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -1e-06*xz
variable deltayz equal -${up}*yz
variable deltayz equal -1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box
change_box all x delta 0 -1.02133628231344e-05 xy delta ${deltaxy} xz delta ${deltaxz} remap units box
change_box all x delta 0 -1.02133628231344e-05 xy delta 7.6600221173548e-06 xz delta ${deltaxz} remap units box
change_box all x delta 0 -1.02133628231344e-05 xy delta 7.6600221173548e-06 xz delta -0 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380066 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380066 13.417459 16.692995) with tilt (-7.6600145 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380066 13.417459 16.692995) with tilt (-7.6600145 0 0)
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222      4.2074342      6.4340982      3.5495275      2.638677       0.18812775     0.024607506    0.068805226    10.213353      13.267547      16.609657      2250.7105    
        62   0             -1417.7222      4.2442613      6.8437371      3.2746029      2.6144438     -0.052617684    0.012191915    0.034087154    10.213353      13.267547      16.609657      2250.7105    
        63   0             -1417.7222      4.2477378      6.6988336      3.432245       2.6121349      0.031233416    0.0019133128   0.0053470251   10.213353      13.267547      16.609657      2250.7105    
        64   0             -1417.7222      4.2417973      6.7654351      3.3440783      2.6158784     -0.022840533   -0.0010852653  -0.003034752    10.213353      13.267547      16.609657      2250.7105    
        65   0             -1417.7222      4.2424918      6.7374185      3.3746221      2.6154349     -0.0010421209  -0.0010090386  -0.0028219476   10.213353      13.267547      16.609657      2250.7105    
        66   0             -1417.7222      4.2440327      6.7563737      3.3612663      2.6144581     -0.0055682454  -6.1936431e-05 -0.0001734258   10.213353      13.267547      16.609657      2250.7105    
        67   0             -1417.7222      4.243123       6.75444        3.3598953      2.6150336     -0.00052898223  0.0003090606   0.000863911    10.213353      13.267547      16.609657      2250.7105    
        68   0             -1417.7222      4.2429526      6.7548993      3.3588174      2.6151412      0.0013935816   0.00016002885  0.00044748317  10.213353      13.267547      16.609657      2250.7105    
        69   0             -1417.7222      4.2433455      6.7574204      3.3577237      2.6148925      0.00057737263 -4.7434627e-05 -0.00013263607  10.213353      13.267547      16.609657      2250.7105    
        70   0             -1417.7222      4.2432531      6.7548977      3.3599106      2.6149509      0.0012437946  -9.9316934e-05 -0.00027766423  10.213353      13.267547      16.609657      2250.7105    
        71   0             -1417.7222      4.2430895      6.7552492      3.3589647      2.6150545     -0.00042198333 -2.1497804e-05 -6.0144126e-05  10.213353      13.267547      16.609657      2250.7105    
        72   0             -1417.7222      4.2432487      6.7541369      3.3606555      2.6149537     -0.00025488479  5.0855389e-05  0.00014218205  10.213353      13.267547      16.609657      2250.7105    
        73   0             -1417.7222      4.2432462      6.7546772      3.3601061      2.6149552     -0.0005719079   4.0013083e-05  0.00011187024  10.213353      13.267547      16.609657      2250.7105    
        74   0             -1417.7222      4.2431654      6.7546205      3.3598693      2.6150064     -0.00021071106 -1.6655246e-06 -4.649216e-06   10.213353      13.267547      16.609657      2250.7105    
        75   0             -1417.7222      4.2432086      6.7549191      3.3597278      2.614979       6.8883911e-05 -2.1184031e-05 -5.9228564e-05  10.213353      13.267547      16.609657      2250.7105    
        76   0             -1417.7222      4.2432194      6.7551629      3.3595233      2.6149722      7.8324233e-05 -8.8858846e-06 -2.4845355e-05  10.213353      13.267547      16.609657      2250.7105    
        77   0             -1417.7222      4.2431922      6.7549648      3.3596224      2.6149894      0.00014677751  8.6379717e-06  2.4148801e-05  10.213353      13.267547      16.609657      2250.7105    
        78   0             -1417.7222      4.2432044      6.7550669      3.3595645      2.6149817     -1.6546214e-05  8.5611493e-06  2.3936673e-05  10.213353      13.267547      16.609657      2250.7105    
        79   0             -1417.7222      4.2432118      6.754891       3.3597673      2.614977       1.1905157e-05 -1.0662425e-06 -2.9799288e-06  10.213353      13.267547      16.609657      2250.7105    
        80   0             -1417.7222      4.2431998      6.7549381      3.3596768      2.6149846     -5.9601066e-05 -5.5029837e-06 -1.538529e-05   10.213353      13.267547      16.609657      2250.7105    
        81   0             -1417.7222      4.243203       6.7548971      3.3597294      2.6149826     -8.8877317e-06 -2.1647519e-06 -6.052771e-06   10.213353      13.267547      16.609657      2250.7105    
        82   0             -1417.7222      4.2432066      6.7549507      3.3596887      2.6149803     -1.434089e-05   1.288181e-06   3.6013033e-06  10.213353      13.267547      16.609657      2250.7105    
        83   0             -1417.7222      4.2432034      6.754935       3.3596928      2.6149823      5.4262436e-06  1.3788706e-06  3.8551599e-06  10.213353      13.267547      16.609657      2250.7105    
        84   0             -1417.7222      4.2432037      6.7549526      3.3596764      2.6149821     -1.5036008e-06  1.5174469e-07  4.2437142e-07  10.213353      13.267547      16.609657      2250.7105    
        85   0             -1417.7222      4.2432046      6.7549471      3.3596852      2.6149815      3.5422923e-06 -3.7066303e-07 -1.036307e-06   10.213353      13.267547      16.609657      2250.7105    
        86   0             -1417.7222      4.2432041      6.7549504      3.3596801      2.6149819      3.703966e-07  -2.3776381e-07 -6.6474454e-07  10.213353      13.267547      16.609657      2250.7105    
        87   0             -1417.7222      4.243204       6.7549471      3.359683       2.6149819      1.6783692e-06  5.882187e-08   1.6444333e-07  10.213353      13.267547      16.609657      2250.7105    
        88   0             -1417.7222      4.2432043      6.7549484      3.3596828      2.6149817      3.6043988e-07  1.1873499e-07  3.3198597e-07  10.213353      13.267547      16.609657      2250.7105    
        89   0             -1417.7222      4.2432042      6.7549464      3.3596842      2.6149818      7.7366183e-07  2.3407519e-08  6.5407211e-08  10.213353      13.267547      16.609657      2250.7105    
        90   0             -1417.7222      4.2432041      6.754947       3.3596834      2.6149819     -5.7188554e-08 -5.5069295e-08 -1.5408007e-07  10.213353      13.267547      16.609657      2250.7105    
        91   0             -1417.7222      4.2432042      6.7549468      3.359684       2.6149818      3.2986191e-07 -3.3243565e-08 -9.2922865e-08  10.213353      13.267547      16.609657      2250.7105    
        92   0             -1417.7222      4.2432042      6.7549473      3.3596834      2.6149818      2.7921813e-07  8.8782339e-09  2.4810242e-08  10.213353      13.267547      16.609657      2250.7105    
        93   0             -1417.7222      4.2432041      6.7549472      3.3596834      2.6149818      5.1963425e-07  1.698628e-08   4.747525e-08   10.213353      13.267547      16.609657      2250.7105    
        94   0             -1417.7222      4.2432042      6.7549474      3.3596833      2.6149818      5.3513899e-07  4.3599939e-09  1.2255593e-08  10.213353      13.267547      16.609657      2250.7105    
        95   0             -1417.7222      4.2432042      6.7549473      3.3596833      2.6149818      5.5003677e-07 -3.1791638e-09 -8.9160327e-09  10.213353      13.267547      16.609657      2250.7105    
        96   0             -1417.7222      4.2432042      6.7549473      3.3596833      2.6149818      5.2701296e-07 -2.959621e-09  -8.2287736e-09  10.213353      13.267547      16.609657      2250.7105    
        97   0             -1417.7222      4.2432042      6.7549473      3.3596834      2.6149818      5.1394903e-07 -3.1090489e-10 -8.2951601e-10  10.213353      13.267547      16.609657      2250.7105    
        98   0             -1417.7222      4.2432042      6.7549473      3.3596834      2.6149818      5.068561e-07   6.9111372e-10  1.91383e-09    10.213353      13.267547      16.609657      2250.7105    
Loop time of 0.0387118 on 4 procs for 37 steps with 192 atoms

60.5% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563378  -1417.72224584635  -1417.72224584635
  Force two-norm initial, final = 0.0034363342 5.1672997e-11
  Force max component initial, final = 0.00036780386 8.198224e-12
  Final line search alpha, max atom move = 1 8.198224e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.035796   | 0.035909   | 0.0361     |   0.1 | 92.76
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001602   | 0.0017592  | 0.001904   |   0.3 |  4.54
Output  | 0.000504   | 0.0005265  | 0.000584   |   0.0 |  1.36
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.0005168  |            |       |  1.33

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal 6.75494729602508
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal 3.35968336788865
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal 2.61498183476366
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.0685609788613e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 6.91113720828663e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.91383001323034e-09

# Compute elastic constant from pressure tensor

variable C1neg equal ${d1}
variable C1neg equal 675.494731559645
variable C2neg equal ${d2}
variable C2neg equal 335.968339243838
variable C3neg equal ${d3}
variable C3neg equal 261.498185955686
variable C4neg equal ${d4}
variable C4neg equal 1.88917216854035e-07
variable C5neg equal ${d5}
variable C5neg equal 6.66106099771059e-08
variable C6neg equal ${d6}
variable C6neg equal -1.0205944088276e-06

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Positive deformation

variable delta equal ${up}*${len0}
variable delta equal 1e-06*${len0}
variable delta equal 1e-06*10.2133628231344
variable deltaxy equal ${up}*xy
variable deltaxy equal 1e-06*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1e-06*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box
change_box all x delta 0 1.02133628231344e-05 xy delta ${deltaxy} xz delta ${deltaxz} remap units box
change_box all x delta 0 1.02133628231344e-05 xy delta -7.6600221173548e-06 xz delta ${deltaxz} remap units box
change_box all x delta 0 1.02133628231344e-05 xy delta -7.6600221173548e-06 xz delta 0 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380086 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380086 13.417459 16.692995) with tilt (-7.6600298 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380086 13.417459 16.692995) with tilt (-7.6600298 0 0)
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222     -4.3136359     -7.5760453     -2.7955542     -2.5693082      0.18812769     0.024607082    0.068809433    10.213373      13.267547      16.609657      2250.715     
        62   0             -1417.7222     -4.241292      -6.9207481     -3.1870993     -2.6160286     -0.052235043    0.012211205    0.034139857    10.213373      13.267547      16.609657      2250.715     
        63   0             -1417.7222     -4.2342375     -6.924299      -3.1578086     -2.6206048      0.030834007    0.0019087359   0.0053350448   10.213373      13.267547      16.609657      2250.715     
        64   0             -1417.7222     -4.2459071     -6.7810829     -3.343403      -2.6132354     -0.022415855   -0.001105454   -0.0030917766   10.213373      13.267547      16.609657      2250.715     
        65   0             -1417.7222     -4.2445782     -6.7727603     -3.3468938     -2.6140807     -0.0012750664  -0.001016115   -0.0028415426   10.213373      13.267547      16.609657      2250.715     
        66   0             -1417.7222     -4.2415505     -6.7410664     -3.3675865     -2.6159987     -0.0054705595  -5.9500662e-05 -0.00016679228  10.213373      13.267547      16.609657      2250.715     
        67   0             -1417.7222     -4.2433277     -6.748473      -3.366636      -2.6148741     -0.00053730086  0.00031093251  0.000869302    10.213373      13.267547      16.609657      2250.715     
        68   0             -1417.7222     -4.2436561     -6.7541114     -3.3621904     -2.6146664      0.0013535875   0.00015950849  0.00044592541  10.213373      13.267547      16.609657      2250.715     
        69   0             -1417.7222     -4.2428947     -6.7539044     -3.3596315     -2.6151484      0.00059928568 -4.8484147e-05 -0.00013550383  10.213373      13.267547      16.609657      2250.715     
        70   0             -1417.7222     -4.2430726     -6.7567159     -3.3574659     -2.6150358      0.0012069313  -0.00010023198 -0.0002802733   10.213373      13.267547      16.609657      2250.715     
        71   0             -1417.7222     -4.2433904     -6.7550898     -3.3602466     -2.6148347     -0.00039345217 -2.1721996e-05 -6.0741604e-05  10.213373      13.267547      16.609657      2250.715     
        72   0             -1417.7222     -4.243083      -6.7547777     -3.3594421     -2.6150293     -0.00026029715  5.0751064e-05  0.0001418756   10.213373      13.267547      16.609657      2250.715     
        73   0             -1417.7222     -4.2430874     -6.7542291     -3.3600065     -2.6150265     -0.00055400882  3.9944045e-05  0.00011168754  10.213373      13.267547      16.609657      2250.715     
        74   0             -1417.7222     -4.2432441     -6.7550437     -3.3597611     -2.6149273     -0.00020427505 -1.8901327e-06 -5.2821533e-06  10.213373      13.267547      16.609657      2250.715     
        75   0             -1417.7222     -4.24316       -6.7551834     -3.3593161     -2.6149805      6.557515e-05  -2.1124828e-05 -5.9061552e-05  10.213373      13.267547      16.609657      2250.715     
        76   0             -1417.7222     -4.2431393     -6.7549432     -3.3594812     -2.6149936      7.6263119e-05 -8.7048252e-06 -2.4340647e-05  10.213373      13.267547      16.609657      2250.715     
        77   0             -1417.7222     -4.2431916     -6.7549406     -3.3596738     -2.6149605      0.00013839056  8.764693e-06   2.4504345e-05  10.213373      13.267547      16.609657      2250.715     
        78   0             -1417.7222     -4.2431683     -6.7546064     -3.3599231     -2.6149753     -1.4980835e-05  8.5790036e-06  2.3986365e-05  10.213373      13.267547      16.609657      2250.715     
        79   0             -1417.7222     -4.243154      -6.7547379     -3.3597398     -2.6149844      9.8380257e-06 -1.11107e-06   -3.1052276e-06  10.213373      13.267547      16.609657      2250.715     
        80   0             -1417.7222     -4.2431769     -6.7548173     -3.3597435     -2.6149699     -5.5286996e-05 -5.5142604e-06 -1.5417161e-05  10.213373      13.267547      16.609657      2250.715     
        81   0             -1417.7222     -4.2431708     -6.7549501     -3.3595885     -2.6149737     -8.4736203e-06 -2.1358174e-06 -5.9717965e-06  10.213373      13.267547      16.609657      2250.715     
        82   0             -1417.7222     -4.2431639     -6.7549088     -3.3596049     -2.6149781     -1.2919316e-05  1.3297324e-06  3.7175849e-06  10.213373      13.267547      16.609657      2250.715     
        83   0             -1417.7222     -4.2431701     -6.7549055     -3.3596306     -2.6149742      5.0965523e-06  1.3980566e-06  3.9088436e-06  10.213373      13.267547      16.609657      2250.715     
        84   0             -1417.7222     -4.2431695     -6.7548622     -3.3596717     -2.6149746     -1.2421314e-06  1.5296518e-07  4.2773351e-07  10.213373      13.267547      16.609657      2250.715     
        85   0             -1417.7222     -4.2431677     -6.754857      -3.3596704     -2.6149757      3.1846131e-06 -3.6994758e-07 -1.0343551e-06  10.213373      13.267547      16.609657      2250.715     
        86   0             -1417.7222     -4.2431687     -6.7548557     -3.3596752     -2.6149751      3.7353215e-07 -2.3754213e-07 -6.6411476e-07  10.213373      13.267547      16.609657      2250.715     
        87   0             -1417.7222     -4.2431689     -6.7548641     -3.3596678     -2.6149749      1.5567215e-06  6.0274166e-08  1.6855327e-07  10.213373      13.267547      16.609657      2250.715     
        88   0             -1417.7222     -4.2431683     -6.7548652     -3.3596645     -2.6149753      4.0326758e-07  1.184513e-07   3.3115958e-07  10.213373      13.267547      16.609657      2250.715     
        89   0             -1417.7222     -4.2431686     -6.7548678     -3.359663      -2.6149751      7.4935684e-07  2.25073e-08    6.2943195e-08  10.213373      13.267547      16.609657      2250.715     
        90   0             -1417.7222     -4.2431687     -6.7548663     -3.3596649     -2.614975       6.8466547e-09 -5.5730712e-08 -1.5584375e-07  10.213373      13.267547      16.609657      2250.715     
        91   0             -1417.7222     -4.2431685     -6.7548655     -3.3596649     -2.6149752      3.3877758e-07 -3.3439439e-08 -9.3449344e-08  10.213373      13.267547      16.609657      2250.715     
        92   0             -1417.7222     -4.2431686     -6.7548648     -3.3596658     -2.6149751      3.0059116e-07  9.1301268e-09  2.5540444e-08  10.213373      13.267547      16.609657      2250.715     
        93   0             -1417.7222     -4.2431686     -6.754865      -3.3596658     -2.6149751      5.1476708e-07  1.6993553e-08  4.7537748e-08  10.213373      13.267547      16.609657      2250.715     
        94   0             -1417.7222     -4.2431686     -6.754865      -3.3596657     -2.6149751      5.3185527e-07  4.3463807e-09  1.2088654e-08  10.213373      13.267547      16.609657      2250.715     
        95   0             -1417.7222     -4.2431686     -6.7548651     -3.3596656     -2.6149751      5.4545595e-07 -3.2726239e-09 -9.1335094e-09  10.213373      13.267547      16.609657      2250.715     
        96   0             -1417.7222     -4.2431686     -6.7548651     -3.3596656     -2.6149751      5.2501968e-07 -2.9902586e-09 -8.3526785e-09  10.213373      13.267547      16.609657      2250.715     
        97   0             -1417.7222     -4.2431686     -6.7548651     -3.3596656     -2.6149751      5.131599e-07  -3.1477434e-10 -8.6492046e-10  10.213373      13.267547      16.609657      2250.715     
        98   0             -1417.7222     -4.2431686     -6.7548651     -3.3596656     -2.6149751      5.0671536e-07  6.7061448e-10  1.8904329e-09  10.213373      13.267547      16.609657      2250.715     
Loop time of 0.0397 on 4 procs for 37 steps with 192 atoms

49.2% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563217  -1417.72224584635  -1417.72224584635
  Force two-norm initial, final = 0.0034503478 5.1428769e-11
  Force max component initial, final = 0.00035926167 8.0931168e-12
  Final line search alpha, max atom move = 1 8.0931168e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.036306   | 0.036397   | 0.036504   |   0.0 | 91.68
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.002094   | 0.002204   | 0.002295   |   0.2 |  5.55
Output  | 0.000495   | 0.00053025 | 0.000605   |   0.0 |  1.34
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.0005692  |            |       |  1.43

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pe
variable e1 equal ${tmp}
variable e1 equal -1417.72224584635
variable tmp equal press
variable p1 equal ${tmp}
variable p1 equal -4.24316860018036
variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal -6.75486511086101
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal -3.35966556974923
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal -2.61497511993085
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.06715356528099e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 6.70614476064089e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.89043286913336e-09

# Compute elastic constant from pressure tensor

variable C1pos equal ${d1}
variable C1pos equal 675.486509128964
variable C2pos equal ${d2}
variable C2pos equal 335.96655451995
variable C3pos equal ${d3}
variable C3pos equal 261.497509513765
variable C4pos equal ${d4}
variable C4pos equal -1.86577502444337e-07
variable C5pos equal ${d5}
variable C5pos equal -6.45606855006484e-08
variable C6pos equal ${d6}
variable C6pos equal 1.0346685446307e-06

# Combine positive and negative

variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
variable C11 equal 0.5*(${C1neg}+${C1pos})
variable C11 equal 0.5*(675.494731559645+${C1pos})
variable C11 equal 0.5*(675.494731559645+675.486509128964)
variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
variable C21 equal 0.5*(${C2neg}+${C2pos})
variable C21 equal 0.5*(335.968339243838+${C2pos})
variable C21 equal 0.5*(335.968339243838+335.96655451995)
variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
variable C31 equal 0.5*(${C3neg}+${C3pos})
variable C31 equal 0.5*(261.498185955686+${C3pos})
variable C31 equal 0.5*(261.498185955686+261.497509513765)
variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
variable C41 equal 0.5*(${C4neg}+${C4pos})
variable C41 equal 0.5*(1.88917216854035e-07+${C4pos})
variable C41 equal 0.5*(1.88917216854035e-07+-1.86577502444337e-07)
variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
variable C51 equal 0.5*(${C5neg}+${C5pos})
variable C51 equal 0.5*(6.66106099771059e-08+${C5pos})
variable C51 equal 0.5*(6.66106099771059e-08+-6.45606855006484e-08)
variable C6${dir} equal 0.5*(${C6neg}+${C6pos})
variable C61 equal 0.5*(${C6neg}+${C6pos})
variable C61 equal 0.5*(-1.0205944088276e-06+${C6pos})
variable C61 equal 0.5*(-1.0205944088276e-06+1.0346685446307e-06)

# Delete dir to make sure it is not reused

variable dir delete

# uyy Perturbation

variable dir equal 2
include displace.mod
# NOTE: This script should not need to be
# modified. See in.elastic for more info.
#
# Find which reference length to use

if "${dir} == 1" then    "variable len0 equal ${lx0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"
variable len0 equal ${ly0}
variable len0 equal 13.2675474943527
if "${dir} == 3" then    "variable len0 equal ${lz0}"
if "${dir} == 4" then    "variable len0 equal ${lz0}"
if "${dir} == 5" then    "variable len0 equal ${lz0}"
if "${dir} == 6" then    "variable len0 equal ${ly0}"

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Negative deformation

variable delta equal -${up}*${len0}
variable delta equal -1e-06*${len0}
variable delta equal -1e-06*13.2675474943527
variable deltaxy equal -${up}*xy
variable deltaxy equal -1e-06*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -1e-06*xz
variable deltayz equal -${up}*yz
variable deltayz equal -1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box
change_box all y delta 0 -1.32675474943527e-05 yz delta ${deltayz} remap units box
change_box all y delta 0 -1.32675474943527e-05 yz delta -0 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417446 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417446 16.692995) with tilt (-7.6600221 0 0)
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222      4.2074381      2.6015406      7.3820917      2.6386822      0.18812861     0.024607338    0.068810149    10.213363      13.267534      16.609657      2250.7105    
        62   0             -1417.7222      4.2442044      3.1922376      6.9258926      2.6144831     -0.052245581    0.012210994    0.03413927     10.213363      13.267534      16.609657      2250.7105    
        63   0             -1417.7222      4.2477897      3.1824607      6.9488056      2.6121028      0.030799843    0.0019050047   0.0053246162   10.213363      13.267534      16.609657      2250.7105    
        64   0             -1417.7222      4.2417994      3.3359377      6.7735833      2.6158773     -0.022428543   -0.0011055569  -0.0030920643   10.213363      13.267534      16.609657      2250.7105    
        65   0             -1417.7222      4.2424806      3.3430631      6.7689368      2.6154419     -0.0012835186  -0.001016206   -0.0028417973   10.213363      13.267534      16.609657      2250.7105    
        66   0             -1417.7222      4.2440369      3.3720642      6.745591       2.6144554     -0.0054645029  -5.8566101e-05 -0.00016417925  10.213363      13.267534      16.609657      2250.7105    
        67   0             -1417.7222      4.2431222      3.3662238      6.7481088      2.615034      -0.00053696751  0.00031089098  0.00086918587  10.213363      13.267534      16.609657      2250.7105    
        68   0             -1417.7222      4.2429529      3.3608724      6.7528453      2.615141       0.0013543386   0.00015936175  0.00044551526  10.213363      13.267534      16.609657      2250.7105    
        69   0             -1417.7222      4.2433457      3.3604133      6.7547314      2.6148924      0.00059824017 -4.855943e-05  -0.00013571426  10.213363      13.267534      16.609657      2250.7105    
        70   0             -1417.7222      4.2432538      3.3577577      6.7570533      2.6149505      0.001206453   -0.00010025236 -0.00028033021  10.213363      13.267534      16.609657      2250.7105    
        71   0             -1417.7222      4.2430894      3.3596625      6.7545513      2.6150545     -0.00039389244 -2.1603746e-05 -6.0410997e-05  10.213363      13.267534      16.609657      2250.7105    
        72   0             -1417.7222      4.2432485      3.3597043      6.7550876      2.6149538     -0.00026002272  5.0744172e-05  0.00014185636  10.213363      13.267534      16.609657      2250.7105    
        73   0             -1417.7222      4.2432463      3.3602569      6.7545268      2.6149552     -0.00055382047  3.9940631e-05  0.00011167802  10.213363      13.267534      16.609657      2250.7105    
        74   0             -1417.7222      4.2431649      3.3595792      6.754909       2.6150067     -0.00020407737 -1.9315394e-06 -5.3978744e-06  10.213363      13.267534      16.609657      2250.7105    
        75   0             -1417.7222      4.2432086      3.3593665      6.7552804      2.614979       6.557693e-05  -2.112272e-05  -5.90556e-05    10.213363      13.267534      16.609657      2250.7105    
        76   0             -1417.7222      4.2432194      3.3595887      6.7550973      2.6149722      7.6334284e-05 -8.6947096e-06 -2.4312341e-05  10.213363      13.267534      16.609657      2250.7105    
        77   0             -1417.7222      4.2431922      3.3596368      6.7549502      2.6149894      0.00013839443  8.7696046e-06  2.4518052e-05  10.213363      13.267534      16.609657      2250.7105    
        78   0             -1417.7222      4.2432043      3.3599506      6.7546807      2.6149817     -1.4979286e-05  8.5793169e-06  2.3987199e-05  10.213363      13.267534      16.609657      2250.7105    
        79   0             -1417.7222      4.2432118      3.3598068      6.7548515      2.614977       9.7796888e-06 -1.1177018e-06 -3.1237765e-06  10.213363      13.267534      16.609657      2250.7105    
        80   0             -1417.7222      4.2431998      3.3597472      6.7548677      2.6149846     -5.5298686e-05 -5.5128444e-06 -1.5413239e-05  10.213363      13.267534      16.609657      2250.7105    
        81   0             -1417.7222      4.243203       3.3596091      6.7550174      2.6149826     -8.482266e-06  -2.1360456e-06 -5.9725703e-06  10.213363      13.267534      16.609657      2250.7105    
        82   0             -1417.7222      4.2432066      3.3596444      6.7549951      2.6149803     -1.2907111e-05  1.3316754e-06  3.7230329e-06  10.213363      13.267534      16.609657      2250.7105    
        83   0             -1417.7222      4.2432034      3.3596531      6.7549747      2.6149823      5.1025196e-06  1.397525e-06   3.9073644e-06  10.213363      13.267534      16.609657      2250.7105    
        84   0             -1417.7222      4.2432037      3.3596959      6.7549331      2.6149821     -1.2383688e-06  1.5272476e-07  4.2716281e-07  10.213363      13.267534      16.609657      2250.7105    
        85   0             -1417.7222      4.2432046      3.3596995      6.7549328      2.6149815      3.1853029e-06 -3.7008809e-07 -1.0347106e-06  10.213363      13.267534      16.609657      2250.7105    
        86   0             -1417.7222      4.2432041      3.3597017      6.7549289      2.6149819      3.732977e-07  -2.3753304e-07 -6.6413569e-07  10.213363      13.267534      16.609657      2250.7105    
        87   0             -1417.7222      4.243204       3.3596936      6.7549365      2.6149819      1.5561426e-06  6.0478745e-08  1.690278e-07   10.213363      13.267534      16.609657      2250.7105    
        88   0             -1417.7222      4.2432043      3.3596919      6.7549393      2.6149817      4.024256e-07   1.1835075e-07  3.3097499e-07  10.213363      13.267534      16.609657      2250.7105    
        89   0             -1417.7222      4.2432042      3.3596896      6.7549411      2.6149818      7.4959196e-07  2.2505938e-08  6.2992637e-08  10.213363      13.267534      16.609657      2250.7105    
        90   0             -1417.7222      4.2432041      3.3596912      6.7549392      2.6149819      7.145408e-09  -5.5782643e-08 -1.5599327e-07  10.213363      13.267534      16.609657      2250.7105    
        91   0             -1417.7222      4.2432042      3.3596918      6.754939       2.6149818      3.3921325e-07 -3.3371283e-08 -9.3293997e-08  10.213363      13.267534      16.609657      2250.7105    
        92   0             -1417.7222      4.2432042      3.3596925      6.7549382      2.6149818      3.0083201e-07  9.1356986e-09  2.5515837e-08  10.213363      13.267534      16.609657      2250.7105    
        93   0             -1417.7222      4.2432041      3.3596924      6.7549382      2.6149818      5.1494072e-07  1.7009157e-08  4.7536579e-08  10.213363      13.267534      16.609657      2250.7105    
        94   0             -1417.7222      4.2432042      3.3596923      6.7549383      2.6149818      5.319635e-07   4.3212725e-09  1.2084885e-08  10.213363      13.267534      16.609657      2250.7105    
        95   0             -1417.7222      4.2432042      3.3596922      6.7549384      2.6149818      5.4562933e-07 -3.2548354e-09 -9.1638759e-09  10.213363      13.267534      16.609657      2250.7105    
        96   0             -1417.7222      4.2432042      3.3596922      6.7549384      2.6149818      5.2507668e-07 -2.9755055e-09 -8.3387856e-09  10.213363      13.267534      16.609657      2250.7105    
        97   0             -1417.7222      4.2432042      3.3596922      6.7549385      2.6149818      5.1329623e-07 -3.0490249e-10 -8.9653484e-10  10.213363      13.267534      16.609657      2250.7105    
        98   0             -1417.7222      4.2432042      3.3596922      6.7549384      2.6149818      5.0684883e-07  6.8581119e-10  1.8853786e-09  10.213363      13.267534      16.609657      2250.7105    
Loop time of 0.0394518 on 4 procs for 37 steps with 192 atoms

29.7% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563244  -1417.72224584635  -1417.72224584635
  Force two-norm initial, final = 0.0034477434 5.1455701e-11
  Force max component initial, final = 0.00035607375 8.1210535e-12
  Final line search alpha, max atom move = 1 8.1210535e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.036166   | 0.036251   | 0.03631    |   0.0 | 91.89
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.002057   | 0.002096   | 0.002159   |   0.1 |  5.31
Output  | 0.000543   | 0.000566   | 0.00062    |   0.0 |  1.43
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.0005393  |            |       |  1.37

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal 3.35969221424101
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal 6.75493844904236
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal 2.61498183475158
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.06848826975938e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 6.85811192233925e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.88537862552126e-09

# Compute elastic constant from pressure tensor

variable C1neg equal ${d1}
variable C1neg equal 335.969223381238
variable C2neg equal ${d2}
variable C2neg equal 675.493847359209
variable C3neg equal ${d3}
variable C3neg equal 261.498185954478
variable C4neg equal ${d4}
variable C4neg equal 1.86072078083127e-07
variable C5neg equal ${d5}
variable C5neg equal 6.6080357117632e-08
variable C6neg equal ${d6}
variable C6neg equal -1.0213214998468e-06

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Positive deformation

variable delta equal ${up}*${len0}
variable delta equal 1e-06*${len0}
variable delta equal 1e-06*13.2675474943527
variable deltaxy equal ${up}*xy
variable deltaxy equal 1e-06*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1e-06*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box
change_box all y delta 0 1.32675474943527e-05 yz delta ${deltayz} remap units box
change_box all y delta 0 1.32675474943527e-05 yz delta 0 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417473 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417473 16.692995) with tilt (-7.6600221 0 0)
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222     -4.3136398     -3.7435392     -6.6280668     -2.5693134      0.18812683     0.02460725     0.06880451     10.213363      13.267561      16.609657      2250.715     
        62   0             -1417.7222     -4.2411803     -3.2691927     -6.8382457     -2.6161026     -0.052606493    0.012192159    0.034087835    10.213363      13.267561      16.609657      2250.715     
        63   0             -1417.7222     -4.2343381     -3.4080104     -6.6744622     -2.6205418      0.031267614    0.0019169902   0.0053573027   10.213363      13.267561      16.609657      2250.715     
        64   0             -1417.7222     -4.2459113     -3.3516164     -6.7728845     -2.613233      -0.022827259   -0.0010851468  -0.0030344212   10.213363      13.267561      16.609657      2250.715     
        65   0             -1417.7222     -4.2445565     -3.3784258     -6.7411493     -2.6140944     -0.0010334155  -0.0010089421  -0.0028216783   10.213363      13.267561      16.609657      2250.715     
        66   0             -1417.7222     -4.2415586     -3.3568101     -6.7518724     -2.6159935     -0.0055744092  -6.2866585e-05 -0.00017602655  10.213363      13.267561      16.609657      2250.715     
        67   0             -1417.7222     -4.2433262     -3.3603026     -6.7548012     -2.614875      -0.00052933161  0.00030910128  0.0008640249   10.213363      13.267561      16.609657      2250.715     
        68   0             -1417.7222     -4.2436566     -3.360135      -6.7561689     -2.614666       0.0013928219   0.00016017442  0.00044789026  10.213363      13.267561      16.609657      2250.715     
        69   0             -1417.7222     -4.2428951     -3.3569446     -6.7565924     -2.6151482      0.00057847243 -4.7358866e-05 -0.00013242421  10.213363      13.267561      16.609657      2250.715     
        70   0             -1417.7222     -4.2430739     -3.359624      -6.7545629     -2.615035       0.0012442944  -9.9296688e-05 -0.00027760752  10.213363      13.267561      16.609657      2250.715     
        71   0             -1417.7222     -4.2433903     -3.3595481     -6.755788      -2.6148348     -0.00042154155 -2.1615584e-05 -6.0473339e-05  10.213363      13.267561      16.609657      2250.715     
        72   0             -1417.7222     -4.2430827     -3.3603915     -6.7538272     -2.6150295     -0.00025518292  5.0862237e-05  0.00014220117  10.213363      13.267561      16.609657      2250.715     
        73   0             -1417.7222     -4.2430875     -3.3598556     -6.7543806     -2.6150264     -0.00057211038  4.0016436e-05  0.0001118796   10.213363      13.267561      16.609657      2250.715     
        74   0             -1417.7222     -4.2432432     -3.360049      -6.7547527     -2.6149279     -0.00021091014 -1.6242292e-06 -4.5338302e-06  10.213363      13.267561      16.609657      2250.715     
        75   0             -1417.7222     -4.24316       -3.3596775     -6.7548221     -2.6149805      6.8882074e-05 -2.1186113e-05 -5.9234377e-05  10.213363      13.267561      16.609657      2250.715     
        76   0             -1417.7222     -4.2431393     -3.3594156     -6.7550085     -2.6149937      7.8248135e-05 -8.8959829e-06 -2.4873482e-05  10.213363      13.267561      16.609657      2250.715     
        77   0             -1417.7222     -4.2431916     -3.3596591     -6.754955      -2.6149606      0.00014677186  8.632986e-06   2.4134924e-05  10.213363      13.267561      16.609657      2250.715     
        78   0             -1417.7222     -4.2431682     -3.3595368     -6.7549925     -2.6149754     -1.6547364e-05  8.5608657e-06  2.3935869e-05  10.213363      13.267561      16.609657      2250.715     
        79   0             -1417.7222     -4.2431541     -3.3597004     -6.7547774     -2.6149843      1.1967811e-05 -1.0595905e-06 -2.961475e-06   10.213363      13.267561      16.609657      2250.715     
        80   0             -1417.7222     -4.2431769     -3.3596731     -6.7548877     -2.6149699     -5.9587703e-05 -5.5043646e-06 -1.5389181e-05  10.213363      13.267561      16.609657      2250.715     
        81   0             -1417.7222     -4.2431708     -3.3597088     -6.7548298     -2.6149737     -8.8783402e-06 -2.1644868e-06 -6.0519901e-06  10.213363      13.267561      16.609657      2250.715     
        82   0             -1417.7222     -4.243164      -3.3596493     -6.7548646     -2.614978      -1.435389e-05   1.2862703e-06  3.595927e-06   10.213363      13.267561      16.609657      2250.715     
        83   0             -1417.7222     -4.2431701     -3.3596703     -6.7548658     -2.6149742      5.4195081e-06  1.3793979e-06  3.85665e-06    10.213363      13.267561      16.609657      2250.715     
        84   0             -1417.7222     -4.2431695     -3.3596522     -6.7548816     -2.6149746     -1.5077473e-06  1.519498e-07   4.249339e-07   10.213363      13.267561      16.609657      2250.715     
        85   0             -1417.7222     -4.2431677     -3.3596561     -6.7548713     -2.6149757      3.5414389e-06 -3.7051434e-07 -1.0359041e-06  10.213363      13.267561      16.609657      2250.715     
        86   0             -1417.7222     -4.2431687     -3.3596536     -6.7548772     -2.6149751      3.7069429e-07 -2.3773289e-07 -6.6467367e-07  10.213363      13.267561      16.609657      2250.715     
        87   0             -1417.7222     -4.2431689     -3.3596573     -6.7548746     -2.6149749      1.6790455e-06  5.8648159e-08  1.6397766e-07  10.213363      13.267561      16.609657      2250.715     
        88   0             -1417.7222     -4.2431683     -3.3596554     -6.7548743     -2.6149753      3.6143938e-07  1.1878312e-07  3.3214969e-07  10.213363      13.267561      16.609657      2250.715     
        89   0             -1417.7222     -4.2431686     -3.3596576     -6.7548731     -2.6149751      7.734292e-07   2.3367237e-08  6.5365352e-08  10.213363      13.267561      16.609657      2250.715     
        90   0             -1417.7222     -4.2431687     -3.3596571     -6.7548741     -2.614975      -5.7593397e-08 -5.5051972e-08 -1.5387744e-07  10.213363      13.267561      16.609657      2250.715     
        91   0             -1417.7222     -4.2431685     -3.3596572     -6.7548733     -2.6149752      3.293839e-07  -3.3291324e-08 -9.3025103e-08  10.213363      13.267561      16.609657      2250.715     
        92   0             -1417.7222     -4.2431686     -3.3596567     -6.7548739     -2.6149751      2.789732e-07   8.8671379e-09  2.4805767e-08  10.213363      13.267561      16.609657      2250.715     
        93   0             -1417.7222     -4.2431686     -3.3596568     -6.754874      -2.6149751      5.1958895e-07  1.6957323e-08  4.7475787e-08  10.213363      13.267561      16.609657      2250.715     
        94   0             -1417.7222     -4.2431686     -3.3596566     -6.754874      -2.6149751      5.3504371e-07  4.4101662e-09  1.2311839e-08  10.213363      13.267561      16.609657      2250.715     
        95   0             -1417.7222     -4.2431686     -3.3596567     -6.754874      -2.6149751      5.4998098e-07 -3.1664778e-09 -8.8559509e-09  10.213363      13.267561      16.609657      2250.715     
        96   0             -1417.7222     -4.2431686     -3.3596567     -6.754874      -2.6149751      5.2689841e-07 -2.9667644e-09 -8.2186411e-09  10.213363      13.267561      16.609657      2250.715     
        97   0             -1417.7222     -4.2431686     -3.3596567     -6.754874      -2.6149751      5.1390849e-07 -3.3442292e-10 -8.642882e-10   10.213363      13.267561      16.609657      2250.715     
        98   0             -1417.7222     -4.2431686     -3.3596567     -6.754874      -2.6149751      5.0670745e-07  6.8852838e-10  1.8828458e-09  10.213363      13.267561      16.609657      2250.715     
Loop time of 0.0384625 on 4 procs for 37 steps with 192 atoms

50.8% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
      -1417.7222456335  -1417.72224584635  -1417.72224584635
  Force two-norm initial, final = 0.0034389475 5.1619897e-11
  Force max component initial, final = 0.0003709917 8.1938761e-12
  Final line search alpha, max atom move = 1 8.1938761e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.035501   | 0.035609   | 0.035707   |   0.0 | 92.58
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001742   | 0.0018495  | 0.001944   |   0.2 |  4.81
Output  | 0.000473   | 0.00049025 | 0.000534   |   0.0 |  1.27
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.000514   |            |       |  1.34

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pe
variable e1 equal ${tmp}
variable e1 equal -1417.72224584635
variable tmp equal press
variable p1 equal ${tmp}
variable p1 equal -4.24316859974338
variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal -3.35965672290939
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal -6.75487395683909
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal -2.61497511948167
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.06707453380653e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 6.8852837984773e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.88284584758499e-09

# Compute elastic constant from pressure tensor

variable C1pos equal ${d1}
variable C1pos equal 335.965670333802
variable C2pos equal ${d2}
variable C2pos equal 675.487393228936
variable C3pos equal ${d3}
variable C3pos equal 261.497509468847
variable C4pos equal ${d4}
variable C4pos equal -1.858188002895e-07
variable C5pos equal ${d5}
variable C5pos equal -6.63520758790125e-08
variable C6pos equal ${d6}
variable C6pos equal 1.0354588593753e-06

# Combine positive and negative

variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
variable C12 equal 0.5*(${C1neg}+${C1pos})
variable C12 equal 0.5*(335.969223381238+${C1pos})
variable C12 equal 0.5*(335.969223381238+335.965670333802)
variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
variable C22 equal 0.5*(${C2neg}+${C2pos})
variable C22 equal 0.5*(675.493847359209+${C2pos})
variable C22 equal 0.5*(675.493847359209+675.487393228936)
variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
variable C32 equal 0.5*(${C3neg}+${C3pos})
variable C32 equal 0.5*(261.498185954478+${C3pos})
variable C32 equal 0.5*(261.498185954478+261.497509468847)
variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
variable C42 equal 0.5*(${C4neg}+${C4pos})
variable C42 equal 0.5*(1.86072078083127e-07+${C4pos})
variable C42 equal 0.5*(1.86072078083127e-07+-1.858188002895e-07)
variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
variable C52 equal 0.5*(${C5neg}+${C5pos})
variable C52 equal 0.5*(6.6080357117632e-08+${C5pos})
variable C52 equal 0.5*(6.6080357117632e-08+-6.63520758790125e-08)
variable C6${dir} equal 0.5*(${C6neg}+${C6pos})
variable C62 equal 0.5*(${C6neg}+${C6pos})
variable C62 equal 0.5*(-1.0213214998468e-06+${C6pos})
variable C62 equal 0.5*(-1.0213214998468e-06+1.0354588593753e-06)

# Delete dir to make sure it is not reused

variable dir delete

# uzz Perturbation

variable dir equal 3
include displace.mod
# NOTE: This script should not need to be
# modified. See in.elastic for more info.
#
# Find which reference length to use

if "${dir} == 1" then    "variable len0 equal ${lx0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"
variable len0 equal ${lz0}
variable len0 equal 16.6096567387831
if "${dir} == 4" then    "variable len0 equal ${lz0}"
if "${dir} == 5" then    "variable len0 equal ${lz0}"
if "${dir} == 6" then    "variable len0 equal ${ly0}"

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Negative deformation

variable delta equal -${up}*${len0}
variable delta equal -1e-06*${len0}
variable delta equal -1e-06*16.6096567387831
variable deltaxy equal -${up}*xy
variable deltaxy equal -1e-06*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -1e-06*xz
variable deltayz equal -${up}*yz
variable deltayz equal -1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
change_box all z delta 0 ${delta} remap units box
change_box all z delta 0 -1.66096567387831e-05 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692978) with tilt (-7.6600221 0 0)
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222      4.1677159      2.0329889      2.9809906      7.4891681      0.18812926     0.024607045    0.068806631    10.213363      13.267547      16.60964       2250.7105    
        62   0             -1417.7222      4.2285106      2.5767413      2.6590283      7.4497623     -0.052387827    0.012203307    0.034118386    10.213363      13.267547      16.60964       2250.7105    
        63   0             -1417.7222      4.2343487      2.5035331      2.7535546      7.4459582      0.031010614    0.0019182302   0.0053611789   10.213363      13.267547      16.60964       2250.7105    
        64   0             -1417.7222      4.224578       2.6065954      2.6150126      7.4521261     -0.022605549   -0.0010913378  -0.0030520224   10.213363      13.267547      16.60964       2250.7105    
        65   0             -1417.7222      4.2257041      2.5970091      2.6286935      7.4514095     -0.0011591649  -0.0010127992  -0.0028323662   10.213363      13.267547      16.60964       2250.7105    
        66   0             -1417.7222      4.2282418      2.6228836      2.6120399      7.4498018     -0.0055205422  -6.1966916e-05 -0.00017359996  10.213363      13.267547      16.60964       2250.7105    
        67   0             -1417.7222      4.2267488      2.6179539      2.6115462      7.4507464     -0.0005352547   0.00030927388  0.00086458609  10.213363      13.267547      16.60964       2250.7105    
        68   0             -1417.7222      4.2264706      2.6152849      2.6132045      7.4509223      0.0013740576   0.00015978741  0.00044675707  10.213363      13.267547      16.60964       2250.7105    
        69   0             -1417.7222      4.2271129      2.6167495      2.6140735      7.4505157      0.00059023797 -4.7776113e-05 -0.00013355771  10.213363      13.267547      16.60964       2250.7105    
        70   0             -1417.7222      4.2269625      2.6140479      2.6162286      7.4506109      0.0012265562  -9.9629693e-05 -0.00027856383  10.213363      13.267547      16.60964       2250.7105    
        71   0             -1417.7222      4.2266947      2.6149946      2.6143091      7.4507803     -0.00040731867 -2.1618185e-05 -6.0466017e-05  10.213363      13.267547      16.60964       2250.7105    
        72   0             -1417.7222      4.2269544      2.6146487      2.6155984      7.4506159     -0.0002593783   5.0824258e-05  0.00014208769  10.213363      13.267547      16.60964       2250.7105    
        73   0             -1417.7222      4.2269505      2.6151929      2.6150403      7.4506184     -0.00056446966  3.9997692e-05  0.00011183244  10.213363      13.267547      16.60964       2250.7105    
        74   0             -1417.7222      4.2268185      2.6147297      2.6150239      7.4507019     -0.00020835348 -1.7417184e-06 -4.8647523e-06  10.213363      13.267547      16.60964       2250.7105    
        75   0             -1417.7222      4.2268892      2.6148173      2.6151931      7.4506572      6.7760185e-05 -2.1182376e-05 -5.9223293e-05  10.213363      13.267547      16.60964       2250.7105    
        76   0             -1417.7222      4.2269067      2.615062       2.6150121      7.4506461      7.8179417e-05 -8.8360316e-06 -2.4706711e-05  10.213363      13.267547      16.60964       2250.7105    
        77   0             -1417.7222      4.2268625      2.6149582      2.6149551      7.4506741      0.00014300392  8.6784437e-06  2.4262594e-05  10.213363      13.267547      16.60964       2250.7105    
        78   0             -1417.7222      4.2268822      2.6151823      2.6148028      7.4506616     -1.5849467e-05  8.5821242e-06  2.3995228e-05  10.213363      13.267547      16.60964       2250.7105    
        79   0             -1417.7222      4.2268943      2.6150314      2.6149974      7.450654       1.0442538e-05 -1.0671515e-06 -2.9825501e-06  10.213363      13.267547      16.60964       2250.7105    
        80   0             -1417.7222      4.2268749      2.6150109      2.6149476      7.4506662     -5.7664031e-05 -5.4985686e-06 -1.5373085e-05  10.213363      13.267547      16.60964       2250.7105    
        81   0             -1417.7222      4.2268801      2.6149237      2.6150535      7.4506629     -8.728839e-06  -2.1531273e-06 -6.0202454e-06  10.213363      13.267547      16.60964       2250.7105    
        82   0             -1417.7222      4.2268859      2.614972       2.6150263      7.4506593     -1.3554938e-05  1.3038977e-06  3.6452727e-06  10.213363      13.267547      16.60964       2250.7105    
        83   0             -1417.7222      4.2268806      2.614965       2.6150143      7.4506626      5.2939254e-06  1.386059e-06   3.8753142e-06  10.213363      13.267547      16.60964       2250.7105    
        84   0             -1417.7222      4.2268812      2.6149959      2.6149854      7.4506622     -1.3602887e-06  1.5233145e-07  4.2605384e-07  10.213363      13.267547      16.60964       2250.7105    
        85   0             -1417.7222      4.2268827      2.6149962      2.6149905      7.4506613      3.351062e-06  -3.7039032e-07 -1.0354952e-06  10.213363      13.267547      16.60964       2250.7105    
        86   0             -1417.7222      4.2268819      2.6149983      2.6149855      7.4506618      3.6737412e-07 -2.3775814e-07 -6.6470282e-07  10.213363      13.267547      16.60964       2250.7105    
        87   0             -1417.7222      4.2268816      2.6149924      2.6149906      7.450662       1.6161883e-06  5.9378531e-08  1.6604103e-07  10.213363      13.267547      16.60964       2250.7105    
        88   0             -1417.7222      4.2268821      2.6149925      2.6149923      7.4506616      3.8671537e-07  1.1873851e-07  3.3196131e-07  10.213363      13.267547      16.60964       2250.7105    
        89   0             -1417.7222      4.2268819      2.6149902      2.6149938      7.4506618      7.6314715e-07  2.3129002e-08  6.4592869e-08  10.213363      13.267547      16.60964       2250.7105    
        90   0             -1417.7222      4.2268818      2.6149912      2.6149923      7.4506618     -2.4742275e-08 -5.5299831e-08 -1.5469589e-07  10.213363      13.267547      16.60964       2250.7105    
        91   0             -1417.7222      4.226882       2.6149915      2.6149927      7.4506617      3.324257e-07  -3.3356956e-08 -9.3246578e-08  10.213363      13.267547      16.60964       2250.7105    
        92   0             -1417.7222      4.2268819      2.6149921      2.6149919      7.4506618      2.8894913e-07  8.9423422e-09  2.5066305e-08  10.213363      13.267547      16.60964       2250.7105    
        93   0             -1417.7222      4.2268819      2.614992       2.6149919      7.4506618      5.1668005e-07  1.6969853e-08  4.7437315e-08  10.213363      13.267547      16.60964       2250.7105    
        94   0             -1417.7222      4.2268819      2.6149921      2.614992       7.4506618      5.3359471e-07  4.382426e-09   1.2196162e-08  10.213363      13.267547      16.60964       2250.7105    
        95   0             -1417.7222      4.2268819      2.614992       2.614992       7.4506618      5.4798037e-07 -3.2021663e-09 -8.9988578e-09  10.213363      13.267547      16.60964       2250.7105    
        96   0             -1417.7222      4.2268819      2.614992       2.614992       7.4506618      5.2615973e-07 -2.9732969e-09 -8.3008504e-09  10.213363      13.267547      16.60964       2250.7105    
        97   0             -1417.7222      4.2268819      2.614992       2.614992       7.4506618      5.1364871e-07 -2.9918814e-10 -8.7377373e-10  10.213363      13.267547      16.60964       2250.7105    
        98   0             -1417.7222      4.2268819      2.614992       2.614992       7.4506618      5.0676569e-07  6.5365026e-10  1.9131978e-09  10.213363      13.267547      16.60964       2250.7105    
Loop time of 0.039258 on 4 procs for 37 steps with 192 atoms

39.8% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563261  -1417.72224584586  -1417.72224584586
  Force two-norm initial, final = 0.0034430383 5.155348e-11
  Force max component initial, final = 0.00036409017 8.131954e-12
  Final line search alpha, max atom move = 1 8.131954e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.035567   | 0.035878   | 0.036052   |   0.1 | 91.39
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.002006   | 0.0021757  | 0.002566   |   0.5 |  5.54
Output  | 0.000496   | 0.0005245  | 0.000576   |   0.0 |  1.34
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.00068    |            |       |  1.73

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal 2.614991960418
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal 2.61499202892389
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal 7.45066177044833
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.06765685698521e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 6.536502572732e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.91319776017013e-09

# Compute elastic constant from pressure tensor

variable C1neg equal ${d1}
variable C1neg equal 261.499197998937
variable C2neg equal ${d2}
variable C2neg equal 261.499205347362
variable C3neg equal ${d3}
variable C3neg equal 745.066179524153
variable C4neg equal ${d4}
variable C4neg equal 1.88853991548014e-07
variable C5neg equal ${d5}
variable C5neg equal 6.28642636215596e-08
variable C6neg equal ${d6}
variable C6neg equal -1.0296356275885e-06

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Positive deformation

variable delta equal ${up}*${len0}
variable delta equal 1e-06*${len0}
variable delta equal 1e-06*16.6096567387831
variable deltaxy equal ${up}*xy
variable deltaxy equal 1e-06*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1e-06*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
change_box all z delta 0 ${delta} remap units box
change_box all z delta 0 1.66096567387831e-05 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.693011) with tilt (-7.6600221 0 0)
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222     -4.2739161     -3.174995      -2.2270057     -7.4197475      0.18812618     0.024607544    0.068808028    10.213363      13.267547      16.609673      2250.715     
        62   0             -1417.7222     -4.2255275     -2.6537743     -2.571507      -7.4513011     -0.052392769    0.012203535    0.034119024    10.213363      13.267547      16.609673      2250.715     
        63   0             -1417.7222     -4.2208808     -2.729132      -2.4791593     -7.4543511      0.030999392    0.0019171061   0.005358037    10.213363      13.267547      16.609673      2250.715     
        64   0             -1417.7222     -4.2286825     -2.6225057     -2.6141126     -7.4494293     -0.022610461   -0.0010913429  -0.0030520367   10.213363      13.267547      16.609673      2250.715     
        65   0             -1417.7222     -4.2277837     -2.6325117     -2.6008372     -7.4500022     -0.0011613348  -0.0010128624  -0.0028325429   10.213363      13.267547      16.609673      2250.715     
        66   0             -1417.7222     -4.2257564     -2.6075685     -2.6184137     -7.4512869     -0.0055187778  -6.1670459e-05 -0.0001727711   10.213363      13.267547      16.609673      2250.715     
        67   0             -1417.7222     -4.2269497     -2.6119554     -2.6183615     -7.450532      -0.00053459692  0.0003092586   0.00086454325  10.213363      13.267547      16.609673      2250.715     
        68   0             -1417.7222     -4.2271721     -2.6145221     -2.6166029     -7.4503913      0.0013739927   0.0001597417   0.00044662917  10.213363      13.267547      16.609673      2250.715     
        69   0             -1417.7222     -4.2266583     -2.6132911     -2.6159672     -7.4507166      0.00058996786 -4.7801096e-05 -0.00013362748  10.213363      13.267547      16.609673      2250.715     
        70   0             -1417.7222     -4.2267788     -2.6159381     -2.6137578     -7.4506404      0.001226324   -9.9638356e-05 -0.000278588    10.213363      13.267547      16.609673      2250.715     
        71   0             -1417.7222     -4.2269931     -2.6148946     -2.6155801     -7.4505047     -0.00040756504 -2.1581195e-05 -6.0362603e-05  10.213363      13.267547      16.609673      2250.715     
        72   0             -1417.7222     -4.2267851     -2.6153347     -2.6143843     -7.4506364     -0.0002591901   5.0821264e-05  0.00014207926  10.213363      13.267547      16.609673      2250.715     
        73   0             -1417.7222     -4.2267882     -2.6147888     -2.6149414     -7.4506345     -0.00056446662  3.9999085e-05  0.00011183623  10.213363      13.267547      16.609673      2250.715     
        74   0             -1417.7222     -4.2268941     -2.6152045     -2.6149102     -7.4505675     -0.00020822455 -1.754129e-06  -4.8994633e-06  10.213363      13.267547      16.609673      2250.715     
        75   0             -1417.7222     -4.2268374     -2.6151422     -2.6147666     -7.4506034      6.7735571e-05 -2.118233e-05  -5.9223137e-05  10.213363      13.267547      16.609673      2250.715     
        76   0             -1417.7222     -4.2268233     -2.6149039     -2.6149537     -7.4506123      7.8230981e-05 -8.8335234e-06 -2.4699685e-05  10.213363      13.267547      16.609673      2250.715     
        77   0             -1417.7222     -4.2268588     -2.6149918     -2.6149949     -7.4505898      0.00014299347  8.6800219e-06  2.4266888e-05  10.213363      13.267547      16.609673      2250.715     
        78   0             -1417.7222     -4.226843      -2.6147748     -2.6151542     -7.4505999     -1.5848684e-05  8.5827973e-06  2.3997046e-05  10.213363      13.267547      16.609673      2250.715     
        79   0             -1417.7222     -4.2268333     -2.6149299     -2.614964      -7.450606       1.0417461e-05 -1.0688269e-06 -2.9871571e-06  10.213363      13.267547      16.609673      2250.715     
        80   0             -1417.7222     -4.2268488     -2.6149436     -2.6150069     -7.4505961     -5.767149e-05  -5.4980588e-06 -1.5371677e-05  10.213363      13.267547      16.609673      2250.715     
        81   0             -1417.7222     -4.2268447     -2.6150326     -2.6149028     -7.4505988     -8.7329134e-06 -2.1535812e-06 -6.0214801e-06  10.213363      13.267547      16.609673      2250.715     
        82   0             -1417.7222     -4.22684       -2.6149864     -2.6149321     -7.4506017     -1.3549988e-05  1.3044652e-06  3.6469643e-06  10.213363      13.267547      16.609673      2250.715     
        83   0             -1417.7222     -4.2268442     -2.6149915     -2.6149422     -7.450599       5.2983137e-06  1.3860038e-06  3.8751749e-06  10.213363      13.267547      16.609673      2250.715     
        84   0             -1417.7222     -4.2268438     -2.6149608     -2.6149713     -7.4505993     -1.358558e-06   1.5235778e-07  4.2604287e-07  10.213363      13.267547      16.609673      2250.715     
        85   0             -1417.7222     -4.2268426     -2.614961      -2.6149667     -7.4506001      3.352389e-06  -3.7045392e-07 -1.0357366e-06  10.213363      13.267547      16.609673      2250.715     
        86   0             -1417.7222     -4.2268432     -2.6149586     -2.6149715     -7.4505997      3.6694314e-07 -2.3781478e-07 -6.6486334e-07  10.213363      13.267547      16.609673      2250.715     
        87   0             -1417.7222     -4.2268434     -2.6149645     -2.6149663     -7.4505995      1.6160514e-06  5.9448432e-08  1.661994e-07   10.213363      13.267547      16.609673      2250.715     
        88   0             -1417.7222     -4.226843      -2.6149645     -2.6149647     -7.4505998      3.8603809e-07  1.1874084e-07  3.3192777e-07  10.213363      13.267547      16.609673      2250.715     
        89   0             -1417.7222     -4.2268432     -2.6149668     -2.6149632     -7.4505997      7.6316301e-07  2.315738e-08   6.4702752e-08  10.213363      13.267547      16.609673      2250.715     
        90   0             -1417.7222     -4.2268433     -2.6149657     -2.6149646     -7.4505996     -2.4602182e-08 -5.5348317e-08 -1.5473225e-07  10.213363      13.267547      16.609673      2250.715     
        91   0             -1417.7222     -4.2268432     -2.6149654     -2.6149643     -7.4505997      3.3244305e-07 -3.3349365e-08 -9.3197708e-08  10.213363      13.267547      16.609673      2250.715     
        92   0             -1417.7222     -4.2268432     -2.6149648     -2.614965      -7.4505997      2.8908923e-07  8.9376349e-09  2.50593e-08    10.213363      13.267547      16.609673      2250.715     
        93   0             -1417.7222     -4.2268432     -2.614965      -2.614965      -7.4505997      5.1664076e-07  1.6983024e-08  4.7441013e-08  10.213363      13.267547      16.609673      2250.715     
        94   0             -1417.7222     -4.2268432     -2.6149649     -2.614965      -7.4505997      5.3359744e-07  4.3919877e-09  1.2152512e-08  10.213363      13.267547      16.609673      2250.715     
        95   0             -1417.7222     -4.2268432     -2.614965      -2.6149649     -7.4505997      5.4794955e-07 -3.1890358e-09 -8.9887238e-09  10.213363      13.267547      16.609673      2250.715     
        96   0             -1417.7222     -4.2268432     -2.614965      -2.6149649     -7.4505997      5.2617006e-07 -2.9550563e-09 -8.2799695e-09  10.213363      13.267547      16.609673      2250.715     
        97   0             -1417.7222     -4.2268432     -2.614965      -2.6149649     -7.4505997      5.1362966e-07 -3.0217777e-10 -8.6934622e-10  10.213363      13.267547      16.609673      2250.715     
        98   0             -1417.7222     -4.2268432     -2.614965      -2.6149649     -7.4505997      5.067672e-07   6.654231e-10   1.9030779e-09  10.213363      13.267547      16.609673      2250.715     
Loop time of 0.0391657 on 4 procs for 37 steps with 192 atoms

29.9% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563271  -1417.72224584586  -1417.72224584586
  Force two-norm initial, final = 0.0034420862 5.1529031e-11
  Force max component initial, final = 0.00036297532 8.1645443e-12
  Final line search alpha, max atom move = 1 8.1645443e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.035926   | 0.036095   | 0.036222   |   0.1 | 92.16
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001862   | 0.0020028  | 0.002181   |   0.3 |  5.11
Output  | 0.000494   | 0.0005205  | 0.000574   |   0.0 |  1.33
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.0005473  |            |       |  1.40

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pe
variable e1 equal ${tmp}
variable e1 equal -1417.72224584586
variable tmp equal press
variable p1 equal ${tmp}
variable p1 equal -4.22684320423533
variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal -2.61496499431647
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal -2.61496492583191
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal -7.45059969255762
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.06767201175346e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 6.6542309608536e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.90307790504729e-09

# Compute elastic constant from pressure tensor

variable C1pos equal ${d1}
variable C1pos equal 261.49649747451
variable C2pos equal ${d2}
variable C2pos equal 261.496490128218
variable C3pos equal ${d3}
variable C3pos equal 745.059966776442
variable C4pos equal ${d4}
variable C4pos equal -1.8784200603573e-07
variable C5pos equal ${d5}
variable C5pos equal -6.40415475027756e-08
variable C6pos equal ${d6}
variable C6pos equal 1.029484079906e-06

# Combine positive and negative

variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
variable C13 equal 0.5*(${C1neg}+${C1pos})
variable C13 equal 0.5*(261.499197998937+${C1pos})
variable C13 equal 0.5*(261.499197998937+261.49649747451)
variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
variable C23 equal 0.5*(${C2neg}+${C2pos})
variable C23 equal 0.5*(261.499205347362+${C2pos})
variable C23 equal 0.5*(261.499205347362+261.496490128218)
variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
variable C33 equal 0.5*(${C3neg}+${C3pos})
variable C33 equal 0.5*(745.066179524153+${C3pos})
variable C33 equal 0.5*(745.066179524153+745.059966776442)
variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
variable C43 equal 0.5*(${C4neg}+${C4pos})
variable C43 equal 0.5*(1.88853991548014e-07+${C4pos})
variable C43 equal 0.5*(1.88853991548014e-07+-1.8784200603573e-07)
variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
variable C53 equal 0.5*(${C5neg}+${C5pos})
variable C53 equal 0.5*(6.28642636215596e-08+${C5pos})
variable C53 equal 0.5*(6.28642636215596e-08+-6.40415475027756e-08)
variable C6${dir} equal 0.5*(${C6neg}+${C6pos})
variable C63 equal 0.5*(${C6neg}+${C6pos})
variable C63 equal 0.5*(-1.0296356275885e-06+${C6pos})
variable C63 equal 0.5*(-1.0296356275885e-06+1.029484079906e-06)

# Delete dir to make sure it is not reused

variable dir delete

# uyz Perturbation

variable dir equal 4
include displace.mod
# NOTE: This script should not need to be
# modified. See in.elastic for more info.
#
# Find which reference length to use

if "${dir} == 1" then    "variable len0 equal ${lx0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"
if "${dir} == 4" then    "variable len0 equal ${lz0}"
variable len0 equal ${lz0}
variable len0 equal 16.6096567387831
if "${dir} == 5" then    "variable len0 equal ${lz0}"
if "${dir} == 6" then    "variable len0 equal ${ly0}"

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Negative deformation

variable delta equal -${up}*${len0}
variable delta equal -1e-06*${len0}
variable delta equal -1e-06*16.6096567387831
variable deltaxy equal -${up}*xy
variable deltaxy equal -1e-06*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -1e-06*xz
variable deltayz equal -${up}*yz
variable deltayz equal -1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
change_box all yz delta ${delta} remap units box
change_box all yz delta -1.66096567387831e-05 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 -1.6609657e-05)
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222     -0.053117585   -0.57101873     0.37698099     0.034684982    0.18812779     0.024608171    1.466222       10.213363      13.267547      16.609657      2250.7127    
        62   0             -1417.7222      0.0014819049  -0.038454427    0.043699606   -0.0007994642  -0.052423223    0.012202164    1.428761       10.213363      13.267547      16.609657      2250.7127    
        63   0             -1417.7222      0.0067188129  -0.11280988     0.13718892    -0.0042225973   0.031010729    0.0019162102   1.3977077      10.213363      13.267547      16.609657      2250.7127    
        64   0             -1417.7222     -0.0020697431  -0.0079826373   0.00044946638  0.0013239416  -0.022604096   -0.0010899546   1.3886339      10.213363      13.267547      16.609657      2250.7127    
        65   0             -1417.7222     -0.0010571998  -0.017778424    0.013927717    0.00067910814 -0.001156298   -0.0010115885   1.3888706      10.213363      13.267547      16.609657      2250.7127    
        66   0             -1417.7222      0.001225572    0.007645856   -0.0032018067  -0.00076733332 -0.0055195152  -6.1735355e-05  1.3917385      10.213363      13.267547      16.609657      2250.7127    
        67   0             -1417.7222     -0.0001180103   0.0029878679  -0.003424596    8.2697164e-05 -0.00053638717  0.00030863696  1.3928568      10.213363      13.267547      16.609657      2250.7127    
        68   0             -1417.7222     -0.00036835508  0.00036938878 -0.0017154704   0.00024101641  0.0013734886   0.00015943047  1.3924065      10.213363      13.267547      16.609657      2250.7127    
        69   0             -1417.7222      0.00020992026  0.0017166943  -0.00096183186 -0.00012510161  0.00059034438 -4.7658977e-05  1.3917813      10.213363      13.267547      16.609657      2250.7127    
        70   0             -1417.7222      7.4409545e-05 -0.00095740977  0.0012199964  -3.9357945e-05  0.0012268772  -9.9364459e-05  1.3916252      10.213363      13.267547      16.609657      2250.7127    
        71   0             -1417.7222     -0.00016671545  3.7620138e-05 -0.00065101278  0.00011324629 -0.00040746507 -2.1536017e-05  1.3918601      10.213363      13.267547      16.609657      2250.7127    
        72   0             -1417.7222      6.7253974e-05 -0.00035516207  0.00059180339 -3.4879399e-05 -0.00025927685  5.0654994e-05  1.3920781      10.213363      13.267547      16.609657      2250.7127    
        73   0             -1417.7222      6.376649e-05   0.00018982141  3.4157969e-05 -3.2679913e-05 -0.00056448078  3.9865128e-05  1.3920455      10.213363      13.267547      16.609657      2250.7127    
        74   0             -1417.7222     -5.5197792e-05 -0.00024973892  4.152031e-05   4.2625236e-05 -0.00020829266 -1.7427071e-06  1.3919199      10.213363      13.267547      16.609657      2250.7127    
        75   0             -1417.7222      8.5176903e-06 -0.00017466441  0.00019792517  2.2923059e-06  6.7596492e-05 -2.1097342e-05  1.3918615      10.213363      13.267547      16.609657      2250.7127    
        76   0             -1417.7222      2.4335856e-05  6.6866857e-05  1.3863249e-05 -7.7225382e-06  7.8144911e-05 -8.7968767e-06  1.3918986      10.213363      13.267547      16.609657      2250.7127    
        77   0             -1417.7222     -1.5587119e-05 -2.9154726e-05 -3.5154235e-05  1.7547604e-05  0.00014303928  8.6382813e-06  1.3919512      10.213363      13.267547      16.609657      2250.7127    
        78   0             -1417.7222      2.2473147e-06  0.00019147577 -0.00019099166  6.2578332e-06 -1.5809323e-05  8.5413004e-06  1.391951       10.213363      13.267547      16.609657      2250.7127    
        79   0             -1417.7222      1.3098246e-05  3.8507535e-05  1.3975143e-06 -6.1031118e-07  1.0423178e-05 -1.0627388e-06  1.391922       10.213363      13.267547      16.609657      2250.7127    
        80   0             -1417.7222     -4.3774063e-06  2.1460425e-05 -4.5044568e-05  1.0451924e-05 -5.7685015e-05 -5.4683138e-06  1.3919087      10.213363      13.267547      16.609657      2250.7127    
        81   0             -1417.7222      2.8854113e-07 -6.6684037e-05  6.0051712e-05  7.4979488e-06 -8.729631e-06  -2.140937e-06   1.3919187      10.213363      13.267547      16.609657      2250.7127    
        82   0             -1417.7222      5.5079729e-06 -1.9466669e-05  3.1796537e-05  4.1940512e-06 -1.3551886e-05  1.2959212e-06  1.3919291      10.213363      13.267547      16.609657      2250.7127    
        83   0             -1417.7222      8.052108e-07  -2.5528542e-05  2.0773264e-05  7.1709104e-06  5.296549e-06   1.3771959e-06  1.3919293      10.213363      13.267547      16.609657      2250.7127    
        84   0             -1417.7222      1.2905716e-06  5.2989781e-06 -8.2909784e-06  6.8637151e-06 -1.3600104e-06  1.5123735e-07  1.3919256      10.213363      13.267547      16.609657      2250.7127    
        85   0             -1417.7222      2.6428728e-06  5.313744e-06  -3.3928632e-06  6.0077375e-06  3.3517557e-06 -3.6771938e-07  1.3919241      10.213363      13.267547      16.609657      2250.7127    
        86   0             -1417.7222      1.9195262e-06  7.6049766e-06 -8.3118939e-06  6.465496e-06   3.6674561e-07 -2.3600113e-07  1.3919245      10.213363      13.267547      16.609657      2250.7127    
        87   0             -1417.7222      1.7029759e-06  1.6525808e-06 -3.1462645e-06  6.6026114e-06  1.6160745e-06  5.8933973e-08  1.3919253      10.213363      13.267547      16.609657      2250.7127    
        88   0             -1417.7222      2.1641181e-06  1.7061999e-06 -1.5248297e-06  6.3109842e-06  3.8635587e-07  1.1772017e-07  1.3919255      10.213363      13.267547      16.609657      2250.7127    
        89   0             -1417.7222      1.9552307e-06 -5.7990572e-07  2.6927631e-09  6.4429049e-06  7.6321151e-07  2.290227e-08   1.3919252      10.213363      13.267547      16.609657      2250.7127    
        90   0             -1417.7222      1.8466538e-06  4.5594599e-07 -1.4275166e-06  6.5115321e-06 -2.4568697e-08 -5.4818252e-08  1.391925       10.213363      13.267547      16.609657      2250.7127    
        91   0             -1417.7222      2.0166877e-06  7.6690007e-07 -1.1207338e-06  6.4038967e-06  3.3268269e-07 -3.3030941e-08  1.3919251      10.213363      13.267547      16.609657      2250.7127    
        92   0             -1417.7222      1.9761715e-06  1.3783707e-06 -1.8796334e-06  6.4297773e-06  2.8891249e-07  8.8651892e-09  1.3919252      10.213363      13.267547      16.609657      2250.7127    
        93   0             -1417.7222      1.9333207e-06  1.2325458e-06 -1.8894023e-06  6.4568186e-06  5.1659323e-07  1.6828965e-08  1.3919252      10.213363      13.267547      16.609657      2250.7127    
        94   0             -1417.7222      1.9684938e-06  1.3158419e-06 -1.8446167e-06  6.4342563e-06  5.3351673e-07  4.3677912e-09  1.3919252      10.213363      13.267547      16.609657      2250.7127    
        95   0             -1417.7222      1.9629318e-06  1.2412272e-06 -1.7907418e-06  6.4383099e-06  5.480029e-07  -3.1782795e-09  1.3919252      10.213363      13.267547      16.609657      2250.7127    
        96   0             -1417.7222      1.9548941e-06  1.2082328e-06 -1.7865747e-06  6.4430243e-06  5.2614435e-07 -2.9084992e-09  1.3919252      10.213363      13.267547      16.609657      2250.7127    
        97   0             -1417.7222      1.9614373e-06  1.2116252e-06 -1.7662174e-06  6.4389043e-06  5.1368139e-07 -2.9591575e-10  1.3919252      10.213363      13.267547      16.609657      2250.7127    
        98   0             -1417.7222      1.9604343e-06  1.2102386e-06 -1.7684461e-06  6.4395105e-06  5.0675506e-07  6.5439886e-10  1.3919252      10.213363      13.267547      16.609657      2250.7127    
Loop time of 0.0394128 on 4 procs for 37 steps with 192 atoms

59.5% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563682  -1417.72224585011  -1417.72224585011
  Force two-norm initial, final = 0.0034430117 5.1525349e-11
  Force max component initial, final = 0.00036353251 8.1523134e-12
  Final line search alpha, max atom move = 1 8.1523134e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.035907   | 0.036079   | 0.036295   |   0.1 | 91.54
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001848   | 0.0020495  | 0.002232   |   0.3 |  5.20
Output  | 0.000515   | 0.0005475  | 0.000627   |   0.0 |  1.39
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.0007363  |            |       |  1.87

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal 1.21023863000631e-06
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal -1.76844607936054e-06
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal 6.43951046116899e-06
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.06755062893989e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 6.54398859796103e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.39192516756635

# Compute elastic constant from pressure tensor

variable C1neg equal ${d1}
variable C1neg equal 0.000122981000391346
variable C2neg equal ${d2}
variable C2neg equal -0.000174389634983573
variable C3neg equal ${d3}
variable C3neg equal 0.000646430365974302
variable C4neg equal ${d4}
variable C4neg equal 139.192516754169
variable C5neg equal ${d5}
variable C5neg equal 6.29391238738499e-08
variable C6neg equal ${d6}
variable C6neg equal -1.0306979080417e-06

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Positive deformation

variable delta equal ${up}*${len0}
variable delta equal 1e-06*${len0}
variable delta equal 1e-06*16.6096567387831
variable deltaxy equal ${up}*xy
variable deltaxy equal 1e-06*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1e-06*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
change_box all yz delta ${delta} remap units box
change_box all yz delta 1.66096567387831e-05 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 1.6609657e-05)
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222     -0.05311746    -0.57101438     0.37697562     0.034686379    0.18812765     0.024606418   -1.3286073      10.213363      13.267547      16.609657      2250.7127    
        62   0             -1417.7222      0.0014672133  -0.038598366    0.043789072   -0.00078906597 -0.052360078    0.012204539   -1.3605247      10.213363      13.267547      16.609657      2250.7127    
        63   0             -1417.7222      0.0067150694  -0.11281144     0.13717665    -0.00422001     0.030999061    0.0019189278  -1.3869898      10.213363      13.267547      16.609657      2250.7127    
        64   0             -1417.7222     -0.0020699862  -0.0079537567   0.00041983397  0.0013239642  -0.022611867   -0.0010926279  -1.3947371      10.213363      13.267547      16.609657      2250.7127    
        65   0             -1417.7222     -0.0010574624  -0.017749846    0.013898306    0.00067915237 -0.001164074   -0.0010139809  -1.3945347      10.213363      13.267547      16.609657      2250.7127    
        66   0             -1417.7222      0.0012254008   0.0076454174  -0.0032019825  -0.00076723268 -0.0055196752  -6.1875627e-05 -1.3920847      10.213363      13.267547      16.609657      2250.7127    
        67   0             -1417.7222     -0.00011769826  0.0029860625  -0.0034216932   8.2535959e-05 -0.00053356861  0.00030985    -1.3911281      10.213363      13.267547      16.609657      2250.7127    
        68   0             -1417.7222     -0.00036813677  0.0003685617  -0.0017138692   0.00024089723  0.0013745401   0.00016007141 -1.3915133      10.213363      13.267547      16.609657      2250.7127    
        69   0             -1417.7222      0.00020998075  0.001717337   -0.00096224921 -0.00012514554  0.00058985783 -4.7910834e-05 -1.3920484      10.213363      13.267547      16.609657      2250.7127    
        70   0             -1417.7222      7.4503967e-05 -0.00095721654  0.0012201579  -3.9429433e-05  0.0012260255  -9.9885041e-05 -1.3921822      10.213363      13.267547      16.609657      2250.7127    
        71   0             -1417.7222     -0.00016666165  3.7628116e-05 -0.00065082259  0.00011320951 -0.00040742782 -2.1656624e-05 -1.3919809      10.213363      13.267547      16.609657      2250.7127    
        72   0             -1417.7222      6.7239521e-05 -0.00035523078  0.00059181392 -3.486457e-05  -0.00025928682  5.097881e-05  -1.391794       10.213363      13.267547      16.609657      2250.7127    
        73   0             -1417.7222      6.3754607e-05  0.00018975769  3.4174004e-05 -3.2667878e-05 -0.00056445191  4.0122386e-05 -1.3918219      10.213363      13.267547      16.609657      2250.7127    
        74   0             -1417.7222     -5.5201902e-05 -0.00024976183  4.1528384e-05  4.2627735e-05 -0.00020828234 -1.7535102e-06 -1.3919297      10.213363      13.267547      16.609657      2250.7127    
        75   0             -1417.7222      8.4936353e-06 -0.00017480508  0.00019798082  2.3051609e-06  6.7888979e-05 -2.1261506e-05 -1.3919799      10.213363      13.267547      16.609657      2250.7127    
        76   0             -1417.7222      2.4320899e-05  6.6739976e-05  1.3936637e-05 -7.7139155e-06  7.8262413e-05 -8.8699125e-06 -1.391948       10.213363      13.267547      16.609657      2250.7127    
        77   0             -1417.7222     -1.5596189e-05 -2.9086503e-05 -3.5256348e-05  1.7554285e-05  0.00014296087  8.7174585e-06 -1.3919027      10.213363      13.267547      16.609657      2250.7127    
        78   0             -1417.7222      2.2387597e-06  0.00019153954 -0.00019108759  6.2643257e-06 -1.5886086e-05  8.6208959e-06 -1.391903       10.213363      13.267547      16.609657      2250.7127    
        79   0             -1417.7222      1.3100238e-05  3.8482647e-05  1.4300576e-06 -6.1199069e-07  1.0435222e-05 -1.0729788e-06 -1.3919279      10.213363      13.267547      16.609657      2250.7127    
        80   0             -1417.7222     -4.3735733e-06  2.132121e-05  -4.4890763e-05  1.0448833e-05 -5.7651816e-05 -5.5262511e-06 -1.3919394      10.213363      13.267547      16.609657      2250.7127    
        81   0             -1417.7222      2.8896459e-07 -6.6710041e-05  6.0079248e-05  7.4976873e-06 -8.7321442e-06 -2.1648838e-06 -1.3919307      10.213363      13.267547      16.609657      2250.7127    
        82   0             -1417.7222      5.5103993e-06 -1.9427128e-05  3.1765689e-05  4.1926365e-06 -1.355276e-05   1.3119871e-06 -1.3919218      10.213363      13.267547      16.609657      2250.7127    
        83   0             -1417.7222      8.0755697e-07 -2.5486336e-05  2.0739613e-05  7.1693939e-06  5.2957485e-06  1.394317e-06  -1.3919216      10.213363      13.267547      16.609657      2250.7127    
        84   0             -1417.7222      1.2906892e-06  5.2986085e-06 -8.2899016e-06  6.8633606e-06 -1.3587803e-06  1.5334507e-07 -1.3919248      10.213363      13.267547      16.609657      2250.7127    
        85   0             -1417.7222      2.6431391e-06  5.3145925e-06 -3.3927765e-06  6.0076014e-06  3.3516624e-06 -3.7301507e-07 -1.3919261      10.213363      13.267547      16.609657      2250.7127    
        86   0             -1417.7222      1.9198683e-06  7.6047237e-06 -8.3105137e-06  6.4653949e-06  3.6753023e-07 -2.3940997e-07 -1.3919258      10.213363      13.267547      16.609657      2250.7127    
        87   0             -1417.7222      1.7029441e-06  1.6510286e-06 -3.1450133e-06  6.602817e-06   1.6162323e-06  5.9899045e-08 -1.391925       10.213363      13.267547      16.609657      2250.7127    
        88   0             -1417.7222      2.1639229e-06  1.7025891e-06 -1.5218284e-06  6.3110079e-06  3.86384e-07    1.1966431e-07 -1.3919249      10.213363      13.267547      16.609657      2250.7127    
        89   0             -1417.7222      1.9551616e-06 -5.802269e-07   2.8413424e-09  6.4428704e-06  7.6316377e-07  2.3295925e-08 -1.3919251      10.213363      13.267547      16.609657      2250.7127    
        90   0             -1417.7222      1.8466055e-06  4.5714316e-07 -1.4290258e-06  6.5116991e-06 -2.4907584e-08 -5.5821421e-08 -1.3919253      10.213363      13.267547      16.609657      2250.7127    
        91   0             -1417.7222      2.0167202e-06  7.6779597e-07 -1.1218086e-06  6.4041732e-06  3.3237763e-07 -3.3649424e-08 -1.3919253      10.213363      13.267547      16.609657      2250.7127    
        92   0             -1417.7222      1.9762106e-06  1.3784263e-06 -1.8795322e-06  6.4297377e-06  2.8895517e-07  9.037252e-09  -1.3919251      10.213363      13.267547      16.609657      2250.7127    
        93   0             -1417.7222      1.9333967e-06  1.2327022e-06 -1.8893112e-06  6.456799e-06   5.1680219e-07  1.7130586e-08 -1.3919251      10.213363      13.267547      16.609657      2250.7127    
        94   0             -1417.7222      1.9686982e-06  1.3160167e-06 -1.8445756e-06  6.4346536e-06  5.3359955e-07  4.3910755e-09 -1.3919252      10.213363      13.267547      16.609657      2250.7127    
        95   0             -1417.7222      1.9628625e-06  1.2410707e-06 -1.7906539e-06  6.4381707e-06  5.480462e-07  -3.2482348e-09 -1.3919252      10.213363      13.267547      16.609657      2250.7127    
        96   0             -1417.7222      1.9550144e-06  1.208302e-06  -1.7864324e-06  6.4431736e-06  5.2614814e-07 -2.9960911e-09 -1.3919252      10.213363      13.267547      16.609657      2250.7127    
        97   0             -1417.7222      1.9614191e-06  1.2115e-06    -1.766261e-06   6.4390184e-06  5.137032e-07  -3.2937017e-10 -1.3919252      10.213363      13.267547      16.609657      2250.7127    
        98   0             -1417.7222      1.9605412e-06  1.2103736e-06 -1.7683803e-06  6.4396302e-06  5.0677624e-07  7.043255e-10  -1.3919252      10.213363      13.267547      16.609657      2250.7127    
Loop time of 0.039664 on 4 procs for 37 steps with 192 atoms

49.2% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563701  -1417.72224585011  -1417.72224585011
  Force two-norm initial, final = 0.0034420975 5.1551235e-11
  Force max component initial, final = 0.00036353293 8.1367496e-12
  Final line search alpha, max atom move = 1 8.1367496e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.036245   | 0.036442   | 0.036616   |   0.1 | 91.88
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001962   | 0.0021202  | 0.002327   |   0.3 |  5.35
Output  | 0.000518   | 0.0005475  | 0.000615   |   0.0 |  1.38
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.0005545  |            |       |  1.40

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pe
variable e1 equal ${tmp}
variable e1 equal -1417.72224585011
variable tmp equal press
variable p1 equal ${tmp}
variable p1 equal 1.9605411640578e-06
variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal 1.21037361589968e-06
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal -1.76838032510804e-06
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal 6.43963020138174e-06
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.06776243350325e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 7.04325500130637e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal -1.39192516379623

# Compute elastic constant from pressure tensor

variable C1pos equal ${d1}
variable C1pos equal -0.000122994498980683
variable C2pos equal ${d2}
variable C2pos equal 0.000174383059558323
variable C3pos equal ${d3}
variable C3pos equal -0.000646442339995577
variable C4pos equal ${d4}
variable C4pos equal 139.192516382089
variable C5pos equal ${d5}
variable C5pos equal -6.79317879073033e-08
variable C6pos equal ${d6}
variable C6pos equal 1.0285798624081e-06

# Combine positive and negative

variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
variable C14 equal 0.5*(${C1neg}+${C1pos})
variable C14 equal 0.5*(0.000122981000391346+${C1pos})
variable C14 equal 0.5*(0.000122981000391346+-0.000122994498980683)
variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
variable C24 equal 0.5*(${C2neg}+${C2pos})
variable C24 equal 0.5*(-0.000174389634983573+${C2pos})
variable C24 equal 0.5*(-0.000174389634983573+0.000174383059558323)
variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
variable C34 equal 0.5*(${C3neg}+${C3pos})
variable C34 equal 0.5*(0.000646430365974302+${C3pos})
variable C34 equal 0.5*(0.000646430365974302+-0.000646442339995577)
variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
variable C44 equal 0.5*(${C4neg}+${C4pos})
variable C44 equal 0.5*(139.192516754169+${C4pos})
variable C44 equal 0.5*(139.192516754169+139.192516382089)
variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
variable C54 equal 0.5*(${C5neg}+${C5pos})
variable C54 equal 0.5*(6.29391238738499e-08+${C5pos})
variable C54 equal 0.5*(6.29391238738499e-08+-6.79317879073033e-08)
variable C6${dir} equal 0.5*(${C6neg}+${C6pos})
variable C64 equal 0.5*(${C6neg}+${C6pos})
variable C64 equal 0.5*(-1.0306979080417e-06+${C6pos})
variable C64 equal 0.5*(-1.0306979080417e-06+1.0285798624081e-06)

# Delete dir to make sure it is not reused

variable dir delete

# uxz Perturbation

variable dir equal 5
include displace.mod
# NOTE: This script should not need to be
# modified. See in.elastic for more info.
#
# Find which reference length to use

if "${dir} == 1" then    "variable len0 equal ${lx0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"
if "${dir} == 4" then    "variable len0 equal ${lz0}"
if "${dir} == 5" then    "variable len0 equal ${lz0}"
variable len0 equal ${lz0}
variable len0 equal 16.6096567387831
if "${dir} == 6" then    "variable len0 equal ${ly0}"

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Negative deformation

variable delta equal -${up}*${len0}
variable delta equal -1e-06*${len0}
variable delta equal -1e-06*16.6096567387831
variable deltaxy equal -${up}*xy
variable deltaxy equal -1e-06*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -1e-06*xz
variable deltayz equal -${up}*yz
variable deltayz equal -1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
change_box all xz delta ${delta} remap units box
change_box all xz delta -1.66096567387831e-05 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 -1.6609657e-05 0)
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222     -0.053117545   -0.57101704     0.37697897     0.034685431    0.1881257      1.4220175      0.068808206    10.213363      13.267547      16.609657      2250.7127    
        62   0             -1417.7222      0.0014772113  -0.03850232     0.043730094   -0.00079614057 -0.052401197    1.4068475      0.034117311    10.213363      13.267547      16.609657      2250.7127    
        63   0             -1417.7222      0.0067176304  -0.11281232     0.13718699    -0.0042217788   0.031006252    1.3942688      0.0053579354   10.213363      13.267547      16.609657      2250.7127    
        64   0             -1417.7222     -0.0020698275  -0.0079765183   0.00044308284  0.0013239531  -0.022605974    1.3905909     -0.0030505643   10.213363      13.267547      16.609657      2250.7127    
        65   0             -1417.7222     -0.0010572866  -0.017772199    0.013921215    0.00067912417 -0.0011591552   1.390687      -0.0028311253   10.213363      13.267547      16.609657      2250.7127    
        66   0             -1417.7222      0.0012255216   0.007642479   -0.00319861    -0.00076730431 -0.0055193356   1.3918497     -0.00017307152  10.213363      13.267547      16.609657      2250.7127    
        67   0             -1417.7222     -0.00011791104  0.0029842618  -0.0034206411   8.2646211e-05 -0.0005356729   1.3923031      0.00086389439  10.213363      13.267547      16.609657      2250.7127    
        68   0             -1417.7222     -0.00036828607  0.00036601972 -0.0017118569   0.00024097902  0.0013739615   1.3921204      0.00044633224  10.213363      13.267547      16.609657      2250.7127    
        69   0             -1417.7222      0.00020994067  0.0017139007  -0.00095896205 -0.00012511664  0.00059010586  1.3918668     -0.00013345797  10.213363      13.267547      16.609657      2250.7127    
        70   0             -1417.7222      7.4439604e-05 -0.00096040077  0.0012231006  -3.9381067e-05  0.0012266638   1.3918034     -0.00027828929  10.213363      13.267547      16.609657      2250.7127    
        71   0             -1417.7222     -0.00016669883  3.4585625e-05 -0.00064791684  0.00011323471 -0.00040748725  1.3918988     -6.0343736e-05  10.213363      13.267547      16.609657      2250.7127    
        72   0             -1417.7222      6.7249564e-05 -0.00035824133  0.00059486475 -3.4874727e-05 -0.00025926155  1.3919872      0.00014190485  10.213363      13.267547      16.609657      2250.7127    
        73   0             -1417.7222      6.376262e-05   0.000186749    3.7214643e-05 -3.2675785e-05 -0.00056448145  1.391974       0.00011169186  10.213363      13.267547      16.609657      2250.7127    
        74   0             -1417.7222     -5.5198953e-05 -0.00025279471  4.4571893e-05  4.262596e-05  -0.000208284    1.391923      -4.8772395e-06  10.213363      13.267547      16.609657      2250.7127    
        75   0             -1417.7222      8.5098454e-06 -0.000177753    0.00020098629  2.2962445e-06  6.7688192e-05  1.3918993     -5.9132438e-05  10.213363      13.267547      16.609657      2250.7127    
        76   0             -1417.7222      2.4330855e-05  6.3781353e-05  1.6931148e-05 -7.7199376e-06  7.8184965e-05  1.3919144     -2.4662623e-05  10.213363      13.267547      16.609657      2250.7127    
        77   0             -1417.7222     -1.5590015e-05 -3.2178695e-05 -3.2140925e-05  1.7549575e-05  0.00014301332  1.3919358      2.4221056e-05  10.213363      13.267547      16.609657      2250.7127    
        78   0             -1417.7222      2.2444043e-06  0.00018844737 -0.0001879739   6.259743e-06  -1.5833154e-05  1.3919356      2.3952142e-05  10.213363      13.267547      16.609657      2250.7127    
        79   0             -1417.7222      1.3098871e-05  3.5452089e-05  4.455328e-06  -6.1080456e-07  1.0426264e-05  1.3919239     -2.9793012e-06  10.213363      13.267547      16.609657      2250.7127    
        80   0             -1417.7222     -4.3761381e-06  1.8368312e-05 -4.1947544e-05  1.0450817e-05 -5.767409e-05   1.3919185     -1.5340242e-05  10.213363      13.267547      16.609657      2250.7127    
        81   0             -1417.7222      2.8874904e-07 -6.9738841e-05  6.3107043e-05  7.4980459e-06 -8.7306438e-06  1.3919225     -6.0076221e-06  10.213363      13.267547      16.609657      2250.7127    
        82   0             -1417.7222      5.5085565e-06 -2.2501282e-05  3.4833582e-05  4.1933691e-06 -1.3552075e-05  1.3919268      3.637273e-06   10.213363      13.267547      16.609657      2250.7127    
        83   0             -1417.7222      8.0601529e-07 -2.8561691e-05  2.3809181e-05  7.1705556e-06  5.2961741e-06  1.3919269      3.8657507e-06  10.213363      13.267547      16.609657      2250.7127    
        84   0             -1417.7222      1.2905876e-06  2.251609e-06  -5.2435103e-06  6.8636641e-06 -1.3595488e-06  1.3919254      4.249122e-07   10.213363      13.267547      16.609657      2250.7127    
        85   0             -1417.7222      2.6429385e-06  2.2670972e-06 -3.4610636e-07  6.0078247e-06  3.3516966e-06  1.3919247     -1.0327192e-06  10.213363      13.267547      16.609657      2250.7127    
        86   0             -1417.7222      1.9196847e-06  4.5578505e-06 -5.264606e-06   6.4658096e-06  3.6701558e-07  1.3919249     -6.6287052e-07  10.213363      13.267547      16.609657      2250.7127    
        87   0             -1417.7222      1.7027481e-06 -1.3950994e-06 -9.9214315e-08  6.6025581e-06  1.616102e-06   1.3919252      1.6557427e-07  10.213363      13.267547      16.609657      2250.7127    
        88   0             -1417.7222      2.1638043e-06 -1.3421711e-06  1.5228223e-06  6.3107618e-06  3.8641277e-07  1.3919253      3.3085137e-07  10.213363      13.267547      16.609657      2250.7127    
        89   0             -1417.7222      1.9551319e-06 -3.6271127e-06  3.0494932e-06  6.4430153e-06  7.6315776e-07  1.3919252      6.4426522e-08  10.213363      13.267547      16.609657      2250.7127    
        90   0             -1417.7222      1.8464301e-06 -2.5908617e-06  1.6187104e-06  6.5114417e-06 -2.4627497e-08  1.3919251     -1.541874e-07   10.213363      13.267547      16.609657      2250.7127    
        91   0             -1417.7222      2.0164541e-06 -2.2799339e-06  1.925538e-06   6.4037582e-06  3.3255529e-07  1.3919251     -9.2884204e-08  10.213363      13.267547      16.609657      2250.7127    
        92   0             -1417.7222      1.9759001e-06 -1.6688183e-06  1.1669647e-06  6.4295539e-06  2.8894821e-07  1.3919252      2.4928449e-08  10.213363      13.267547      16.609657      2250.7127    
        93   0             -1417.7222      1.933138e-06  -1.814542e-06   1.1571952e-06  6.4567609e-06  5.1663243e-07  1.3919252      4.7279204e-08  10.213363      13.267547      16.609657      2250.7127    
        94   0             -1417.7222      1.9684998e-06 -1.7311397e-06  1.2021022e-06  6.4345368e-06  5.3360145e-07  1.3919252      1.2134189e-08  10.213363      13.267547      16.609657      2250.7127    
        95   0             -1417.7222      1.9624579e-06 -1.8061621e-06  1.2557241e-06  6.4378116e-06  5.4796622e-07  1.3919252     -8.9577524e-09  10.213363      13.267547      16.609657      2250.7127    
        96   0             -1417.7222      1.9546381e-06 -1.8389154e-06  1.2599741e-06  6.4428555e-06  5.2619335e-07  1.3919252     -8.2135913e-09  10.213363      13.267547      16.609657      2250.7127    
        97   0             -1417.7222      1.9611725e-06 -1.8356434e-06  1.2804509e-06  6.4387099e-06  5.1359445e-07  1.3919252     -8.8388889e-10  10.213363      13.267547      16.609657      2250.7127    
        98   0             -1417.7222      1.9602728e-06 -1.8369427e-06  1.2782646e-06  6.4394966e-06  5.0676929e-07  1.3919252      1.8708349e-09  10.213363      13.267547      16.609657      2250.7127    
Loop time of 0.0391018 on 4 procs for 37 steps with 192 atoms

49.9% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563688  -1417.72224585011  -1417.72224585011
  Force two-norm initial, final = 0.0034427179 5.158663e-11
  Force max component initial, final = 0.00036353284 8.1404906e-12
  Final line search alpha, max atom move = 1 8.1404906e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.03594    | 0.036002   | 0.036072   |   0.0 | 92.07
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001988   | 0.0020573  | 0.002117   |   0.1 |  5.26
Output  | 0.000499   | 0.000524   | 0.000574   |   0.0 |  1.34
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.000518   |            |       |  1.32

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal -1.83694272677342e-06
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal 1.27826456548659e-06
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal 6.43949655408531e-06
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.06769288573617e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 1.39192516642297
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.87083493429982e-09

# Compute elastic constant from pressure tensor

variable C1neg equal ${d1}
variable C1neg equal -0.000181737135286627
variable C2neg equal ${d2}
variable C2neg equal 0.000130281429501141
variable C3neg equal ${d3}
variable C3neg equal 0.000646428975265934
variable C4neg equal ${d4}
variable C4neg equal 1.84617708960983e-07
variable C5neg equal ${d5}
variable C5neg equal 139.192516639796
variable C6neg equal ${d6}
variable C6neg equal -1.0292753400789e-06

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Positive deformation

variable delta equal ${up}*${len0}
variable delta equal 1e-06*${len0}
variable delta equal 1e-06*16.6096567387831
variable deltaxy equal ${up}*xy
variable deltaxy equal 1e-06*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1e-06*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
change_box all xz delta ${delta} remap units box
change_box all xz delta 1.66096567387831e-05 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 1.6609657e-05 0)
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222     -0.0531175     -0.57101736     0.37697893     0.03468593     0.18812975    -1.3728029      0.068806453    10.213363      13.267547      16.609657      2250.7127    
        62   0             -1417.7222      0.001471908   -0.038553483    0.043761598   -0.00079239062 -0.052382109   -1.3824411      0.034119708    10.213363      13.267547      16.609657      2250.7127    
        63   0             -1417.7222      0.0067162542  -0.11281379     0.13718339    -0.0042208302   0.031003544   -1.390434       0.0053607208   10.213363      13.267547      16.609657      2250.7127    
        64   0             -1417.7222     -0.0020699013  -0.0079656416   0.00043198485  0.0013239529  -0.02260998    -1.3927733     -0.0030532125   10.213363      13.267547      16.609657      2250.7127    
        65   0             -1417.7222     -0.0010573753  -0.017762257    0.013910995    0.00067913634 -0.0011612088  -1.3927124     -0.0028335187   10.213363      13.267547      16.609657      2250.7127    
        66   0             -1417.7222      0.0012254511   0.0076425516  -0.0031989359  -0.00076726232 -0.0055198545  -1.3919732     -0.00017322515  10.213363      13.267547      16.609657      2250.7127    
        67   0             -1417.7222     -0.00011779776  0.0029834922  -0.0034194732   8.2587692e-05 -0.00053428774 -1.3916847      0.0008651021   10.213363      13.267547      16.609657      2250.7127    
        68   0             -1417.7222     -0.00036820611  0.00036582976 -0.001711383    0.00024093486  0.0013740655  -1.391801       0.00044697472  10.213363      13.267547      16.609657      2250.7127    
        69   0             -1417.7222      0.00020996001  0.0017140652  -0.00095905439 -0.00012513081  0.00059009751 -1.3919623     -0.00013370513  10.213363      13.267547      16.609657      2250.7127    
        70   0             -1417.7222      7.447352e-05  -0.00096029363  0.0012231207  -3.9406481e-05  0.0012262409  -1.3920026     -0.00027880742  10.213363      13.267547      16.609657      2250.7127    
        71   0             -1417.7222     -0.00016667852  3.4572631e-05 -0.00064782937  0.00011322116 -0.00040740584 -1.391942      -6.0465168e-05  10.213363      13.267547      16.609657      2250.7127    
        72   0             -1417.7222      6.7244069e-05 -0.0003582586   0.00059485997 -3.4869167e-05 -0.00025930206 -1.3918856      0.00014222678  10.213363      13.267547      16.609657      2250.7127    
        73   0             -1417.7222      6.3758565e-05  0.00018672346  3.7224013e-05 -3.2671783e-05 -0.00056445136 -1.3918941      0.0001119489   10.213363      13.267547      16.609657      2250.7127    
        74   0             -1417.7222     -5.5200835e-05 -0.00025280391  4.4574547e-05  4.2626857e-05 -0.000208291   -1.3919265     -4.8877956e-06  10.213363      13.267547      16.609657      2250.7127    
        75   0             -1417.7222      8.501497e-06  -0.00017780596  0.00020100954  2.3009071e-06  6.7796387e-05 -1.3919416     -5.9295949e-05  10.213363      13.267547      16.609657      2250.7127    
        76   0             -1417.7222      2.4325673e-05  6.373635e-05   1.6957434e-05 -7.7167666e-06  7.8221902e-05 -1.391932      -2.4735422e-05  10.213363      13.267547      16.609657      2250.7127    
        77   0             -1417.7222     -1.5593406e-05 -3.2155268e-05 -3.2177164e-05  1.7552215e-05  0.00014298725 -1.3919184      2.4299953e-05  10.213363      13.267547      16.609657      2250.7127    
        78   0             -1417.7222      2.2416591e-06  0.00018847249 -0.0001880097   6.2621859e-06 -1.5862065e-05 -1.3919185      2.4031458e-05  10.213363      13.267547      16.609657      2250.7127    
        79   0             -1417.7222      1.3099554e-05  3.5442331e-05  4.4678466e-06 -6.1151645e-07  1.0432178e-05 -1.391926      -2.9895715e-06  10.213363      13.267547      16.609657      2250.7127    
        80   0             -1417.7222     -4.3748726e-06  1.8319071e-05 -4.1893581e-05  1.0449892e-05 -5.7662933e-05 -1.3919294     -1.5398001e-05  10.213363      13.267547      16.609657      2250.7127    
        81   0             -1417.7222      2.887989e-07  -6.9748493e-05  6.311722e-05   7.4976701e-06 -8.731162e-06  -1.3919268     -6.0314991e-06  10.213363      13.267547      16.609657      2250.7127    
        82   0             -1417.7222      5.5096353e-06 -2.2486332e-05  3.4822162e-05  4.193076e-06  -1.3552634e-05 -1.3919241      3.6532879e-06  10.213363      13.267547      16.609657      2250.7127    
        83   0             -1417.7222      8.0665621e-07 -2.8547042e-05  2.3797171e-05  7.1698399e-06  5.2961396e-06 -1.3919241      3.8828335e-06  10.213363      13.267547      16.609657      2250.7127    
        84   0             -1417.7222      1.2906641e-06  2.2519061e-06 -5.2434881e-06  6.8635744e-06 -1.359184e-06  -1.391925       4.2698662e-07  10.213363      13.267547      16.609657      2250.7127    
        85   0             -1417.7222      2.6427846e-06  2.2671772e-06 -3.4618413e-07  6.0073606e-06  3.3517788e-06 -1.3919255     -1.0380308e-06  10.213363      13.267547      16.609657      2250.7127    
        86   0             -1417.7222      1.9195197e-06  4.5576131e-06 -5.2643854e-06  6.4653313e-06  3.6722644e-07 -1.3919254     -6.663106e-07   10.213363      13.267547      16.609657      2250.7127    
        87   0             -1417.7222      1.7027803e-06 -1.3956704e-06 -9.8779326e-08  6.6027907e-06  1.6161915e-06 -1.3919251      1.6652454e-07  10.213363      13.267547      16.609657      2250.7127    
        88   0             -1417.7222      2.1637577e-06 -1.343427e-06   1.5237644e-06  6.3109359e-06  3.8633595e-07 -1.3919251      3.3281325e-07  10.213363      13.267547      16.609657      2250.7127    
        89   0             -1417.7222      1.9551165e-06 -3.6272319e-06  3.0496146e-06  6.4429667e-06  7.6322478e-07 -1.3919251      6.4839383e-08  10.213363      13.267547      16.609657      2250.7127    
        90   0             -1417.7222      1.846539e-06  -2.5902535e-06  1.618159e-06   6.5117114e-06 -2.4868069e-08 -1.3919252     -1.5515727e-07  10.213363      13.267547      16.609657      2250.7127    
        91   0             -1417.7222      2.0164733e-06 -2.2797853e-06  1.9252573e-06  6.4039478e-06  3.3241146e-07 -1.3919252     -9.3503179e-08  10.213363      13.267547      16.609657      2250.7127    
        92   0             -1417.7222      1.9759701e-06 -1.6687516e-06  1.1670476e-06  6.4296144e-06  2.889833e-07  -1.3919252      2.5172498e-08  10.213363      13.267547      16.609657      2250.7127    
        93   0             -1417.7222      1.9331597e-06 -1.814597e-06   1.1573027e-06  6.4567736e-06  5.1670197e-07 -1.3919252      4.7599756e-08  10.213363      13.267547      16.609657      2250.7127    
        94   0             -1417.7222      1.9684394e-06 -1.7311631e-06  1.2020092e-06  6.434472e-06   5.3363464e-07 -1.3919252      1.2237878e-08  10.213363      13.267547      16.609657      2250.7127    
        95   0             -1417.7222      1.9624912e-06 -1.8062355e-06  1.2558569e-06  6.4378521e-06  5.4798203e-07 -1.3919252     -9.0077003e-09  10.213363      13.267547      16.609657      2250.7127    
        96   0             -1417.7222      1.9547277e-06 -1.838866e-06   1.2600197e-06  6.4430294e-06  5.2609345e-07 -1.3919252     -8.2945196e-09  10.213363      13.267547      16.609657      2250.7127    
        97   0             -1417.7222      1.9612216e-06 -1.8356074e-06  1.2804616e-06  6.4388105e-06  5.1366558e-07 -1.3919252     -8.9274043e-10  10.213363      13.267547      16.609657      2250.7127    
        98   0             -1417.7222      1.9602849e-06 -1.8368887e-06  1.2781735e-06  6.4395698e-06  5.0674969e-07 -1.3919252      1.9157249e-09  10.213363      13.267547      16.609657      2250.7127    
Loop time of 0.038894 on 4 procs for 37 steps with 192 atoms

50.2% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563695  -1417.72224585011  -1417.72224585011
  Force two-norm initial, final = 0.0034423914 5.154327e-11
  Force max component initial, final = 0.00036353271 8.1337445e-12
  Final line search alpha, max atom move = 1 8.1337445e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.035843   | 0.0359     | 0.036016   |   0.0 | 92.30
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001773   | 0.0018813  | 0.00193    |   0.1 |  4.84
Output  | 0.000562   | 0.00058625 | 0.000648   |   0.0 |  1.51
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.0005263  |            |       |  1.35

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pe
variable e1 equal ${tmp}
variable e1 equal -1417.72224585011
variable tmp equal press
variable p1 equal ${tmp}
variable p1 equal 1.96028487831336e-06
variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal -1.83688866919083e-06
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal 1.27817352113696e-06
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal 6.43956978299396e-06
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 5.06749688748351e-07
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal -1.3919251650596
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.91572485668417e-09

# Compute elastic constant from pressure tensor

variable C1pos equal ${d1}
variable C1pos equal 0.000181731729528368
variable C2pos equal ${d2}
variable C2pos equal -0.000130272325066178
variable C3pos equal ${d3}
variable C3pos equal -0.000646436298156799
variable C4pos equal ${d4}
variable C4pos equal -1.89106701199418e-07
variable C5pos equal ${d5}
variable C5pos equal 139.192516508461
variable C6pos equal ${d6}
variable C6pos equal 1.0312353226055e-06

# Combine positive and negative

variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
variable C15 equal 0.5*(${C1neg}+${C1pos})
variable C15 equal 0.5*(-0.000181737135286627+${C1pos})
variable C15 equal 0.5*(-0.000181737135286627+0.000181731729528368)
variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
variable C25 equal 0.5*(${C2neg}+${C2pos})
variable C25 equal 0.5*(0.000130281429501141+${C2pos})
variable C25 equal 0.5*(0.000130281429501141+-0.000130272325066178)
variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
variable C35 equal 0.5*(${C3neg}+${C3pos})
variable C35 equal 0.5*(0.000646428975265934+${C3pos})
variable C35 equal 0.5*(0.000646428975265934+-0.000646436298156799)
variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
variable C45 equal 0.5*(${C4neg}+${C4pos})
variable C45 equal 0.5*(1.84617708960983e-07+${C4pos})
variable C45 equal 0.5*(1.84617708960983e-07+-1.89106701199418e-07)
variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
variable C55 equal 0.5*(${C5neg}+${C5pos})
variable C55 equal 0.5*(139.192516639796+${C5pos})
variable C55 equal 0.5*(139.192516639796+139.192516508461)
variable C6${dir} equal 0.5*(${C6neg}+${C6pos})
variable C65 equal 0.5*(${C6neg}+${C6pos})
variable C65 equal 0.5*(-1.0292753400789e-06+${C6pos})
variable C65 equal 0.5*(-1.0292753400789e-06+1.0312353226055e-06)

# Delete dir to make sure it is not reused

variable dir delete

# uxy Perturbation

variable dir equal 6
include displace.mod
# NOTE: This script should not need to be
# modified. See in.elastic for more info.
#
# Find which reference length to use

if "${dir} == 1" then    "variable len0 equal ${lx0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"
if "${dir} == 4" then    "variable len0 equal ${lz0}"
if "${dir} == 5" then    "variable len0 equal ${lz0}"
if "${dir} == 6" then    "variable len0 equal ${ly0}"
variable len0 equal ${ly0}
variable len0 equal 13.2675474943527

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Negative deformation

variable delta equal -${up}*${len0}
variable delta equal -1e-06*${len0}
variable delta equal -1e-06*13.2675474943527
variable deltaxy equal -${up}*xy
variable deltaxy equal -1e-06*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -1e-06*xz
variable deltayz equal -${up}*yz
variable deltayz equal -1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"
change_box all xy delta ${delta} remap units box
change_box all xy delta -1.32675474943527e-05 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600354 0 0)

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222     -0.053115517   -0.57101771     0.37699045     0.03468071     2.1043978      0.024605268    0.068807426    10.213363      13.267547      16.609657      2250.7127    
        62   0             -1417.7222      0.0014490458  -0.038785653    0.043916714   -0.00078392351  1.7731343      0.012210355    0.034135372    10.213363      13.267547      16.609657      2250.7127    
        63   0             -1417.7222      0.0067401175  -0.11253106     0.13699472    -0.0042432987   1.7894798      0.001916836    0.0053584969   10.213363      13.267547      16.609657      2250.7127    
        64   0             -1417.7222     -0.0020602066  -0.0082760814   0.00078531361  0.0013101478   1.69211       -0.0010911524  -0.0030521065   10.213363      13.267547      16.609657      2250.7127    
        65   0             -1417.7222     -0.0010593945  -0.017683209    0.013832507    0.00067251752  1.6961932     -0.0010107489  -0.0028262892   10.213363      13.267547      16.609657      2250.7127    
        66   0             -1417.7222      0.0012256354   0.0075284484  -0.0030762472  -0.00077529504  1.6866112     -6.0037045e-05 -0.00016847956  10.213363      13.267547      16.609657      2250.7127    
        67   0             -1417.7222     -0.0001180253   0.0029701647  -0.0033990669   7.4826312e-05  1.6935398      0.00031064953  0.00086861218  10.213363      13.267547      16.609657      2250.7127    
        68   0             -1417.7222     -0.00036794927  0.0003890182  -0.0017257629   0.00023289686  1.6983611      0.00016012123  0.00044753922  10.213363      13.267547      16.609657      2250.7127    
        69   0             -1417.7222      0.00020986652  0.0017144593  -0.00095193352 -0.00013292628  1.6990469     -4.7745335e-05 -0.00013336525  10.213363      13.267547      16.609657      2250.7127    
        70   0             -1417.7222      7.5169213e-05 -0.00092890897  0.0012021226  -4.7705996e-05  1.6997902     -9.9687243e-05 -0.00027878547  10.213363      13.267547      16.609657      2250.7127    
        71   0             -1417.7222     -0.00016636597  2.2682434e-05 -0.00062693761  0.00010515725  1.6973652     -2.1681588e-05 -6.0604602e-05  10.213363      13.267547      16.609657      2250.7127    
        72   0             -1417.7222      6.7643158e-05 -0.00035706357  0.00060299075 -4.2997704e-05  1.6969611      5.0799214e-05  0.00014198955  10.213363      13.267547      16.609657      2250.7127    
        73   0             -1417.7222      6.4271922e-05  0.00017617688  5.7509809e-05 -4.0870927e-05  1.6966386      3.9974942e-05  0.00011178015  10.213363      13.267547      16.609657      2250.7127    
        74   0             -1417.7222     -5.4678825e-05 -0.00025473824  5.6275863e-05  3.4425907e-05  1.6973035     -1.7390866e-06 -4.8627192e-06  10.213363      13.267547      16.609657      2250.7127    
        75   0             -1417.7222      8.9915635e-06 -0.00017437251  0.00020722389 -5.8766983e-06  1.697833      -2.1122485e-05 -5.905149e-05   10.213363      13.267547      16.609657      2250.7127    
        76   0             -1417.7222      2.4847829e-05  6.5593268e-05  2.4864615e-05 -1.5914397e-05  1.6978502     -8.796777e-06  -2.459888e-05   10.213363      13.267547      16.609657      2250.7127    
        77   0             -1417.7222     -1.5102627e-05 -2.7702151e-05 -2.6978714e-05  9.3729845e-06  1.6977956      8.6874523e-06  2.4288284e-05  10.213363      13.267547      16.609657      2250.7127    
        78   0             -1417.7222      2.7024269e-06  0.00018745097 -0.00017744477 -1.8989182e-06  1.697529       8.548866e-06   2.3901021e-05  10.213363      13.267547      16.609657      2250.7127    
        79   0             -1417.7222      1.3594132e-05  3.7345994e-05  1.2230901e-05 -8.794499e-06   1.6975429     -1.0985212e-06 -3.0696532e-06  10.213363      13.267547      16.609657      2250.7127    
        80   0             -1417.7222     -3.8979643e-06  1.7504524e-05 -3.1476941e-05  2.278524e-06   1.6975257     -5.525753e-06  -1.5448973e-05  10.213363      13.267547      16.609657      2250.7127    
        81   0             -1417.7222      7.7051636e-07 -6.8440563e-05  7.142796e-05  -6.7584807e-07  1.6976245     -2.1588536e-06 -6.0361342e-06  10.213363      13.267547      16.609657      2250.7127    
        82   0             -1417.7222      5.9898235e-06 -2.1906046e-05  4.3854915e-05 -3.9793984e-06  1.6976278      1.3006003e-06  3.6359269e-06  10.213363      13.267547      16.609657      2250.7127    
        83   0             -1417.7222      1.2962404e-06 -2.7191588e-05  3.2089067e-05 -1.0087581e-06  1.6976349      1.3868875e-06  3.8774581e-06  10.213363      13.267547      16.609657      2250.7127    
        84   0             -1417.7222      1.7778445e-06  3.1589209e-06  3.4883769e-06 -1.3137643e-06  1.6976151      1.5296472e-07  4.2775544e-07  10.213363      13.267547      16.609657      2250.7127    
        85   0             -1417.7222      3.1316728e-06  3.4298578e-06  8.1360114e-06 -2.1708508e-06  1.6976155     -3.7016842e-07 -1.0348436e-06  10.213363      13.267547      16.609657      2250.7127    
        86   0             -1417.7222      2.4091631e-06  5.5506923e-06  3.3899611e-06 -1.7131642e-06  1.6976129     -2.3772467e-07 -6.6462249e-07  10.213363      13.267547      16.609657      2250.7127    
        87   0             -1417.7222      2.1920207e-06 -3.0215976e-07  8.4540793e-06 -1.5758574e-06  1.6976167      5.9170855e-08  1.6542442e-07  10.213363      13.267547      16.609657      2250.7127    
        88   0             -1417.7222      2.6526351e-06 -3.1147947e-07  1.0136767e-05 -1.8673825e-06  1.6976169      1.1845476e-07  3.312263e-07   10.213363      13.267547      16.609657      2250.7127    
        89   0             -1417.7222      2.4441861e-06 -2.5642287e-06  1.1632541e-05 -1.7357541e-06  1.6976176      2.300083e-08   6.4332949e-08  10.213363      13.267547      16.609657      2250.7127    
        90   0             -1417.7222      2.3356584e-06 -1.578416e-06   1.0252014e-05 -1.6666231e-06  1.6976162     -5.5334017e-08 -1.5469763e-07  10.213363      13.267547      16.609657      2250.7127    
        91   0             -1417.7222      2.5052881e-06 -1.2472978e-06  1.053748e-05  -1.774318e-06   1.6976162     -3.32842e-08   -9.3052383e-08  10.213363      13.267547      16.609657      2250.7127    
        92   0             -1417.7222      2.4650251e-06 -6.4370884e-07  9.7876558e-06 -1.7488717e-06  1.697616       8.988086e-09   2.5087144e-08  10.213363      13.267547      16.609657      2250.7127    
        93   0             -1417.7222      2.4220896e-06 -7.7469131e-07  9.762702e-06  -1.7217419e-06  1.6976163      1.6985472e-08  4.7619988e-08  10.213363      13.267547      16.609657      2250.7127    
        94   0             -1417.7222      2.4576271e-06 -6.899796e-07   9.8067574e-06 -1.7438966e-06  1.6976164      4.3624556e-09  1.2248626e-08  10.213363      13.267547      16.609657      2250.7127    
        95   0             -1417.7222      2.4517688e-06 -7.6360477e-07  9.8592704e-06 -1.7403593e-06  1.6976164     -3.1949762e-09 -8.9274043e-09  10.213363      13.267547      16.609657      2250.7127    
        96   0             -1417.7222      2.4439075e-06 -7.9766389e-07  9.8647722e-06 -1.7353858e-06  1.6976164     -2.9707347e-09 -8.2641715e-09  10.213363      13.267547      16.609657      2250.7127    
        97   0             -1417.7222      2.4504992e-06 -7.9521296e-07  9.8860279e-06 -1.7393175e-06  1.6976164     -3.36525e-10   -8.8768241e-10  10.213363      13.267547      16.609657      2250.7127    
        98   0             -1417.7222      2.449348e-06  -7.971192e-07   9.8841603e-06 -1.7389972e-06  1.6976164      6.8042556e-10  1.8689382e-09  10.213363      13.267547      16.609657      2250.7127    
Loop time of 0.039244 on 4 procs for 37 steps with 192 atoms

19.9% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563629   -1417.7222458499   -1417.7222458499
  Force two-norm initial, final = 0.0034463023 5.1521176e-11
  Force max component initial, final = 0.00036557635 8.1420797e-12
  Final line search alpha, max atom move = 1 8.1420797e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.035833   | 0.036053   | 0.036378   |   0.1 | 91.87
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001839   | 0.0021482  | 0.002385   |   0.4 |  5.47
Output  | 0.000492   | 0.00051625 | 0.00058    |   0.0 |  1.32
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.0005268  |            |       |  1.34

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal -7.97119203312867e-07
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal 9.88416026922698e-06
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal -1.73899715666757e-06
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal 1.69761637412736
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 6.80425555689966e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.86893817701597e-09

# Compute elastic constant from pressure tensor

variable C1neg equal ${d1}
variable C1neg equal -7.77547829405719e-05
variable C2neg equal ${d2}
variable C2neg equal 0.00099087099987518
variable C3neg equal ${d3}
variable C3neg equal -0.000171420395809354
variable C4neg equal ${d4}
variable C4neg equal 1.84428033232598e-07
variable C5neg equal ${d5}
variable C5neg equal 6.55417934632361e-08
variable C6neg equal ${d6}
variable C6neg equal 169.761585706532

# Reset box and simulation parameters

clear
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022\plugins
Loaded 0 plugins from C:\Program Files\LAMMPS 64-bit 23Jun2022-MPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 22Dec2022-MSMPI\plugins
Loaded 1 plugins from C:\Program Files\LAMMPS 64-bit 28Mar2023-MPI\plugins
box tilt large

The 'box' command has been removed and will be ignored

read_restart restart.equil
Reading restart file ...
  restart file = 22 Dec 2022, LAMMPS = 22 Dec 2022
  restoring atom style atomic from restart
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600221 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  1 by 2 by 2 MPI processor grid
  pair style meam stores no restart info
  192 atoms
  read_restart CPU = 0.000 seconds
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Choose potential
#-----------------------
#pair_style	sw
#pair_coeff * * Si.sw Si
#-----------------------
#pair_style morse	2.83994742	# D0[eV] a[1/A] r0[A] rc[A], 1NN for BCC
#pair_coeff 1 1	2.1173	1.0202	2.4595	2.6497	#	Fe-Fe
#-----------------------
#pair_style smatb # R0(A)   p       q     A(eV)   xi(eV)  Rcs(A)   Rc(A), 4NN: Rcs=4NN, Rc=(4NN+5NN)/2
#pair_coeff 1 1	2.4802	7.0149	2.3779	0.3144	3.0551	4.033	4.176	#	Co	Co
#-----------------------
#pair_style eam/alloy
#pair_coeff * * AlCrFeCoNi_Zhou04.eam.alloy Fe
#-----------------------
pair_style meam
pair_coeff * * ./../../library.meam Ni Re ./../../NiRe.meam Ni Re
#-----------------------

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Positive deformation

variable delta equal ${up}*${len0}
variable delta equal 1e-06*${len0}
variable delta equal 1e-06*13.2675474943527
variable deltaxy equal ${up}*xy
variable deltaxy equal 1e-06*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1e-06*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1e-06*yz
if "${dir} == 1" then    "change_box all x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap units box"
if "${dir} == 2" then    "change_box all y delta 0 ${delta} yz delta ${deltayz} remap units box"
if "${dir} == 3" then    "change_box all z delta 0 ${delta} remap units box"
if "${dir} == 4" then    "change_box all yz delta ${delta} remap units box"
if "${dir} == 5" then    "change_box all xz delta ${delta} remap units box"
if "${dir} == 6" then    "change_box all xy delta ${delta} remap units box"
change_box all xy delta ${delta} remap units box
change_box all xy delta 1.32675474943527e-05 remap units box
Changing box ...
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  triclinic box = (0.16671338 0.14991179 0.083337913) to (10.380076 13.417459 16.692995) with tilt (-7.6600088 0 0)

# Relax atoms positions

minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 1000 ${maxeval}
minimize 0 1e-10 1000 100000
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.5
  ghost atom cutoff = 6.5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair meam, perpetual
      attributes: full, newton on
      pair build: full/nsq
      stencil: none
      bin: none
  (2) pair meam, perpetual, half/full from (1)
      attributes: half, newton on
      pair build: halffull/newton
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 9.954 | 9.955 | 9.955 Mbytes
   Step          Temp          PotEng         Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz             Lx             Ly             Lz           Volume    
        61   0             -1417.7222     -0.053116783   -0.57101702     0.37698867     0.034678002   -1.7281423      0.024609321    0.068807233    10.213363      13.267547      16.609657      2250.7127    
        62   0             -1417.7222      0.0015179968  -0.038114643    0.043497724   -0.00082909089 -1.877873       0.012192739    0.03409157     10.213363      13.267547      16.609657      2250.7127    
        63   0             -1417.7222      0.006710755   -0.11308192     0.13743914    -0.0042249467  -1.7273424      0.0019046361   0.0053219546   10.213363      13.267547      16.609657      2250.7127    
        64   0             -1417.7222     -0.0020847771  -0.0075496653  -3.0210791e-05  0.0013255449  -1.7371995     -0.0010996201  -0.0030745633   10.213363      13.267547      16.609657      2250.7127    
        65   0             -1417.7222     -0.0010544203  -0.017847921    0.014015241    0.00066941898 -1.6984115     -0.0010144852  -0.0028374302   10.213363      13.267547      16.609657      2250.7127    
        66   0             -1417.7222      0.0012270644   0.0077191823  -0.0032618068  -0.00077618232 -1.6975805     -6.125984e-05  -0.00017134481  10.213363      13.267547      16.609657      2250.7127    
        67   0             -1417.7222     -0.00011744999  0.0029673086  -0.0033941369   7.447837e-05  -1.6945977      0.00030934419  0.00086460271  10.213363      13.267547      16.609657      2250.7127    
        68   0             -1417.7222     -0.00036759456  0.00033763203 -0.0016730916   0.00023267585 -1.6956299      0.00015939482  0.0004458094   10.213363      13.267547      16.609657      2250.7127    
        69   0             -1417.7222      0.0002110933   0.001722394   -0.00095540127 -0.00013371285 -1.6978912     -4.8185202e-05 -0.00013480761  10.213363      13.267547      16.609657      2250.7127    
        70   0             -1417.7222      7.4693791e-05 -0.0009817884   0.0012532775  -4.7407715e-05 -1.6973554     -9.9867309e-05 -0.00027916755  10.213363      13.267547      16.609657      2250.7127    
        71   0             -1417.7222     -0.0001660751   5.0081714e-05 -0.00065327756  0.00010497054 -1.6981783     -2.1521566e-05 -6.0234461e-05  10.213363      13.267547      16.609657      2250.7127    
        72   0             -1417.7222      6.7823676e-05 -0.00036045854  0.00060703733 -4.3107757e-05 -1.6974696      5.0805062e-05  0.00014206209  10.213363      13.267547      16.609657      2250.7127    
        73   0             -1417.7222      6.4226919e-05  0.00019583903  3.7681895e-05 -4.0840166e-05 -1.6977565      3.9980945e-05  0.00011177415  10.213363      13.267547      16.609657      2250.7127    
        74   0             -1417.7222     -5.4899143e-05 -0.00025002711  5.0763252e-05  3.4566431e-05 -1.697716      -1.8264718e-06 -5.0961929e-06  10.213363      13.267547      16.609657      2250.7127    
        75   0             -1417.7222      9.0051063e-06 -0.00017735602  0.00021025728 -5.8859319e-06 -1.6977006     -2.1184982e-05 -5.9234774e-05  10.213363      13.267547      16.609657      2250.7127    
        76   0             -1417.7222      2.4778945e-05  6.551663e-05   2.4692015e-05 -1.587181e-05  -1.6976973     -8.7888512e-06 -2.4572792e-05  10.213363      13.267547      16.609657      2250.7127    
        77   0             -1417.7222     -1.5134689e-05 -3.436832e-05  -2.0428952e-05  9.3932044e-06 -1.6975113      8.718827e-06   2.4375005e-05  10.213363      13.267547      16.609657      2250.7127    
        78   0             -1417.7222      2.7675464e-06  0.00019054981 -0.00018030705 -1.9401221e-06 -1.6975591      8.5925371e-06  2.4025348e-05  10.213363      13.267547      16.609657      2250.7127    
        79   0             -1417.7222      1.3581526e-05  3.4558429e-05  1.497165e-05  -8.7855001e-06 -1.6975202     -1.0800976e-06 -3.0192532e-06  10.213363      13.267547      16.609657      2250.7127    
        80   0             -1417.7222     -3.888338e-06   2.0876694e-05 -3.481443e-05   2.2727218e-06 -1.6976399     -5.4915177e-06 -1.5353526e-05  10.213363      13.267547      16.609657      2250.7127    
        81   0             -1417.7222      7.8732118e-07 -6.862463e-05   7.1673468e-05 -6.8687495e-07 -1.6976422     -2.1414981e-06 -5.9879338e-06  10.213363      13.267547      16.609657      2250.7127    
        82   0             -1417.7222      6.0100534e-06 -2.053502e-05   4.2557911e-05 -3.9927312e-06 -1.6976554      1.3182234e-06  3.6854323e-06  10.213363      13.267547      16.609657      2250.7127    
        83   0             -1417.7222      1.2897569e-06 -2.7606869e-05  3.248092e-05  -1.0047804e-06 -1.6976246      1.3902384e-06  3.887105e-06   10.213363      13.267547      16.609657      2250.7127    
        84   0             -1417.7222      1.7813152e-06  3.4330877e-06  3.2267616e-06 -1.3159036e-06 -1.6976178      1.5175016e-07  4.2434001e-07  10.213363      13.267547      16.609657      2250.7127    
        85   0             -1417.7222      3.1314775e-06  3.08757e-06    8.4778463e-06 -2.1709838e-06 -1.6976087     -3.7047096e-07 -1.0357679e-06  10.213363      13.267547      16.609657      2250.7127    
        86   0             -1417.7222      2.4076345e-06  5.5617261e-06  3.373496e-06  -1.7123186e-06 -1.6976122     -2.3754649e-07 -6.6421974e-07  10.213363      13.267547      16.609657      2250.7127    
        87   0             -1417.7222      2.1913547e-06 -4.3766378e-07  8.5871425e-06 -1.5754146e-06 -1.6976134      6.0036473e-08  1.6775301e-07  10.213363      13.267547      16.609657      2250.7127    
        88   0             -1417.7222      2.6529742e-06 -2.7555015e-07  1.0102129e-05 -1.8676566e-06 -1.6976162      1.1870301e-07  3.3186234e-07  10.213363      13.267547      16.609657      2250.7127    
        89   0             -1417.7222      2.4438003e-06 -2.5809881e-06  1.1647915e-05 -1.735526e-06  -1.6976161      2.2838865e-08  6.3911237e-08  10.213363      13.267547      16.609657      2250.7127    
        90   0             -1417.7222      2.3355858e-06 -1.5069923e-06  1.0180594e-05 -1.666844e-06  -1.6976163     -5.5543254e-08 -1.5529384e-07  10.213363      13.267547      16.609657      2250.7127    
        91   0             -1417.7222      2.5060414e-06 -1.2307382e-06  1.0523444e-05 -1.7745817e-06 -1.6976155     -3.3365539e-08 -9.3328045e-08  10.213363      13.267547      16.609657      2250.7127    
        92   0             -1417.7222      2.4651011e-06 -6.1791705e-07  9.7619509e-06 -1.7487306e-06 -1.6976154      9.0223891e-09  2.5230033e-08  10.213363      13.267547      16.609657      2250.7127    
        93   0             -1417.7222      2.4224211e-06 -7.7843772e-07  9.7671961e-06 -1.7214949e-06 -1.6976152      1.6976152e-08  4.7405023e-08  10.213363      13.267547      16.609657      2250.7127    
        94   0             -1417.7222      2.4575889e-06 -6.9386416e-07  9.8105465e-06 -1.7439156e-06 -1.6976153      4.3181523e-09  1.2137982e-08  10.213363      13.267547      16.609657      2250.7127    
        95   0             -1417.7222      2.4518326e-06 -7.6873233e-07  9.8645257e-06 -1.7402956e-06 -1.6976153     -3.2693909e-09 -9.0506935e-09  10.213363      13.267547      16.609657      2250.7127    
        96   0             -1417.7222      2.4440228e-06 -7.9974337e-07  9.8670066e-06 -1.7351949e-06 -1.6976154     -2.9733189e-09 -8.3147517e-09  10.213363      13.267547      16.609657      2250.7127    
        97   0             -1417.7222      2.4503371e-06 -7.9592962e-07  9.8864819e-06 -1.7395409e-06 -1.6976154     -2.9587314e-10 -8.8072763e-10  10.213363      13.267547      16.609657      2250.7127    
        98   0             -1417.7222      2.4494308e-06 -7.9698611e-07  9.8840673e-06 -1.7387889e-06 -1.6976154      6.6700069e-10  1.888538e-09   10.213363      13.267547      16.609657      2250.7127    
Loop time of 0.0375015 on 4 procs for 37 steps with 192 atoms

83.3% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = force tolerance
  Energy initial, next-to-last, final = 
     -1417.72224563681   -1417.7222458499   -1417.7222458499
  Force two-norm initial, final = 0.0034399652 5.1590143e-11
  Force max component initial, final = 0.00036148914 8.1886098e-12
  Final line search alpha, max atom move = 1 8.1886098e-12
  Iterations, force evaluations = 37 74

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.034699   | 0.034764   | 0.034822   |   0.0 | 92.70
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.001725   | 0.001778   | 0.001839   |   0.1 |  4.74
Output  | 0.000439   | 0.000464   | 0.000535   |   0.0 |  1.24
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 0.0004958  |            |       |  1.32

Nlocal:             48 ave          48 max          48 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Nghost:            852 ave         852 max         852 min
Histogram: 4 0 0 0 0 0 0 0 0 0
Neighs:           2208 ave        2237 max        2179 min
Histogram: 1 0 1 0 0 0 0 1 0 1
FullNghs:         4416 ave        4416 max        4416 min
Histogram: 4 0 0 0 0 0 0 0 0 0

Total # of neighbors = 17664
Ave neighs/atom = 92
Neighbor list builds = 0
Dangerous builds = 0

# Obtain new stress tensor

variable tmp equal pe
variable e1 equal ${tmp}
variable e1 equal -1417.7222458499
variable tmp equal press
variable p1 equal ${tmp}
variable p1 equal 2.44943076682657e-06
variable tmp equal pxx
variable pxx1 equal ${tmp}
variable pxx1 equal -7.96986114176784e-07
variable tmp equal pyy
variable pyy1 equal ${tmp}
variable pyy1 equal 9.88406732812008e-06
variable tmp equal pzz
variable pzz1 equal ${tmp}
variable pzz1 equal -1.73878891346358e-06
variable tmp equal pxy
variable pxy1 equal ${tmp}
variable pxy1 equal -1.6976153604459
variable tmp equal pxz
variable pxz1 equal ${tmp}
variable pxz1 equal 6.67000687974257e-10
variable tmp equal pyz
variable pyz1 equal ${tmp}
variable pyz1 equal 1.88853800228238e-09

# Compute elastic constant from pressure tensor

variable C1pos equal ${d1}
variable C1pos equal 7.77414740269636e-05
variable C2pos equal ${d2}
variable C2pos equal -0.00099086170576449
variable C3pos equal ${d3}
variable C3pos equal 0.000171399571488955
variable C4pos equal ${d4}
variable C4pos equal -1.86388015759239e-07
variable C5pos equal ${d5}
variable C5pos equal -6.41993066916652e-08
variable C6pos equal ${d6}
variable C6pos equal 169.761587750794

# Combine positive and negative

variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
variable C16 equal 0.5*(${C1neg}+${C1pos})
variable C16 equal 0.5*(-7.77547829405719e-05+${C1pos})
variable C16 equal 0.5*(-7.77547829405719e-05+7.77414740269636e-05)
variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
variable C26 equal 0.5*(${C2neg}+${C2pos})
variable C26 equal 0.5*(0.00099087099987518+${C2pos})
variable C26 equal 0.5*(0.00099087099987518+-0.00099086170576449)
variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
variable C36 equal 0.5*(${C3neg}+${C3pos})
variable C36 equal 0.5*(-0.000171420395809354+${C3pos})
variable C36 equal 0.5*(-0.000171420395809354+0.000171399571488955)
variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
variable C46 equal 0.5*(${C4neg}+${C4pos})
variable C46 equal 0.5*(1.84428033232598e-07+${C4pos})
variable C46 equal 0.5*(1.84428033232598e-07+-1.86388015759239e-07)
variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
variable C56 equal 0.5*(${C5neg}+${C5pos})
variable C56 equal 0.5*(6.55417934632361e-08+${C5pos})
variable C56 equal 0.5*(6.55417934632361e-08+-6.41993066916652e-08)
variable C6${dir} equal 0.5*(${C6neg}+${C6pos})
variable C66 equal 0.5*(${C6neg}+${C6pos})
variable C66 equal 0.5*(169.761585706532+${C6pos})
variable C66 equal 0.5*(169.761585706532+169.761587750794)

# Delete dir to make sure it is not reused

variable dir delete

# Output final values

variable C11all equal ${C11}
variable C11all equal 675.490620344304
variable C22all equal ${C22}
variable C22all equal 675.490620294072
variable C33all equal ${C33}
variable C33all equal 745.063073150297

variable C12all equal 0.5*(${C12}+${C21})
variable C12all equal 0.5*(335.96744685752+${C21})
variable C12all equal 0.5*(335.96744685752+335.967446881894)
variable C13all equal 0.5*(${C13}+${C31})
variable C13all equal 0.5*(261.497847736724+${C31})
variable C13all equal 0.5*(261.497847736724+261.497847734725)
variable C23all equal 0.5*(${C23}+${C32})
variable C23all equal 0.5*(261.49784773779+${C32})
variable C23all equal 0.5*(261.49784773779+261.497847711663)

variable C44all equal ${C44}
variable C44all equal 139.192516568129
variable C55all equal ${C55}
variable C55all equal 139.192516574128
variable C66all equal ${C66}
variable C66all equal 169.761586728663

variable C14all equal 0.5*(${C14}+${C41})
variable C14all equal 0.5*(-6.74929466849339e-09+${C41})
variable C14all equal 0.5*(-6.74929466849339e-09+1.169857204849e-09)
variable C15all equal 0.5*(${C15}+${C51})
variable C15all equal 0.5*(-2.70287912949689e-09+${C51})
variable C15all equal 0.5*(-2.70287912949689e-09+1.02496223822875e-09)
variable C16all equal 0.5*(${C16}+${C61})
variable C16all equal 0.5*(-6.65445680415216e-09+${C61})
variable C16all equal 0.5*(-6.65445680415216e-09+7.03706790154999e-09)

variable C24all equal 0.5*(${C24}+${C42})
variable C24all equal 0.5*(-3.28771262499844e-09+${C42})
variable C24all equal 0.5*(-3.28771262499844e-09+1.26638896813506e-10)
variable C25all equal 0.5*(${C25}+${C52})
variable C25all equal 0.5*(4.55221748149473e-09+${C52})
variable C25all equal 0.5*(4.55221748149473e-09+-1.3585938069025e-10)
variable C26all equal 0.5*(${C26}+${C62})
variable C26all equal 0.5*(4.64705534502282e-09+${C62})
variable C26all equal 0.5*(4.64705534502282e-09+7.06867976424998e-09)

variable C34all equal 0.5*(${C34}+${C43})
variable C34all equal 0.5*(-5.98701063752498e-09+${C43})
variable C34all equal 0.5*(-5.98701063752498e-09+5.05992756142e-10)
variable C35all equal 0.5*(${C35}+${C53})
variable C35all equal 0.5*(-3.66144543249023e-09+${C53})
variable C35all equal 0.5*(-3.66144543249023e-09+-5.88641940608006e-10)
variable C36all equal 0.5*(${C36}+${C63})
variable C36all equal 0.5*(-1.04121601994924e-08+${C63})
variable C36all equal 0.5*(-1.04121601994924e-08+-7.57738412500455e-11)

variable C45all equal 0.5*(${C45}+${C54})
variable C45all equal 0.5*(-2.24449611921749e-09+${C54})
variable C45all equal 0.5*(-2.24449611921749e-09+-2.4963320167267e-09)
variable C46all equal 0.5*(${C46}+${C64})
variable C46all equal 0.5*(-9.79991263320501e-10+${C64})
variable C46all equal 0.5*(-9.79991263320501e-10+-1.0590228168e-09)
variable C56all equal 0.5*(${C56}+${C65})
variable C56all equal 0.5*(6.71243385785445e-10+${C65})
variable C56all equal 0.5*(6.71243385785445e-10+9.799912633e-10)

# Average moduli for cubic crystals

variable C11cubic equal (${C11all}+${C22all}+${C33all})/3.0
variable C11cubic equal (675.490620344304+${C22all}+${C33all})/3.0
variable C11cubic equal (675.490620344304+675.490620294072+${C33all})/3.0
variable C11cubic equal (675.490620344304+675.490620294072+745.063073150297)/3.0
variable C12cubic equal (${C12all}+${C13all}+${C23all})/3.0
variable C12cubic equal (335.967446869707+${C13all}+${C23all})/3.0
variable C12cubic equal (335.967446869707+261.497847735724+${C23all})/3.0
variable C12cubic equal (335.967446869707+261.497847735724+261.497847724727)/3.0
variable C44cubic equal (${C44all}+${C55all}+${C66all})/3.0
variable C44cubic equal (139.192516568129+${C55all}+${C66all})/3.0
variable C44cubic equal (139.192516568129+139.192516574128+${C66all})/3.0
variable C44cubic equal (139.192516568129+139.192516574128+169.761586728663)/3.0

variable bulkmodulus equal (${C11cubic}+2*${C12cubic})/3.0
variable bulkmodulus equal (698.681437929558+2*${C12cubic})/3.0
variable bulkmodulus equal (698.681437929558+2*286.321047443386)/3.0
variable shearmodulus1 equal ${C44cubic}
variable shearmodulus1 equal 149.38220662364
variable shearmodulus2 equal (${C11cubic}-${C12cubic})/2.0
variable shearmodulus2 equal (698.681437929558-${C12cubic})/2.0
variable shearmodulus2 equal (698.681437929558-286.321047443386)/2.0
variable poissonratio equal 1.0/(1.0+${C11cubic}/${C12cubic})
variable poissonratio equal 1.0/(1.0+698.681437929558/${C12cubic})
variable poissonratio equal 1.0/(1.0+698.681437929558/286.321047443386)

# For Stillinger-Weber silicon, the analytical results
# are known to be (E. R. Cowley, 1988):
#               C11 = 151.4 GPa
#               C12 = 76.4 GPa
#               C44 = 56.4 GPa

print "========================================="
=========================================
print "Components of the Elastic Constant Tensor"
Components of the Elastic Constant Tensor
print "========================================="
=========================================

print "Elastic Constant C11all = ${C11all} ${cunits}"
Elastic Constant C11all = 675.490620344304 GPa
print "Elastic Constant C22all = ${C22all} ${cunits}"
Elastic Constant C22all = 675.490620294072 GPa
print "Elastic Constant C33all = ${C33all} ${cunits}"
Elastic Constant C33all = 745.063073150297 GPa

print "Elastic Constant C12all = ${C12all} ${cunits}"
Elastic Constant C12all = 335.967446869707 GPa
print "Elastic Constant C13all = ${C13all} ${cunits}"
Elastic Constant C13all = 261.497847735724 GPa
print "Elastic Constant C23all = ${C23all} ${cunits}"
Elastic Constant C23all = 261.497847724727 GPa

print "Elastic Constant C44all = ${C44all} ${cunits}"
Elastic Constant C44all = 139.192516568129 GPa
print "Elastic Constant C55all = ${C55all} ${cunits}"
Elastic Constant C55all = 139.192516574128 GPa
print "Elastic Constant C66all = ${C66all} ${cunits}"
Elastic Constant C66all = 169.761586728663 GPa

print "Elastic Constant C14all = ${C14all} ${cunits}"
Elastic Constant C14all = -2.7897187318222e-09 GPa
print "Elastic Constant C15all = ${C15all} ${cunits}"
Elastic Constant C15all = -8.3895844563407e-10 GPa
print "Elastic Constant C16all = ${C16all} ${cunits}"
Elastic Constant C16all = 1.91305548698915e-10 GPa

print "Elastic Constant C24all = ${C24all} ${cunits}"
Elastic Constant C24all = -1.58053686409247e-09 GPa
print "Elastic Constant C25all = ${C25all} ${cunits}"
Elastic Constant C25all = 2.20817905040224e-09 GPa
print "Elastic Constant C26all = ${C26all} ${cunits}"
Elastic Constant C26all = 5.8578675546364e-09 GPa

print "Elastic Constant C34all = ${C34all} ${cunits}"
Elastic Constant C34all = -2.74050894069149e-09 GPa
print "Elastic Constant C35all = ${C35all} ${cunits}"
Elastic Constant C35all = -2.12504368654912e-09 GPa
print "Elastic Constant C36all = ${C36all} ${cunits}"
Elastic Constant C36all = -5.24396702037122e-09 GPa

print "Elastic Constant C45all = ${C45all} ${cunits}"
Elastic Constant C45all = -2.37041406797209e-09 GPa
print "Elastic Constant C46all = ${C46all} ${cunits}"
Elastic Constant C46all = -1.01950704006025e-09 GPa
print "Elastic Constant C56all = ${C56all} ${cunits}"
Elastic Constant C56all = 8.25617324542722e-10 GPa

print "========================================="
=========================================
print "Average properties for a cubic crystal"
Average properties for a cubic crystal
print "========================================="
=========================================

print "Bulk Modulus = ${bulkmodulus} ${cunits}"
Bulk Modulus = 423.774510938777 GPa
print "Shear Modulus 1 = ${shearmodulus1} ${cunits}"
Shear Modulus 1 = 149.38220662364 GPa
print "Shear Modulus 2 = ${shearmodulus2} ${cunits}"
Shear Modulus 2 = 206.180195243086 GPa
print "Poisson Ratio = ${poissonratio}"
Poisson Ratio = 0.290680532988684
Total wall time: 0:00:00
