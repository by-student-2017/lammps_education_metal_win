#------------------------------------------------------------------------------------------
# A.2 GENERATING INITIAL STRUCTURES
# To generate an initial GB structure we cerate two grains with the desired orientation and
# Then minimize the bicrystal to a local minima. In our simulations, we require periodic 
# boundary conditions in all three directions but we do not want to create two GB interface
# so that the simulation cell is periodic in the z-direction, but no secondary interface is 
# formed. To limit the effects of the top and bottom surfaces on the behavior of the GB, we
# also include blocks of atoms between each surface and the dynamic region of the simulation
# which are forced to be frozen. The following LAMMPS input script accomplishes this:
#------------------------------------------------------------------------------------------
# LAMMPS 64-bit 22Dec2022-MSMPI
#------------------------------------------------------------------------------------------
# LAMMPS Input File for Grain Boundary generation in copper
# Kathleen Alexander, Jun2012
# This file will generate a single Sigma 5 (310) symmetric tilt grain boundary.
# Note that the z direction is normal to the grain boundary plane.
#
# Sigma 3 (111): symmetric Coherent Twin Boundary (CTB)
# Simga 5 (310): symmetric tilt grain boundary, Coincidence Site Lattice (CSL)
# ----------- Original Development -------------------------------------------------------
# Header from the original file developed by Mark Tschoop
# LAMMPS Input File for Grain Boundaries
# Mark Tschopp, Dec2009

#-------------------- Define System Variables 
# The following variables pertain to copper
variable      latparam equal  3.6099999 # lattice parameter for copper: previously calculated
variable minimumenergy equal -3.53999   # energy of a completely coordinated atom in the lattil
variable            NN equal  1.28      # Nearest neighbor distance in copper, same as metallic radius

# The following variables are general
variable      eVAtomJm equal 16021.7646 # conversion from eV/A^2 to mJ/m^2
variable         sigma equal 5          # CSL sigma value for the system of interest
variable       DSCcuts equal 8          # number of cuts in the DSC (Displacement Shift Complete) lattice to translate the grains by
variable dirname index Cu_Sigma5_130_ppp

#-------------------- Define Geometry Variables ------------------------------------------
# The following 9 variables describe the GB normals in grains 1 and 2
variable x11 equal  1.0
variable x12 equal  0.0
variable x13 equal  0.0
variable x21 equal  1.0
variable x22 equal  0.0
variable x23 equal  0.0
variable y11 equal  0.0
variable y12 equal  3.0
variable y13 equal  1.0
variable y21 equal  0.0
variable y22 equal  3.0
variable y23 equal -1.0
variable z11 equal  0.0
variable z12 equal -1.0
variable z13 equal  3.0
variable z21 equal  0.0
variable z22 equal  1.0
variable z23 equal  3.0

#-------------------- Define Simulation Variables ----------------------------------------
# The following variables effect the nature of the simulation
variable     CSLplanes equal 5       # the number of CSL (Coincident Site Lattice) lattice vector translates in the plai
variable overlapfactor equal 0.1     # Fraction of NN that will be the overlap cutoff
variable          etol equal 1.0e-25 # Energy tolerance to exit minimization
variable          ftol equal 1.0e-25 # Force tolerance to exit minimization
variable       maxiter equal 10000   # Maximum number of iterations to exit minimization
variable       maxeval equal 20000   # Maximum number of force evaluations to exit minimization

#-------------------- Define Dependent Variables -----------------------------------------
#The following variables depend on other variables that are previously defined
variable   xrep equal ${latparam}*sqrt(${x11}^2+${x12}^2+${x13}^2) # repeat distance
variable   yrep equal ${latparam}*sqrt(${y11}^2+${y12}^2+${y13}^2) # repeat distance
variable   zrep equal ${latparam}*sqrt(${z11}^2+${z12}^2+${z13}^2) # repeat distance
variable   xinc equal ${latparam}/sqrt(${x11}^2+${x12}^2+${x13}^2) # repeat distance
variable   yinc equal ${latparam}/sqrt(${y11}^2+${y12}^2+${y13}^2) # repeat distance
variable   zinc equal ${latparam}/sqrt(${z11}^2+${z12}^2+${z13}^2) # repeat distance
variable xdelta equal 2*${xinc}  # interplanar spacing in the x direction
variable ydelta equal 2*${yinc}  # interplanar spacing in the y direction
variable zdelta equal 2*${zinc}  # interplanar spacing in the z direction
variable overlapcut equal ${overlapfactor}*${NN} # overlap cutoff distance

# for run.sh
variable xplanes equal 25
variable yplanes equal 3
variable zplanes1 equal 3
variable zplanes2 equal 3

# Simulation cell size
# specifically, the number of planes in the given crystallographic direction
variable        xreps equal ${xplanes}  # 25, xplanes
variable        yreps equal ${yplanes}  # 3, yplanes
variable       zreps1 equal ${zplanes1} # 3, zplanes1
variable       zreps2 equal ${zplanes2} # 3, zplanes2
variable block_planes equal  1
variable      nzdelta equal -1*${zdelta}
variable extra_height equal  1
variable          eps equal  0.00

#-------------------- Counter Loops and Make Directory -----------------------------------
shell mkdir ${dirname}
shell mkdir ${dirname}/Pics
shell mkdir ${dirname}/Pics/Min1
shell mkdir ${dirname}/Pics/Min2
shell mkdir ${dirname}/Pics/Run
shell  cp A ${dirname}/Pics/Min1
shell  cp A ${dirname}/Pics/Min2
shell  cp A ${dirname}/Pics/Run

#-------------------- Initialization -----------------------------------------------------
clear
units metal
dimension 3
boundary p p p
atom_style atomic

#-------------------- Create Atomistic Structure -----------------------------------------
# The following creates two grains according to the parameters defined above
lattice fcc ${latparam}
variable             X equal (${xreps}*${xrep})
variable            X1 equal ${eps}*${X} #${xdelta}
variable            X2 equal ${X}-${eps}*${X} #${X}-${xdelta}
variable         x_len equal ${X2}-${X1}
variable             Y equal (${yreps}*${yrep})
variable            Y1 equal ${eps}*${Y} #${ydelta}
variable            Y2 equal ${Y}-${eps}*${Y} #${Y}-${ydelta}
variable         y_len equal ${Y2}-${Y1}
variable            Z1 equal -1*((${zreps2}+${block_planes})*${zrep}+${zdelta})
variable            Z2 equal     (${zreps1}+${block_planes})*${zrep}+${zdelta}
variable      Z_bottom equal ${Z1}-(${extra_height}*${zrep})
variable         Z_top equal ${Z2}+(${extra_height}*${zrep})
variable        Zblock equal ${Z2}-(${block_planes}*${zrep})
variable       nZblock equal ${Z1}+(${block_planes}*${zrep})
variable  Zblock_delta equal  ${Zblock}+${zinc}*0.5
variable nZblock_delta equal ${nZblock}-${zinc}*0.5

region whole block 0.000000 ${X} 0.000000 ${Y} ${Z_bottom} ${Z_top} units box
create_box 2 whole

region top       block INF INF INF INF ${zdelta}       ${Z2} units box
region top_block block INF INF INF INF ${Zblock_delta} ${Z2} units box
region gb_upper_dynamic block INF INF INF INF ${zdelta} ${Zblock} units box
region gb_upper block ${X1} ${X2} ${Y1} ${Y2} ${zdelta} ${Zblock} units box
lattice fcc ${latparam} orient x ${x11} ${x12} ${x13} orient y ${y11} ${y12} ${y13} orient z ${z11} ${z12} ${z13}
create_atoms 1 region top

region bottom      block INF INF INF INF ${Z1} ${nzdelta} units box
region lower_block block INF INF INF INF ${Z1} ${nZblock_delta} units box
region gb_lower_dynamic block INF INF INF INF ${nZblock} ${nzdelta} units box
region gb_lower block ${X1} ${X2} ${Y1} ${Y2} ${nZblock} ${nzdelta} units box
lattice fcc ${latparam} orient x ${x21} ${x22} ${x23} orient y ${y21} ${y22} ${y23} orient z ${z21} ${z22} ${z23}
create_atoms 2 region bottom

# for run.sh
variable xmove equal 1*${xinc}
variable ymove equal 1*${yinc}
group lower_block region bottom
displace_atoms lower_block move ${xmove} ${ymove} 0.0

#-------------------- Define Interatomic Potential ---------------------------------------
pair_style eam/alloy
pair_coeff * * Cu01.eam.alloy Cu Cu

neighbor 2.0 bin
neigh_modify delay 10 check yes

#-------------------- Displace atoms and delete overlapping atoms ------------------------
delete_atoms overlap ${overlapcut} all all

#-------------------- Define Settings ----------------------------------------------------
compute csym all centro/atom fcc
compute    1 all property/local natom1 natom2
compute    2 all property/local patom1 patom2

#-------------------- Run Minimization 1 -------------------------------------------------
shell cd ${dirname}/Pics/Min1
reset_timestep 0
thermo 10
thermo_style custom step pe lx ly lz press pxx pyy pzz
dump 1 all cfg 25 dump.min_*.cfg mass type xs ys zs c_csym fx fy fz
dump_modify 1 element Cu Cu
min_style cg
min_modify dmax 0.01
minimize ${etol} ${ftol} ${maxiter} ${maxeval}
undump 1
shell cd ../../../

#-------------------- Assign GB and Dynamic Groups ---------------------------------------
region r_dynamic block INF INF INF INF ${nZblock} ${Zblock} units box
region r_gb block ${X1} ${X2} ${Y1} ${Y2} ${nZblock} ${Zblock} units box
group dynamic_1 region gb_upper_dynamic
group dynamic_2 region gb_lower_dynamic
group dynamic region r_dynamic
group gb_1 region gb_upper
group gb_2 region gb_lower
group gb region r_gb

#-------------------- Define GB Energy Computes ------------------------------------------
compute eng gb pe/atom
compute eatoms gb reduce sum c_eng

#-------------------- Run Minimization 2 -------------------------------------------------
# Now allow the box to expand/contract perpendicular to the grain boundary
shell cd ${dirname}/Pics/Min2
reset_timestep 0
thermo 10
thermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms
dump 1 all cfg 25 dump.min_*.cfg mass type xs ys zs c_csym c_eng fx fy fz
dump_modify 1 element Cu Cu
fix 1 dynamic box/relax aniso 0.0
min_style cg
min_modify dmax 0.1
minimize ${etol} ${ftol} ${maxiter} ${maxeval}
unfix 1
undump 1
shell cd ../../../

#-------------------- Calculate GB Energy ------------------------------------------------
variable esum equal "v_minimumenergy * count(gb)"
variable xseng equal "c_eatoms - (v_minimumenergy * count(gb))"
variable gbarea equal ${x_len}*${y_len}
variable gbe equal "(c_eatoms - (v_minimumenergy * count(gb)))/v_gbarea"
variable gbemJm2 equal ${gbe}*${eVAtomJm}
variable gbernd equal round(${gbemJm2})
print "GB energy is ${gbemJm2} mJ/m^2"

#-------------------- Dump data into Data file -------------------------------------------
shell cd ${dirname}
reset_timestep 0
timestep 0.001
fix 1 dynamic box/relax aniso 0.0

dump 1 all custom 10000 dump.final_${gbernd}.txt id type x y z fx fy fz c_csym c_eng
dump 2 all custom 10000 dump.coords.txt id type x y z
minimize ${etol} ${ftol} ${maxiter} ${maxeval}
undump 1
undump 2
unfix 1
shell cd ../

shell cd ${dirname}
reset_timestep 0
dump 1 all local 1000 dump.natoms.txt index c_1[1] c_1[2]
dump 2 all local 1000 dump.patoms.txt index c_2[1] c_2[2]
fix 1 dynamic box/relax aniso 0.0
minimize ${etol} ${ftol} ${maxiter} ${maxeval}
unfix 1
undump 1
undump 2
shell cd ../

print "All done"

#-------------------- End ----------------------------------------------------------------
