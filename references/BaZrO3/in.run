# Below a short LAMMPS script used to calculate the radial distribution function is presented. 
# It consist of three main parts, reading the input file containing all information of the atoms,
# defining the potential wanted and lastly specifying the settings for molecular dynamics.
# URL: https://odr.chalmers.se/server/api/core/bitstreams/23eab5bd-4671-4e7f-a6bc-7b39bbc6bd17/content
clear

# ---------- settings ---------------------
variable rho12 equal 0.3949 # rho of Ba2+ - O2-
variable rho23 equal 0.3760 # rho of O2-  - Zr4+
# Model A, rho12 = 0.3949, rho23 = 0.3760
# Model B, rho12 = 0.3840, rho23 = 0.3870
# Model C, rho12 = 0.3820, rho23 = 0.3885

variable Nbins equal 240

variable Rcut  equal 12.0 # Angstrom. Rcut=6.0 is bad (see Fig.4.1).

variable name string BaZrO3

variable T       equal 5 # K
variable dt      equal 0.002 # ps, Goldschmidt tolerance factor, t=(rBa+rO)/{sqrt(2)*(rZr+rO)}, rX is ionic radii.
variable tEq     equal 100

variable Nevery  equal 100
variable Nrepeat equal 1
variable tRun    equal 100

# ---------- Initialize Simulation ---------------------
units metal
boundary p p p
atom_style full

# ---------- Create Atoms ---------------------
read_data ${name}_input.pos
replicate 5 5 5

group Ba type 1
group O  type 2
group Zr type 3

mass 1 137.327 # Ba 2+
mass 2 15.9994 # O  2-
mass 3 91.224  # Zr 4+

set type 1 charge  2.0 # Ba 2+
set type 2 charge -2.0 # O  2-
set type 3 charge  4.0 # Zr 4+

# ---------- Define Interatomic Potential ---------------------

pair_style buck/coul/long ${Rcut}
pair_modify table 0
kspace_style ewald 1.0e-5

# 1:Ba2+, 2:O2-, 3:Zr4+
pair_coeff * * 0.0 0.1 0.0
pair_coeff 1 2 931.700 ${rho12} 0.0
pair_coeff 2 2 22764.300 0.1490 27.890
pair_coeff 2 3 985.869 ${rho23} 0.0

# ---------- Define Settings ---------------------

# Radial distribution function (RDF) of O-O, also called g(r) of O-O
compute myRDF all rdf ${Nbins} 2 2

# ---------- Run MD ---------------------
reset_timestep 0
thermo 100
thermo_style custom step temp press lx

velocity all create $T 28459 rot yes dist gaussian mom yes
fix 1 all nvt temp $T $T 1
#fix 1 all nvt temp $T $T $(100.0*dt)

#Output
dump            d1 all cfg 100 cfg/run.*.cfg mass type xs ys zs id type q vx vy vz fx fy fz
dump_modify     d1 element Ba O Zr

#Find equilibrium
timestep ${dt}
run ${tEq}

#Compute RDF
thermo 100
thermo_style custom step temp press lx

reset_timestep 0
fix 2 all ave/time ${Nevery} ${Nrepeat} ${tRun} c_myRDF[*] file RDF_${name}.dat mode vector

run ${tRun}