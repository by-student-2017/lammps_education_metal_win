#6. Strain diffusion calculations as discussed in Chapter 6
# Methodology
# Strain induced diffusion is done on zirconium with hydrogen placed inside a sphere of zirconium.
# The structure is energy and pressure minimized. It is then equilibrated and MSD is 
# calculated before strain. The structure is then deformed and MSD along 3 directions is 
# calculated using the following code.
#-----------------------------------------------------------------------------------------
# LAMMPS 64-bit 22Dec2022-MSMPI
clear
#-------------------- Environment Settings -----------------------------------------------
variable       Tdesird equal  800.0 # Desired Temperature [K]

variable        Nsteps equal  80000 # Number of simulation cycles (MSD)

variable Strain_Nsteps equal 100000 # Number of simulation cycles (strain and MSD)

variable      DumpFreq equal   1000 # For print out

variable         dt_ps equal 0.0005 # (Note: Atoms are lost at 0.001 [ps].)

variable  es_rate equal   0.001 # engineering strain rate (1/time units)
# Note: es_rate/dt_ps = 0.001 / (1e-15) = 1.0e12 [1/s]
# L(t) = L(0)*(1 + es_rate*dt*step)
# strain [%] = es_rate*dt*Nstep*100 [%] = 0.001 * 0.0005 * 100000 * 100 = 5 [%]

#-------------------- Initialization -----------------------------------------------------
units metal
dimension 3
boundary p p p

#-------------------- Atom & Lattice description ----------------------------------------
atom_style atomic

lattice hcp 3.232 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1
region box block 0 10.0 0 6.0 0 6.0
create_box   2 box # set 2 types (Zr and H)

create_atoms 1 box

region fcc sphere 5.0 3.0 3.0 1 side in

delete_atoms region fcc
create_atoms 2 random 50 878567 fcc # 50 atoms in group hydrogen

group       zr type 1 # Zr
group hydrogen type 2 # H

mass 1 91.224 # Zr
mass 2 1.0079 # H

#-------------------- Force field --------------------------------------------------------
pair_style meam
pair_coeff * * library.meam Zr H ZrH.meam Zr H

#-------------------- Settings -----------------------------------------------------------
neighbor 2.0 bin
neigh_modify delay 10 check yes

#-------------------- Energy Minimization ------------------------------------------------
fix 1 all nve/limit 0.1
minimize 1.0e-6 1.0e-6 10000 10000
unfix 1

#-------------------- (cells are also relaxed)
fix 1 all box/relax aniso 0.0 vmax 0.1
minimize 1.0e-6 1.0e-6 10000 10000
unfix 1

#-------------------- calculates the mean-squared displacement (MSD) ---------------------
reset_timestep 0

timestep ${dt_ps}

thermo 1000
thermo_style custom step temp pe press vol

compute 5 zr msd
compute 6 hydrogen msd

velocity all create ${Tdesird} 12345 mom yes rot no

fix 1 all npt temp ${Tdesird} ${Tdesird} $(100*dt) iso 0.0 0.0 $(1000*dt) drag 0.5
fix 2 hydrogen ave/time 2 1 200 c_6[1] c_6[2] c_6[3] c_6[4] file msd${Tdesird}K-1.txt
# c_6[1], c_6[2], c_6[3], c_6[4] => MSD_H(x), MSD_H(y), MSD_H(z), MSD_H(total)

run ${Nsteps}

unfix 1
unfix 2

#-------------------- Store final cell length for strain calculations --------------------
variable tmp equal "lz"
variable  L0 equal ${tmp}
print "Initial Length, L0: ${L0}"

#-------------------- Diffuision calculation on strain -----------------------------------
#reset_timestep 0

# Output strain and stress info to file
# for units metal, pressure is in [bars] = 100 [kPa] = 1/10000 [GPa]
# p1, p2, p3 are in GPa
variable strain equal "(lz - v_L0)/v_L0"
variable p0 equal "v_strain"
variable p1 equal "-pxx/10000"
variable p2 equal "-pyy/10000"
variable p3 equal "-pzz/10000"

thermo 1000
thermo_style custom step etotal ke temp pe press vol v_strain v_p1 v_p2 v_p3

compute 1 all stress/atom NULL  # computes the symmetric per-atom stress tensor for each atom in a group.
compute 2 all temp              # computes the temp of a group of atoms
compute 3 all reduce sum c_1[3] # reduces vector quantities of all stress tensors in z-direction and adds all the quantities to a single scalar value
compute kea all ke/atom         # This is related to temperature

variable stress     equal c_3/vol        # assigns a value to the variable name stress
variable stress_GPa equal v_stress/10000 # converts the stress calculated to GPa

#---------- output file settings -------------------
fix fo1 all ave/time 1 3 3 c_2 v_strain v_stress v_stress_GPa v_p3 file stress_vs_strain.txt
#---------------------------------------------------
dump            d1 all cfg ${DumpFreq} cfg/run.deform.*.cfg mass type xs ys zs id type vx vy vz fx fy fz c_kea
dump_modify     d1 element Zr H
#---------------------------------------------------

#compute 5 zr msd
#compute 6 hydrogen msd

fix 1 all deform 1 z erate ${es_rate} units box remap x
fix 2 all npt temp ${Tdesird} ${Tdesird} $(100*dt) x 0 0 $(1000*dt) y 0 0 $(1000*dt) drag 0.5
fix 3 hydrogen ave/time 20 1 200 c_6[1] c_6[2] c_6[3] c_6[4] file msd${Tdesird}K-2.txt
# c_6[1], c_6[2], c_6[3], c_6[4] => MSD_H(x), MSD_H(y), MSD_H(z), MSD_H(total)

run ${Strain_Nsteps}

unfix 1
unfix 2
unfix 3

undump d1

#-------------------- Diffuision calculation after strain -----------------------------------
#reset_timestep 0 # Why ? (ERROR: Cannot reset timestep with time-dependent fix ave/time defined (src/update.cpp:511))

#compute 5 zr msd
#compute 6 hydrogen msd

fix 1 all nvt temp ${Tdesird} ${Tdesird} $(100*dt)
fix 2 hydrogen ave/time 2 1 200 c_6[1] c_6[2] c_6[3] c_6[4] file msd${Tdesird}K-3.txt
# c_6[1], c_6[2], c_6[3], c_6[4] => MSD_H(x), MSD_H(y), MSD_H(z), MSD_H(total)


run ${Nsteps}

print "All done !"
#-------------------- End ----------------------------------------------------------------