#------------------------------------------------------------------------------------------
# APPENDIX 3.
# Non-cumulative Bombardment Script: 
#------------------------------------------------------------------------------------------
# LAMMPS 64-bit 22Dec2022-MSMPI
#------------------------------------------------------------------------------------------
# NIST, Interatomic Potentials (Force Fields): https://www.ctcms.nist.gov/potentials/
#------------------------------------------------------------------------------------------
clear

variable temperature equal 800 # [K]
variable Denergy equal 10  # [eV]
#variable thisfile string W${temperature}K_${Denergy}eV.txt 
variable thisfile string in_step2.lmp
variable restartfile string Base_W${temperature}K 
variable logfile string result_W${temperature}K_D${Denergy}eV.log 
#variable dumptrjfile string W${temperature}K.*.lammpstrj.gz 
#variable dumpimagefile string W${temperature}K.*.jpg

# --- Geometry in unit A --- # 
variable max_x equal 25.342 
variable max_y equal 25.342 
variable min_z equal -200 
variable mid_z equal -90 
variable max_z equal 80 
variable fixed_W_topline equal -190 
variable D_init_position equal 15

# --- Steps --- # 
variable total_cycles equal 1000 
variable cycle_steps equal 10000 
variable check_interval equal 50 

region rgn_everything block 0 ${max_x} 0 ${max_y} ${min_z} ${max_z} units box 
create_box 3 rgn_everything

# --- Mass --- # 
variable mass_W equal 183.84 
variable mass_D equal 2.01410178 

mass 1 ${mass_W} 
mass 2 ${mass_W} 
mass 3 ${mass_D} 

# --- D energy and W temp --- # 
variable W_temp equal ${temperature} #kelvin 
variable D_energy equal ${Denergy} #eV 
variable D_speed equal (-1)*sqrt(${D_energy}*1.602e-19*2.0/(${mass_D}*1.661e-27))*1.e10/1.e12 # A/ps

# Bombardment begins

# --- D velocity --- # 

variable D_azi_angle equal random(0,6.2831852,24642) 
variable D_polar_angle equal 0 # perpendecular to surface 

variable rn equal 0.0

variable D_x equal random(0,${max_x},13531) 
variable D_y equal random(0,${max_y},13531) 
variable D_z equal ${D_init_position}

variable D_vx equal ${D_speed}*sin(${D_polar_angle})*cos(${D_azi_angle}) 
variable D_vy equal ${D_speed}*sin(${D_polar_angle})*sin(${D_azi_angle}) 
variable D_vz equal ${D_speed}*cos(${D_polar_angle}) 

variable Dz_bottom equal ${D_init_position}-0.5 
variable Dz_top equal ${D_init_position}+0.5 

region rgn_D_born block 0 ${max_x} 0 ${max_y} ${Dz_bottom} ${Dz_top} units box 

# --- Shooting the Deuterium --- # 

variable i loop ${total_cycles} #cycle_loop 
variable n loop ${total_cycles} #count of trapped D 
variable r loop ${total_cycles} #reflection from surface 

variable Refcheck equal 0 

label cycle_loop 

#--- re-set up the calculation

clear 

read_restart ${restartfile} 

pair_style tersoff 
pair_coeff * * HW.tersoff W W H 

neighbor 2.0 bin 
neigh_modify delay 0 every 1 check yes

timestep 0.0005 # 0.5 [fs]

reset_timestep 0

fix 1 all nve 
fix 2 grp_berendsen_W temp/berendsen ${W_temp} ${W_temp} 0.01 
fix zeroforce grp_fixed_W setforce 0 0 0 
region rgn_check_flying_atoms block 0 ${max_x} 0 ${max_y} ${Dz_bottom} ${max_z} units box

# --- set-up completed --- # 

print "===========================>>> Shooting $i -th D..."

create_atoms 3 single ${D_x} ${D_y} ${D_z} units box 

group grp_all_D type 3 
compute Dtemp grp_all_D ke 
compute_modify Dtemp dynamic yes # D temp 
compute cmp_Wtemp grp_mobile_W temp # W temp 

variable alldke equal c_Dtemp # kinetic energy of D 
variable dzz equal xcm(grp_all_D,z) #z coord of D

thermo_style custom step temp pe c_cmp_Wtemp c_Dtemp v_dzz cpu tpcpu spcpu 
thermo_modify lost warn 
thermo 50 

dump 1 all cfg 100 cfg/run.*.cfg mass type xs ys zs id type vx vy vz fx fy fz
dump_modify 1 element W W H 

# get random number -------- 
 variable rn equal ${D_azi_angle} 
 variable rnp equal ${D_polar_angle} 
 variable D_vx equal ${D_speed}*sin(${rnp})*cos(${rn}) 
 variable D_vy equal ${D_speed}*sin(${rnp})*sin(${rn}) 
 variable D_vz equal ${D_speed}*cos(${rnp}) 

velocity grp_all_D set ${D_vx} ${D_vy} ${D_vz} units box

group grp_all_D type 3 
group grp_all_W type 1 2 

variable dx equal xcm(grp_all_D,x) 
variable dy equal xcm(grp_all_D,y) 
variable dz equal xcm(grp_all_D,z) 
print "The $i -th D initial location is ${dx} ${dy} ${dz}" 

label cont_run 
variable steps equal step 
if "${steps} > ${cycle_steps}" then "jump ${thisfile} writeD" 

run ${check_interval} 

# check D lost 
variable numD equal count(grp_all_D) 
if "${numD} <= 0" then "jump ${thisfile} writeD" # D lost

# else: check D reflection 
variable Dzz equal xcm(grp_all_D,z) 
if "${Dzz} > ${Dz_top}" then "variable Refcheck equal 1" & 
"delete_atoms group grp_all_D" & 
"jump ${thisfile} writeD" # D reflected

# else: check D energy 
if "${alldke} >= 0.5" then "jump ${thisfile} cont_run" # Contunue to run 

# else: record 

label writeD 
delete_atoms region rgn_check_flying_atoms 

variable Didx equal $n 
variable Ref equal $r

if "${numD} <= 0" then "variable Didx equal 0" 
if "${Refcheck} == 0" then "variable Ref equal 0" 

variable Dzz equal xcm(grp_all_D,z) 
variable Wnum equal count(grp_all_W) 
variable Dnum equal count(grp_all_D) 

print "-----------> Recording $n -th D... " 
print "${Didx} ${i} ${Dzz} ${alldke} ${steps} ${Dnum} ${Wnum} ${Ref}" append ${logfile} 

if "${numD} > 0" then " next n" 
if "${Refcheck} == 1" then "next r" & 
"variable Refcheck equal 0"

next i 
jump ${thisfile} cycle_loop 
#------------------------------------------------------------------------------------------