# 4.2 Creation of Cu-Zr-Al-Ni glassy alloys
#  4.2.1 Creation of Cu30Zr55Al10Ni5 alloy
#(for size X=50 Angstrom, Y=100 Angstrom, Z=100 Angstrom & cooling rate 10^14 K/s)
# LAMMPS 64-bit 22Dec2022-MSMPI
clear
#-------------------- Environment Settings -----------------------------------------------
variable  Tdesird equal 2300.0 # Desired Temperature [K]

variable Nsteps_h equal  10000 # Number of simulation cycles (heating process)
variable Nsteps_a equal  20000 # Number of simulation cycles (anneling process)
variable Nsteps_c equal  10000 # Number of simulation cycles (cooling process)

variable DumpFreq equal    100 # For print out

variable    dt_ps equal  0.002 # 0.002 [ps] = 2 [fs]

#-------------------- Initialization -----------------------------------------------------
echo both
units metal
dimension 3
boundary p p p

#-------------------- Atom & Lattice description ----------------------------------------
atom_style atomic

# method 1 (easy method) (Deprecated: This method does not work properly for ternary systems or higher.)
#----------------------------------------------------------------------
#region box block 0 50 0 100 0 50 units box
#create_box 4 box # set 4 types (4 elements)
#
#lattice fcc 3.61
#
#region cu block 0 50 0 100 0 50 units box
#
#create_atoms 1 region cu units box
#
# creating composition by using set command for Cu30-Zr55-Al10-Ni5 alloy 
#set region cu type/fraction 2 0.55 12393 # set Zr 55%, randomly
#set region cu type/fraction 3 0.10 12393 # set Al 10%, randomly
#set region cu type/fraction 4 0.05 12393 # set Ni  5%, randomly
#----------------------------------------------------------------------

# method 2 (layer type)
#----------------------------------------------------------------------
lattice fcc 3.61
region new_region block 0 50 0 100 0 50 units box 
create_box 4 new_region # set 4 types (4 elements)

# Cu (type 1) main
region cuzr block 0 50  0 20  0 50 units box
lattice fcc 3.61 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 
create_atoms 1 region cuzr

# Cu (type 1) main
region cual block 0 50 20 40  0 50 units box 
lattice fcc 3.61 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 
create_atoms 1 region cual

# Cu (type 1) main
region cuni block 0 50 40 60  0 50 units box 
lattice fcc 3.61 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 
create_atoms 2 region cuni

# Zr (type 2) only 40%
region zrzr block 0 50 60 100 0 50 units box 
lattice fcc 3.61 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 
create_atoms 2 region zrzr

# creating composition by using set command for Cu30-Zr55-Al10-Ni5 alloy 
set region cuzr type/fraction 2 $(0.15*5) 12393 # set Zr 55% (55-40=15), randomly
set region cual type/fraction 3 $(0.10*5) 12393 # set Al 10%, randomly
set region cuni type/fraction 4 $(0.05*5) 12393 # set Ni  5%, randomly

#group gcuzr region cuzr
#group gcual region cual
#group gcuni region cuni
#group gzrzr region zrzr
#----------------------------------------------------------------------

#-------------------- Force field --------------------------------------------------------
pair_style eam/alloy
pair_coeff * * CuZrAlNi_Zhou04.eam.alloy Cu Zr Al Ni

#-------------------- Monte Carlo swaps (method 2 case at 1300 K) ------------------------
fix mc_cuzr all atom/swap 1 1 12345 1300 ke no types 1 2
fix mc_cual all atom/swap 1 1 12345 1300 ke no types 1 3
fix mc_cuni all atom/swap 1 1 12345 1300 ke no types 1 4
run 10000
unfix mc_cuzr
unfix mc_cual
unfix mc_cuni

replicate 1 1 1 # Extend to 1x1x1 cell

#-------------------- Energy Minimization ------------------------------------------------
# 0 [K], structure optimization
minimize 1.0e-4 1.0e-6 10000 100000

#-------------------- Settings -----------------------------------------------------------
reset_timestep 0

timestep ${dt_ps}

thermo ${DumpFreq}
thermo_style custom step temp vol press etotal

velocity all create 300.0 873847 rot yes mom yes dist gaussian

# calculates the radial distribution function (RDF) and output file
compute myRDF all rdf 1000
fix 11 all ave/time 1000 1 1000 c_myRDF[*] file CuZrAlNi.rdf mode vector

#-------------------- Run the simulation -------------------------------------------------
# Heat treatment

# heating proces
#---------------------------------------------------------
dump            d2 all cfg ${DumpFreq} cfg/run.*.cfg mass type xs ys zs id type vx vy vz fx fy fz
dump_modify     d2 element Cu Zr Al Ni
#---------------------------------------------------------
fix 2 all npt temp        300 ${Tdesird} $(100*dt) iso 0.0 0.0 $(1000*dt)
run ${Nsteps_h}
unfix 2
undump d2

# anneling process
#---------------------------------------------------------
dump            d3 all cfg ${DumpFreq} cfg/run.*.cfg mass type xs ys zs id type vx vy vz fx fy fz
dump_modify     d3 element Cu Zr Al Ni
#---------------------------------------------------------
fix 3 all npt temp ${Tdesird} ${Tdesird} $(100*dt) iso 0.0 0.0 $(1000*dt)
run ${Nsteps_a}
unfix 3
undump d3

# cooling process
#---------------------------------------------------------
dump            d4 all cfg ${DumpFreq} cfg/run.*.cfg mass type xs ys zs id type vx vy vz fx fy fz
dump_modify     d4 element Cu Zr Al Ni
#---------------------------------------------------------
fix 4 all npt temp ${Tdesird}        300 $(100*dt) iso 0.0 0.0 $(1000*dt)
run ${Nsteps_c}
unfix 4
undump d4

#--------------------------------------------------------------------------------
# The calculation conditions for this time are as follows.
#--------------------------------------------------------------------------------
variable heating_rate equal "(v_Tdesird - 300) / ( v_dt_ps * v_Nsteps_h ) * 1e-2"
print "heating rate = ${heating_rate} x 10^14 [K/s]"
#--------------------------------------------------------------------------------
print "anneling time = $(v_dt_ps*v_Nsteps_a) [ps]"
#--------------------------------------------------------------------------------
variable cooling_rate equal "(v_Tdesird - 300) / ( v_dt_ps * v_Nsteps_c ) * 1e-2"
print "cooling rate = ${cooling_rate} x 10^14 [K/s]"
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
# Since random numbers are used for arrangement, the composition ratio is #
# slightly different from the specified ratio. Under the conditions calculated this time, 
# the composition ratio is as follows. Also keep in mind that this value will change 
# if you change the random number seed.
#--------------------------------------------------------------------------------
group cu type 1
group zr type 2
group al type 3
group ni type 4
#----------------------------
variable  ncu equal count(cu)
variable  nzr equal count(zr)
variable  nal equal count(al)
variable  nni equal count(ni)
#----------------------------
variable ntot equal ${ncu}+${nzr}+${nal}+${nni}
#----------------------------
variable nncu equal ${ncu}/${ntot}
variable nnzr equal ${nzr}/${ntot}
variable nnal equal ${nal}/${ntot}
variable nnni equal ${nni}/${ntot}
#-----------------------------
variable snncu format nncu %05.3f
variable snnzr format nnzr %05.3f
variable snnal format nnal %05.3f
variable snnni format nnni %05.3f
#----------------------------
variable pncu equal ${ncu}/${ntot}*100
variable pnzr equal ${nzr}/${ntot}*100
variable pnal equal ${nal}/${ntot}*100
variable pnni equal ${nni}/${ntot}*100
#-----------------------------
variable spncu format pncu %04.1f
variable spnzr format pnzr %04.1f
variable spnal format pnal %04.1f
variable spnni format pnni %04.1f
#--------------------------------------------------------------------------------
print "Cu: ${snncu}, Zr: ${snnzr}, Al: ${snnal}, Ni: ${snnni} [ratio]"
print "Cu: ${spncu}, Zr: ${spnzr}, Al: ${spnal}, Ni: ${spnni} [%]"
#--------------------------------------------------------------------------------

#-------------------- Output data file ---------------------------------------------------
write_data dCu30-Zr55-Al10-Ni5.data # output data for "4.2.1.4_Tensile_deformation"

#-------------------- End ----------------------------------------------------------------

#-----------------------------------------------------------------------------------------
# Temp difference = 2300 K - 300 K = 2000 K
# Total time taken for cooling = timestep x no of iterations in quenched step = (0.002 x 10000) ps
# So cooling rate = 2000 K / (0.002 x 10000) ps = 10^14 K/s for the above in.file
#-----------------------------------------------------------------------------------------