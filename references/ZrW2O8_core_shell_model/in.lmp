# Sample LAMMPS input file for ZrW2O8 with force field and core/shell thermostat parameters

#-------------------- All Initialization -------------------------------------------------
clear

#-------------------- Environment Settings -----------------------------------------------
variable  Sim_Temp equal  300.0 # Simulation temperature [K]
variable     dt_ps equal 0.0001 # 0.1 [fs]

#-------------------- Initialization -----------------------------------------------------
echo both
units metal
dimension 3
boundary p p p

# ------------------- Read structure file ------------------------------------------------
atom_style full

read_data data.init # core-shell model for Oxygen
replicate 3 3 3     # 3x3x3 supercell

write_data 333_init.data

group  cores type 1 # O  ,      0.848200 [e] in data.init
group shells type 2 # Os1, Y = -2.848200 [e] in data.init

comm_modify vel yes # shell atoms store velocities

#-------------------- Force field --------------------------------------------------------
# 1:O, 2:Os1, 3:Zr1, 4:W1
# 1:O(core), 2:O(shell) = Os1
# Charge [e]: O:0.848200, Os1:-2.848200, Zr1:4, W1:6
# Note: The total charge of O + Os is -2.0 [e]

pair_style buck/coul/long/cs 13.0      # A, rho, C
pair_coeff * *       0.0  1.000  0.0   # all-all
pair_coeff 2 2   22764.0  0.149 27.879 # Os1-Os1
pair_coeff 2 3 9000000.0  0.140  0.0   # Zr1-Os1
pair_coeff 2 4    1305.22 0.375  0.0   # W1 -Os1

bond_style harmonic
bond_coeff 1 74.92 0.0 # O-Os1, k = 74.92 [eV/A^2]
# Note
# The other atoms (Zr or W) are "k = 99999 [eV/A^2]", so they are not calculated in "core-shell mode".
# Note that "Bonds" is set to "O-Os" only in "data.init". (O:1-32, Os:33-64)
#  (And, the atomic coordinates (x,y,z) of "O" and "Os" paired in "Bonds" are the same.)

kspace_style ewald 0.0001 # 1e-4

neighbor 2.0 bin

#-------------------- General Parameters -------------------------------------------------
#timestep 0.0001 # 0.1 fs timestep in metal units
timestep ${dt_ps}

compute           CStemp all temp/cs cores shells
compute thermo_press_lmp all pressure thermo_temp # pressure for individual particles

thermo 5000
thermo_style custom step etotal pe ke temp press &
 epair evdwl ecoul elong ebond eangle cella cellb cellc
thermo_modify temp CStemp press thermo_press_lmp  # modify thermo to regular pressure

# ----------------------------------
dump            d1 all cfg 100 cfg/run.nve.*.cfg mass type xs ys zs id type q vx vy vz fx fy fz
dump_modify     d1 element O Os Zr W
# ----------------------------------

#-------------------- Run the NVE simulation ---------------------------------------------
fix thermoberendsen all temp/berendsen ${Sim_Temp} ${Sim_Temp} 0.0001
fix_modify thermoberendsen temp CStemp
fix mom all momentum 100 linear 1 1 1 rescale
fix nve all nve

run 500 # 50 [fs]

unfix thermoberendsen
unfix nve
undump d1

#-------------------- Run the NPT simulation (Equilibriation) ----------------------------
reset_timestep 0

# ----------------------------------
dump            d2 all cfg 100 cfg/run.npt_equ.*.cfg mass type xs ys zs id type q vx vy vz fx fy fz
dump_modify     d2 element O Os Zr W
# ----------------------------------

fix npt_equ all npt temp ${Sim_Temp} ${Sim_Temp} $(100*dt) iso 0 0 $(1000*dt)
fix_modify  npt_equ temp CStemp press thermo_press_lmp # pressure for correct kinetic scalar

run 500 # 50 [fs]

unfix npt_equ
undump d2

#-------------------- Dynamic Run --------------------------------------------------------
reset_timestep 0

# ----------------------------------
dump            d3 all cfg 100 cfg/run.npt_dyn.*.cfg mass type xs ys zs id type q vx vy vz fx fy fz
dump_modify     d3 element O Os Zr W
# ----------------------------------

fix npt_dyn all npt temp ${Sim_Temp} ${Sim_Temp} $(100*dt) iso 0 0 $(1000*dt)
fix_modify  npt_dyn temp CStemp press thermo_press_lmp # pressure for correct kinetic scalar

run 1000 # 100 [fs]

#-------------------- End ----------------------------------------------------------------