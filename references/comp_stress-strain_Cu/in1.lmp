#------------------------------------------------------------------------------------------
# 1.1 Uniaxial compression in Copper (SCRIPT1):
# Isothermal Uniaxial deformation along [100],[110] or [111]
# The equilibration step allows the lattice to expand to a temperature of 300 K with 
# a pressure of 0 kbar at each simulation cell boundary. Then, the simulation cell is
# deformed in the x-direction at a strain rate of 0.005 1/ps, while the lateral boundaries are 
# controlled using the NVT equations of motion to maintain the length of the computational box constant. 
# The stress and strain values are output to a separate file, which can be imported in 
# a graphing application for plotting. The cfg dump files include the x, y, and z coordinates, 
# the centrosymmetry values, the potential energies, and forces for each atom. 
# This can be directly visualized using AtomEye. We assume 1 timestep is equal to 0.0005 pico-seconds.
#
# Script made by Oscar Guerrero-Miramontes
#------------------------------------------------------------------------------------------
# LAMMPS 64-bit 22Dec2022-MSMPI
clear
units metal
dimension 3
boundary p p p
atom_style atomic
atom_modify map array

# ---------- define variables ---------------------
variable stemperature equal 300 # temperature in kelvin
variable epercentage equal 0.30 # the percentage the body is compressed
variable myseed equal 12345 # the value seed for the velocity
variable atomrate equal 2500 # the rate in timestep that atoms are dump as CFG
variable time_step equal 0.005 # time step in pico seconds
variable time_eq equal 10000 # time steps for the equlibration part

variable tdamp equal "v_time_step*100" # DO NOT CHANGE
variable pdamp equal "v_time_step*1000" # DO NOT CHANGE

variable R equal 0.005 # ERATE here 0.005 1/ps every picosecond

# time for the deformation part (DO NOT CHANGE)
variable time_run equal "(v_epercentage/v_R)/v_time_step"

timestep ${time_step} # DO NOT CHANGE

# ---------- Create Atoms ---------------------
# Create FCC lattice with x orientation along (100)
# if you want to change orientation along (110) or (111)
# then uncomment
lattice fcc 3.615 origin 0.0 0.0 0.0 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 # (100)
# lattice fcc 3.615 origin 0.0 0.0 0.0 orient x 1 1 0 orient y 0 0 1 orient z 1 -1 0 # (110)
# lattice fcc 3.615 origin 0.0 0.0 0.0 orient x 1 1 1 orient y 1 -1 0 orient z 1 1 -2 # (111)

region box block 0 50 0 50 0 50 units lattice
create_box 1 box
create_atoms 1 box

# ---------- Define Interatomic Potential ---------------------
pair_style eam/alloy
#pair_coeff * * Cu_mishin1.eam.alloy Cu
pair_coeff * * Cu01.eam.alloy Cu

# ---------- Define Settings ----------------------------------
# "compute" Define a computation that will be performed on a group of atoms. 
# Quantities calculated by a compute are instantaneous values, meaning they are 
# calculated from information about atoms on the current timestep or iteration,
# though a compute may internally store some information about a previous state of 
# the system. Defining a compute does not perform a computation. 
# Instead computes are invoked by other
# LAMMPS commands as needed

compute myCN all cna/atom 3.9
compute myKE all ke/atom
compute myPE all pe/atom

# ---------- Equilibration ---------------------------------------
reset_timestep 0
velocity all create ${stemperature} ${myseed} mom yes rot no

# The equilibration step NPT allows the lattice to expand to a temperature of 300 K with
# a pressure of 0 bar at each simulation cell boundary. The Tdamp and Pdamp parameter is
# specified in time units and determines how rapidly the temperature is relaxed. 
# A good choice for many models is a Tdamp of around 100 timesteps and A good choice for
# many models is aPdamp of around 1000 timesteps. Note that this is NOT the same as
# 1000 time units for most units settings.

fix equilibration all npt temp ${stemperature} ${stemperature} ${tdamp} iso 0 0 ${pdamp} drag 1

# Output thermodynamics into outputfile
# for units metal, pressure is in [bars] = 100 [kPa] = 1/10000 [GPa] p2, p3, p4 are in GPa

variable eq1 equal "step"
variable eq2 equal "pxx/10000"
variable eq3 equal "pyy/10000"
variable eq4 equal "pzz/10000"
variable eq5 equal "lx"
variable eq6 equal "ly"
variable eq7 equal "lz"
variable eq8 equal "temp"
variable eq9 equal "etotal"

fix output1 all print 10 "${eq1} ${eq2} ${eq3} ${eq4} ${eq5} ${eq6} ${eq7} ${eq8} ${eq9}" file run.${stemperature}K.out screen no
thermo 10
thermo_style custom step pxx pyy pzz lx ly lz temp etotal

# Use cfg for AtomEye (here only print the coordinates of the atoms)
dump 1 all cfg ${time_eq} cfg/equil.*.cfg mass type xs ys zs id type vx vy vz fx fy fz
dump_modify 1 element Cu

# RUN AT LEAST 10000 timesteps
run ${time_eq}
# Store final cell length for strain calculations
variable tmp equal "lx"
variable L0 equal ${tmp}
print "Initial Length, L0: ${L0}"

# reset
unfix equilibration
undump 1
unfix output1
# ---------- Deformation ---------------------------------
reset_timestep 0

# In our simulations We seek to control the lateral boundaries
# Ly and Lz, i.e When the computational box is stretched,
# the contraction or transverse strain perpendicular to the
# load is zero

fix 1 all nvt temp ${stemperature} ${stemperature} ${tdamp} drag 0.0
fix 2 all deform 1 x erate -${R} units box remap x

# IMPORTANT NOTE: When non-equilibrium MD (NEMD) simulations are performed using this fix,
# the option "remap v" should normally be used. This is because fix nvt/sllod adjusts 
# the atom positions and velocities to induce a velocity profile that matches the changing box size/shape. 
# Thus atom coordinates should NOT be remapped by fix deform, but velocities SHOULD be when 
# atoms cross periodic boundaries, since that is consistent with maintaining 
# the velocity profile already created by fix nvt/sllod. LAMMPS will warn you if 
# the remap setting is not consistent with fix nvt/sllod. Output strain and stress info to file
# for units metal, pressure is in [bars] = 100 [kPa] = 1/10000 #[GPa] pxx, pyy, pzz are in GPa

variable strain equal "-(lx - v_L0)/v_L0"
variable shear equal "0.5*(pxx/10000 - 0.5*(pyy/10000 + pzz/10000))"
variable tstep equal "step"
variable mypxx equal "pxx/10000"
variable mypyy equal "pyy/10000"
variable mypzz equal "pzz/10000"
variable mylx equal "lx"
variable myly equal "ly"
variable mylz equal "lz"
variable mytemp equal "temp"

#fix def1 all print 10 "${strain} ${mypxx} ${mypyy} ${mypzz} ${shear} ${mylx} ${myly} ${mylz} ${mytemp}" file stress.${stemperature}K.${epercentage}e.out screen no
fix def1 all print 10 "${strain} ${mypxx} ${mypyy} ${mypzz} ${shear} ${mylx} ${myly} ${mylz} ${mytemp}" file comp_100.def1.txt screen no

# Use cfg for AtomEye
dump 1 all cfg ${atomrate} cfg/comp_*.cfg mass type xs ys zs id type c_myPE c_myKE c_myCN fx fy fz
dump_modify 1 element Cu

# Display thermo
variable thermostep equal "v_time_run/10"
thermo ${thermostep}
thermo_style custom "v_strain" pxx pyy pzz lx ly lz temp etotal pe ke
run ${time_run}

unfix def1
unfix 1
unfix 2
# SAVE THE DATA OF THE CALCULATION OR ELSE YOU NEED TO START OVER

write_restart restart.equil

# SIMULATION DONE
clear
print "creo ya esta =)"
#------------------------------------------------------------------------------------------