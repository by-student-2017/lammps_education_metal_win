#------------------------------------------------------------------------------------------
# 1.3 Shock Compression in Niquel (SCRIPT3):
# SCRIPT MADE BY: OSCAR GUERRERO
#------------------------------------------------------------------------------------------
# LAMMPS 64-bit 22Dec2022-MSMPI
# ---------- Initialize Simulation ---------------------
clear
units metal
dimension 3
boundary p p p
atom_style atomic
atom_modify map array

# ---------- define variables ---------------------
variable stemperature equal 5 # temperature in kelvin
variable alattice equal 3.520 # lattice constant (unit A)
variable myseed equal 12345 # the value seed for the velocity
variable xmax equal 40 # size in the x-direction
variable ymax equal 40 # size in the y-direction
variable zmax equal 70 # size in the z-direction
variable time_step equal 0.001 # time step in pico seconds
variable time_eq equal 1000 # time steps for the equlibration part
variable time_shock equal 15000 # time steps for the piston
variable vpiston equal 1.300 # piston speed in (km/s) multiply by ten to obtain (A/ps)
variable Nevery equal 10 # use input values every this many timesteps
variable Nrepeat equal 5 # number of times to use input values for calculating
variable Nfreq equal 100 # calculate averages every this many timesteps
variable deltaz equal 3 # thickness of spatial bins in dim (distance units)
variable atomrate equal 100 # the rate in timestep that atoms are dump as CFG
variable tdamp equal "v_time_step*100" # DO NOT CHANGE
variable pdamp equal "v_time_step*1000" # DO NOT CHANGE

# DO NOT CHANGE
variable Up equal "10*v_vpiston"

timestep ${time_step}

# ---------- Create Atoms ---------------------
lattice fcc ${alattice} origin 0.0 0.0 0.0 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 # (100)
# lattice fcc ${alattice} origin 0.0 0.0 0.0 orient x 1 1 0 orient y 0 0 1 orient z 1 -1 0 # (110)
# lattice fcc ${alattice} origin 0.0 0.0 0.0 orient x 1 1 1 orient y 1 -1 0 orient z 1 1 -2 # (111)

# the create box commands create_box natoms idname, where natoms is the number of atoms type
# in the simulation box for this case we only have one type of atoms
# you can use the command "set" to set the different region of atoms to different Ntype
# the command "set" is very useful examples: "set group piston type 1"

# define size of the simulation box
region sim_box block 0 ${xmax} 0 ${ymax} 0 ${zmax} units lattice
create_box 2 sim_box

# define atoms in a small region
region atom_box block 0 ${xmax} 0 ${ymax} 0 ${zmax}
create_atoms 1 region atom_box

# define a group for the atom_box region
group atom_box region atom_box

region piston block INF INF INF INF INF 4
region bulk block INF INF INF INF 4 INF

group piston region piston
group bulk region bulk

set group piston type 1
set group bulk type 2

# ---------- Define Interatomic Potential ---------------------
#pair_style eam/fs
#pair_coeff * * Ni.lammps.eam Ni Ni
pair_style eam/alloy
pair_coeff * * NiCo-lammps-2014.alloy Co Ni
#mass 1 58.70
#mass 2 58.70
#compute myCN bulk cna/atom fcc
compute myCN bulk cna/atom $(0.8536*v_alattice) # rc(FCC) = 0.8536*La, rc(BCC)=1.207*La
compute myKE bulk ke/atom
compute myPE bulk pe/atom
compute myCOM bulk com
compute peratom bulk stress/atom NULL
compute vz bulk property/atom vz

# ------------ Equilibrate ---------------------------------------
reset_timestep 0

# Now, assign the initial velocities using Maxwell-Boltzmann distribution
velocity atom_box create ${stemperature} ${myseed} rot yes dist gaussian

fix equilibration bulk npt temp ${stemperature} ${stemperature} ${tdamp} iso 0 0 ${pdamp} drag 1
variable eq1 equal "step"
variable eq2 equal "pxx/10000"
variable eq3 equal "pyy/10000"
variable eq4 equal "pzz/10000"
variable eq5 equal "lx"
variable eq6 equal "ly"
variable eq7 equal "lz"
variable eq8 equal "temp"
variable eq9 equal "etotal"
fix output1 bulk print 10 "${eq1} ${eq2} ${eq3} ${eq4} ${eq5} ${eq6} ${eq7} ${eq8} ${eq9}" file run.out screen no

thermo 10
thermo_style custom step pxx pyy pzz lx ly lz temp etotal

run ${time_eq}
unfix equilibration
unfix output1

#------------------------------------------------------------------------------------------
# -------------- Shock ------------------------------------------
change_box all boundary p p s
reset_timestep 0

# WE CREATE A PISTON USING A FEW LAYERS OF ATOMS AND THEN WE GIVE IT
# A CONSTANT POSTIVE SPEED. YOU COULD ALSO USE LAMMPS' FIX WALL/PISTON COMMAND
fix 1 all nve
velocity piston set 0 0 v_Up sum no units box
fix 2 piston setforce 0.0 0.0 0.0

# WE CREATE BINS IN ORDER TO TRACK THE PASSING OF THE SHOCKWAVE
#fix density_profile bulk ave/spatial ${Nevery} ${Nrepeat} ${Nfreq} z lower ${deltaz} density/mass file denz.profile units box
#-----------------------------------------------------------------
# Define a chunk based on spatial bins
compute myChunk all chunk/atom bin/1d z lower ${deltaz} units box
#-----------------------------------------------------------------
# Average the density in each chunk
fix density_profile all ave/chunk ${Nevery} ${Nrepeat} ${Nfreq} myChunk density/mass file denz.profile
#-----------------------------------------------------------------

variable temp atom c_myKE/(1.5*8.61e-5)
#fix temp_profile bulk ave/spatial ${Nevery} ${Nrepeat} ${Nfreq} z lower ${deltaz} v_temp file temp.profile units box
#-----------------------------------------------------------------
# Define a chunk based on spatial bins
#compute myChunk all chunk/atom bin/1d z lower ${deltaz} units box
#-----------------------------------------------------------------
# Average the temperature in each chunk
fix temp_profile all ave/chunk ${Nevery} ${Nrepeat} ${Nfreq} myChunk v_temp file temp.profile
#-----------------------------------------------------------------

variable meanpress atom -(c_peratom[1]+c_peratom[2]+c_peratom[3])/3
#fix pressure_profile bulk ave/spatial ${Nevery} ${Nrepeat} ${Nfreq} z lower ${deltaz} v_meanpress units box file pressure.profile
#-----------------------------------------------------------------
# Define a chunk based on spatial bins
#compute myChunk all chunk/atom bin/1d z lower ${deltaz} units box
#-----------------------------------------------------------------
# Average the pressure in each chunk
fix pressure_profile all ave/chunk ${Nevery} ${Nrepeat} ${Nfreq} myChunk v_meanpress file pressure.profile
#-----------------------------------------------------------------

#fix velZ_profile bulk ave/spatial ${Nevery} ${Nrepeat} ${Nfreq} z lower ${deltaz} c_vz units box file velocityZcomp.profile
#-----------------------------------------------------------------
# Define a chunk based on spatial bins
#compute myChunk all chunk/atom bin/1d z lower ${deltaz} units box
#-----------------------------------------------------------------
# Average the velocity in each chunk
fix velZ_profile all ave/chunk ${Nevery} ${Nrepeat} ${Nfreq} myChunk c_vz file velocityZcomp.profile
#-----------------------------------------------------------------

variable eq1 equal "step"
variable eq2 equal "pxx/10000"
variable eq3 equal "pyy/10000"
variable eq4 equal "pzz/10000"
variable eq5 equal "lx"
variable eq6 equal "ly"
variable eq7 equal "lz"
variable eq8 equal "temp"
variable eq9 equal "etotal"
variable eq10 equal "c_myCOM[3]"
fix shock bulk print 10 "${eq1} ${eq2} ${eq3} ${eq4} ${eq5} ${eq6} ${eq7} ${eq8} ${eq9} ${eq10}" file run.${stemperature}K.out screen no

thermo 10
thermo_style custom step pxx pyy pzz lx ly lz temp etotal c_myCOM[3]

#Use cfg for AtomEye
dump 1 all cfg ${atomrate} cfg/shock_*.cfg mass type xs ys zs id type c_myPE c_myKE c_myCN fx fy fz
dump_modify 1 element Co Ni

run ${time_shock}#------------------------------------------------------------------------------------------