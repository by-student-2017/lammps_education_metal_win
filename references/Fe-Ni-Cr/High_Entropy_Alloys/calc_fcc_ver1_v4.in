# Find minimum energy fcc configuration
# Required variable latconst to be input via the command line
# e.g., lmp_win_no-mpi < calc_fcc_ver1.in

# LAMMPS 64-bit 22Dec2022-MSMPI
clear
#-------------------- Environment Settings -----------------------------------------------
variable  Tdesird equal  300.0 # Desired Temperature [K]
variable  MC_temp equal 1300.0 # Temperature of MC [K]

variable   Nsteps equal   2000 # Number of simulation cycles
variable DumpFreq equal    100 # For print out

variable    dt_ps equal  0.001 # 0.001 [ps] = 1 [fs]

variable  es_rate equal    0.2 # engineering strain rate (1/time units) (strain in x direction)
# Note: (es_rate/1)/dt_ps = 0.2 / (1e-15) = 2.0e14 [1/s]
# L(t) = L(0)*(1 + es_rate*dt*step)
# strain [%] = es_rate*dt*Nstep*100 [%] = 0.2 * 0.001 * 2000 * 100 = 40 [%]

variable Equil_Nsteps equal ${Nsteps}*2 # 8 [ps] on Equilibration (NPT)
variable    MC_Nsteps equal ${Nsteps}/5 # Number of MC simulation cycles
#-------------------- Initialization -----------------------------------------------------
units metal
dimension 3
boundary p p p

#-------------------- Atom & Lattice description -----------------------------------------
atom_style atomic

# method 1 (easy method) (However, the composition ratio changes slightly with the random number seed.)
#----------------------------------------------------------------------
#lattice fcc 3.165
#region box block 0 10 0 10 0 10 units box
#create_box 5 box # define 5 types
#
#region cu block 0 10 0 10 0 10 units box
#
#create_atoms 1 region fe units box
#
## creating composition using set command for HEA alloy
#set region fe type/fraction 2 0.20 12393 # set Ni 20%, randomly
#set region fe type/fraction 3 0.20 12393 # set Cr 20%, randomly
#set region fe type/fraction 4 0.20 12393 # set Co 20%, randomly
#set region fe type/fraction 5 0.20 12393 # set Mn 20%, randomly
#----------------------------------------------------------------------

# method 2 (layer type)
#----------------------------------------------------------------------
#lattice fcc 3.165
region new_region block 0 5 0 5 0 5
create_box 5 new_region # define 5 types

region fefe_region block   0 5 0 5 0 1 units box # set Fe-Fe area
lattice fcc 3.165 orient x 2 1 0 orient y 1 -2 0 orient z 0 0 -1 
create_atoms 1 region fefe_region

region feni_region block   0 5 0 5 1 2 units box # set Fe-Ni area
lattice fcc 3.165 orient x 2 1 0 orient y 1 -2 0 orient z 0 0 -1 
create_atoms 2 region feni_region

region fecr_region block   0 5 0 5 2 3 units box # set Fe-Cr area
lattice fcc 3.165 orient x 1 0 0 orient y 0  1 0 orient z 0 0  1 
create_atoms 3 region fecr_region

region feco_region block   0 5 0 5 3 4 units box # set Fe-Co area
lattice fcc 3.165 orient x 1 2 0 orient y 2 -1 0 orient z 0 0 -1 
create_atoms 4 region feco_region

region femn_region block   0 5 0 5 4 5 units box # set Fe-Mn area
lattice fcc 3.165 orient x 1 2 0 orient y 2 -1 0 orient z 0 0 -1 
create_atoms 5 region femn_region

# creating composition using set command for HEA alloy
set region fefe_region type/fraction 1 1.0 12393 # for Fe-Fe area
set region feni_region type/fraction 2 1.0 12393 # for Fe-Ni area
set region fecr_region type/fraction 3 1.0 12393 # for Fe-Cr area
set region feco_region type/fraction 4 1.0 12393 # for Fe-Co area
set region femn_region type/fraction 5 1.0 12393 # for Fe-Mn area

group gfefe_region region fefe_region # for Fe-Fe area
group gfeni_region region feni_region # for Fe-Ni area
group gfecr_region region fecr_region # for Fe-Cr area
group gfeco_region region feco_region # for Fe-Co area
group gfemn_region region femn_region # for Fe-Mn area
#----------------------------------------------------------------------

#-------------------- Force field --------------------------------------------------------
pair_style meam/c
pair_coeff * * library.meam Co Ni Cr Fe Mn hea.meam Fe Ni Cr Co Mn

# ------------------- Displace atoms and delete overlapping atoms ------------------------
displace_atoms gfefe_region move 0 0 0 units lattice 
displace_atoms gfeni_region move 0 0 0 units lattice 
displace_atoms gfecr_region move 0 0 0 units lattice 
displace_atoms gfeco_region move 0 0 0 units lattice 
displace_atoms gfemn_region move 0 0 0 units lattice 
delete_atoms overlap 0.35 all all

#-------------------- Settings -----------------------------------------------------------
neighbor 2.0 bin
neigh_modify delay 0 every 10 check yes

# ------------------- Define Settings ----------------------------------------------------
compute   csym all centro/atom fcc 
compute    eng all pe/atom 
compute eatoms all reduce sum c_eng

#--------- for gravity ----------
# Note: You can add gravity. However, due to its very small value, it is ineffective at the nanoscale.
# gravity, force/mass units = (eV/Angstrom)/(grams/mole)
# Gravity = 9.8 [m/s^2] = 9.8 [N/kg] = 9.8/(1.60217657e-9)/1000/(6.02214076e23) [(eV/Angstrom)/(g/mol)] 
# = 1.01569847E-17 (Ref. 1.60217657e-9 [N] = 1 [eV/Angstrom], 1 [mol] = 6.02214076e23)
#fix g1 all gravity 1.0e-17 vector 0 0 1
#-------------------------------

#-------------------- Monte Carlo swaps  -------------------------------------------------
fix mc_feni all atom/swap 1 1 12345 ${MC_temp} ke no types 1 2
fix mc_fecr all atom/swap 1 1 12345 ${MC_temp} ke no types 1 3
fix mc_feco all atom/swap 1 1 12345 ${MC_temp} ke no types 1 4
fix mc_femn all atom/swap 1 1 12345 ${MC_temp} ke no types 1 5
run ${MC_Nsteps}
unfix mc_feni
unfix mc_fecr
unfix mc_feco
unfix mc_femn

replicate 2 2 2 # Extend to "2x2x2" cells

#-------------------- Energy Minimization ------------------------------------------------
# 0 [K], structure optimization
#neigh_modify every 1 delay 0 check yes

thermo 10 
thermo_style custom step pe lx press pxx c_eatoms 

min_style cg 
minimize 1e-6 1e-6 5000 10000

# ------------------- Calculate GB Energy ------------------------------------------------
variable minimumenergy equal -3.360000 # <= Please, set this value.

variable    esum equal "v_minimumenergy * count(all)" 
variable   xseng equal "c_eatoms - (v_minimumenergy * count(all))" 
variable  gbarea equal "lx * lz * 2" 
variable     gbe equal "(c_eatoms - (v_minimumenergy * count(all)))/v_gbarea" 
variable gbemJm2 equal ${gbe}*16021.7733 
variable  gbernd equal round(${gbemJm2}) 

print "GB energy is ${gbemJm2} mJ/m^2"

# ------------------- Equilibration ------------------------------------------------------
#reset timer
reset_timestep 0

timestep ${dt_ps}

# instrumentation and output
variable s1 equal "time"
variable s2 equal "lx"
variable s3 equal "ly"
variable s4 equal "lz"
variable s5 equal "vol"
variable s6 equal "press"
variable s7 equal "pe"
variable s8 equal "ke"
variable s9 equal "etotal"
variable s10 equal "temp"
fix writer all print ${DumpFreq} "${s1} ${s2} ${s3} ${s4} ${s5} ${s6} ${s7} ${s8} ${s9} ${s10}" file HEA_eq.txt screen no

# thermo
thermo ${DumpFreq}
thermo_style custom step time cpu cpuremain lx ly lz press pe temp

# dumping trajectory
dump 1 all atom ${DumpFreq} dump.eq.lammpstrj

# initial velocities
velocity all create ${Tdesird} 12345 mom yes rot no

#-------------------- Run the simulation -------------------------------------------------
#thermostat + barostat
fix 1 all npt temp ${Tdesird} ${Tdesird} $(100*dt) iso 0 0 $(1000*dt) drag 1.0 

run ${Equil_Nsteps} # 40 [ps], MD Simulation (assuming 2 fs time step)

#clearing fixes and dumps
unfix 1
undump 1

#saving equilibrium length for strain calculation
variable tmp equal "lx"
variable  L0 equal ${tmp}
print "Initial Length, L0: ${L0}"

#------------------DEFORMATION------------------------------------------------------------
#reset timer
reset_timestep 0

timestep ${dt_ps}

# instrumentation and output
# for units metal, pressure is in 1 [bars] = 100 [kPa] = 0.1 [MPa] = 1x10^-4 [GPa] => p1, p2, p3, are in GPa
#-------------------------------
variable strain equal "(lx - v_L0)/v_L0"
variable p0 equal "v_strain"
#-------------------------------
variable p1 equal "-pxx/10000"
variable p2 equal "-pyy/10000"
variable p3 equal "-pzz/10000"
#-------------------------------
variable p12 equal "-pxy/10000"
variable p23 equal "-pyz/10000"
variable p13 equal "-pxz/10000"
#-------------------------------
variable  fm equal "(v_p1+v_p2+v_p3)/3" # Hydrostatic stress
variable  fv equal "sqrt( (1/2)*( (v_p1-v_p2)^2 + (v_p2-v_p3)^2 + (v_p3-v_p1)^2 + 6*(v_p12^2+v_p23^2+v_p13^2) ) )" # Von Mises Stress
variable   t equal "v_fm/v_fv"
variable  fd equal "( (v_p1-v_fm)*(v_p2-v_fm)*(v_p3-v_fm) - ((v_p12)^2)*(v_p3-v_fm) - ((v_p23)^2)*(v_p1-v_fm) - ((v_p13)^2)*(v_p2-v_fm) + 2*(v_p12*v_p23*v_p13) )" # Deviatoric Von Mises stress
#-------------------------------
# principal stresses (dummy)
variable I1 equal "(v_p1+v_p2+v_p3)"
variable I2 equal "(v_p1)*(v_p2) + (v_p2)*(v_p3) + (v_p1)*(v_p3) - (v_p12)^2 - (v_p23)^2 - (v_p13)^2"
variable I3 equal "(v_p1)*(v_p2)*(v_p3) - (v_p1)*((v_p23)^2) - (v_p2)*((v_p13)^2) - (v_p3)*((v_p12)^2) + 2*(v_p12)*(v_p23)*(v_p13)"
variable  A equal "( acos(((2*(v_I1)^3)-9*(v_I1)*(v_I2)+27*(v_I3))/(2*((v_I1)^2-(3*(v_I2)))^(3/2))) )/3" 
variable s1 equal "( (v_I1)/3)+(2/3)*( sqrt((v_I1)^2-(3*(v_I2)) ) )*cos(v_A)" 
variable s2 equal "( (v_I1)/3)+(2/3)*( sqrt((v_I1)^2-(3*(v_I2)) ) )*cos((v_A)+(2*PI)/3)"
variable s3 equal "( (v_I1)/3)+(2/3)*( sqrt((v_I1)^2-(3*(v_I2)) ) )*cos((v_A)+(4*PI)/3)"
#-------------------------------

#thermo
thermo ${DumpFreq}
thermo_style custom step cpuremain v_strain v_p1 v_p2 v_p3 press pe temp 

compute 1 all stress/atom NULL  # computes the symmetric per-atom stress tensor for each atom in a group.
compute 2 all temp              # computes the temp of a group of atoms
compute 3 all reduce sum c_1[1] # reduces vector quantities of all stress tensors in x-direction and adds all the quantities to a single scalar value
compute kea all ke/atom         # This is related to temperature

variable stress     equal c_3/vol # assigns a value to the variable name stress
variable stress_GPa equal v_stress/10000 # converts the stress calculated to GPa

#---------- output file settings -------------------
fix fo1 all ave/time 1 3 3 c_2 v_strain v_stress v_stress_GPa v_p1 file stress_vs_strain.txt
#---------------------------------------------------
dump            d1 all cfg ${DumpFreq} cfg/run.*.cfg mass type xs ys zs id type vx vy vz fx fy fz c_kea
dump_modify     d1 element Fe Ni Cr Co Mn
#---------------------------------------------------

#-------------------- Run the simulation -------------------------------------------------

# strain rate of 0.01 [1/time units] is applied in y direction
fix 1 all deform 1 x erate ${es_rate} units box remap x

# thermostat + barostat
# all atoms rescaled to new positions while temp and pressure is conserved
fix 2 all npt temp ${Tdesird} ${Tdesird} $(100*dt) y 0 0 $(1000*dt) z 0 0 $(1000*dt) drag 1.0

# Resets the temp of atoms to 300 K by rescaling velocities after every 10 steps
fix 3 all temp/rescale 10 ${Tdesird} ${Tdesird} 0.05 1.0

fix writer all print ${DumpFreq} "${p0} ${p1} ${p2} ${p3}" file HEA.deform.txt screen no

fix def all print 1 "${strain} ${p1} ${s1} ${s2} ${s3} ${fm} ${fv} ${t} ${fd}" file plot_stress_vs_strain_v3.txt screen no

# calculates the radial distribution function (RDF) and output file
compute 11 all rdf 100
fix 5 all ave/time 100 1 100 c_11[*] file data.rdf mode vector

# number of iterations is given so as to give 40% strain to the material
run ${Nsteps} # 4 [ps], MD Simulation (assuming 1 fs time step)

# clearing fixes and dumps
unfix 1
unfix 2
unfix writer
#undump 1
#undump 2
undump d1

print "Simulation is about to finish"
print "All done"
#-------------------- End ----------------------------------------------------------------

#-----------------------------------------------------------------------------------------
# Note
# compute        peratom all stress/atom NULL
# compute        p all reduce sum c_peratom[1] c_peratom[2] c_peratom[3]
# variable       press equal -(c_p[1]+c_p[2]+c_p[3])/(3*vol)
# thermo_style   custom step temp etotal press v_press
# metal unit: press = bar = 0.1 MPa, length = Angstrom = 1e-10 m
#-----------------------------------------------------------------------------------------