# Input file for obtaining equilibrated 3D-crystal lattice of V-notched sample using LAMMPS:
# This program is for obtaining 3d-crystal lattice
# V-Notched: 50 x 100 x 50, 21056 atoms
#-----------------------------------------------------------------------------------------
# LAMMPS 64-bit 22Dec2022-MSMPI
clear
#-------------------- Initialization -----------------------------------------------------
echo both        # echoes each input script command to both log file and screen
units metal      # determines units of all quantities used in the input file 
dimension 3
boundary p p p   # periodic boundary condition

#-------------------- Atom & Lattice description ----------------------------------------
atom_style atomic 

# method 1 (easy method) (Deprecated: This method does not work properly for ternary systems or higher.)
#----------------------------------------------------------------------
#region box block 0 50 0 100 0 50 units box # defines a geometric region of space
#create_box 5 box # creates a simulation box in the specified region (set 5 elements (Ti, Zr, Cu, Pd and Ta))
#
#lattice fcc 3.61 # lattice type and lattice parameter
#region cu block 0 50 0 100 0 50 units box
#create_atoms 1 region cu units box # creates (copper => Ti) atoms in the simulation box
#
# creating composition by using set command for Ti0.396-Zr0.099-Cu0.3564-Pd0.1386-Ta0.01 alloy 
#set region cu type/fraction 2 0.099  12393 # set Zr 10*(100-x)%, randomly
#set region cu type/fraction 3 0.3564 12393 # set Cu 36*(100-x)%, randomly
#set region cu type/fraction 4 0.1386 12393 # set Pd 14*(100-x)%, randomly
#set region cu type/fraction 5 0.01   12393 # set Ta x=1%, randomly
#--------------------------------------------------------------------------------

# method 2 (layer type)
#----------------------------------------------------------------------
lattice fcc 3.61
region new_region block 0 50 0 100 0 50 units box 
create_box 5 new_region # set 5 types (5 elements)

# Ti (type 1) only, 20%
region titi block 0 50  0 20  0 50 units box
lattice fcc 3.61 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 
create_atoms 1 region titi

# Ti (type 1) main
region tizr block 0 50 20 40  0 50 units box 
lattice fcc 3.61 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 
create_atoms 1 region tizr

# Cu (type 2) only, 20%
region cucu block 0 50 40 60  0 50 units box 
lattice fcc 3.61 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 
create_atoms 2 region cucu

# Cu (type 2) main
region cupd block 0 60 80 100 0 50 units box 
lattice fcc 3.61 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 
create_atoms 2 region cupd

# Cu (type 2) main
region cuta block 0 80 100 100 0 50 units box 
lattice fcc 3.61 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 
create_atoms 2 region cuta

# creating composition by using set command for Ti0.396-Zr0.099-Cu0.3564-Pd0.1386-Ta0.01 alloy 
set region tizr type/fraction 2 $(0.0990*5) 12393 # set Zr 10*(100-x)%, randomly
set region cupd type/fraction 4 $(0.1386*5) 12393 # set Pd 14*(100-x)%, randomly
set region cuta type/fraction 5 $(0.0100*5) 12393 # set Ta x=1%, randomly

#group gtiti region titi
#group gtizr region tizr
#group gcucu region cucu
#group gcupd region cupd
#group gcuta region cuta
#----------------------------------------------------------------------

# delete area
#----------------------------------------------------------------------
region cu1 prism 30 50 40 60 0 50 20 0 0 units box # defines a geometric region of V-notch
group crystal1 region cu1
delete_atoms group crystal1 # creates square-notch in the simulation box

region cu2 prism  0 20 40 60 0 50 -20 0 0 units box # defines a geometric region of V-notch
group crystal2 region cu2
delete_atoms group crystal2 # creates square-notch in the simulation box
#----------------------------------------------------------------------

#-------------------- Force field --------------------------------------------------------
pair_style eam/alloy
pair_coeff * * TiZrCuNiPdTaCo_Zhou04.eam.alloy Ti Zr Cu Pd Ta

#-------------------- Monte Carlo swaps (method 2 case at 2300 K) ------------------------
fix mc_ticu all atom/swap 1 1 12345 2300 ke no types 1 2
fix mc_tizr all atom/swap 1 1 12345 2300 ke no types 1 3
fix mc_cupd all atom/swap 1 1 12345 2300 ke no types 2 4
fix mc_cuta all atom/swap 1 1 12345 2300 ke no types 2 5
run 10000
unfix mc_ticu
unfix mc_tizr
unfix mc_cupd
unfix mc_cuta

#-------------------- Energy Minimization ------------------------------------------------
# 0 [K], structure optimization
#minimize 1.0e-7 1.0e-8 1000 1000

#-------------------- Settings -----------------------------------------------------------
reset_timestep 0

timestep 0.002   # 2 [fs], sets the timestep for subsequent simulations

thermo 100 # computes and prints thermodynamic 
thermo_style custom step temp vol press etotal # specifies content of thermodynamic data to be printed in screen

#---------- output file settings --------------------------------------
#dump 1 all atom 10 Cu_crystal_melt_3d_s_dump_new.lammpstrj # dumps a snapshot of atom quantities every 10 time steps to the specified file
#dump_modify 1 scale no # modifies parameters of previously defined dump command.
## A value of scale no means atom coordinates are written in absolute distance units. 
#----------------------------------------------------------------------
dump            d1 all cfg 10 cfg/run.*.cfg mass type xs ys zs id type vx vy vz fx fy fz
dump_modify     d1 element Ti Zr Cu Pd Ta
#----------------------------------------------------------------------
#log logCu_crystal_melt_3d_s_new.data # closes the current log file, opens a new log file, and begins logging information to it

# calculates the radial distribution function (RDF)
compute myRDF all rdf 100
fix 11 all ave/time 1 1 100 c_myRDF[*] file data.rdf mode vector

velocity all create 300 873847 rot yes mom yes dist gaussian # sets the velocity of a group of atoms

#-------------------- Run the simulation -------------------------------------------------
fix 1 all npt temp 100 100 0.1 iso 0 0 0.1 # temp and pressure conserved
run 1000 # program is run for 1000 iterations
unfix 1  # deletes the previously defined fix 1

#--------------------------------------------------------------------------------
# Since random numbers are used for arrangement, the composition ratio is #
# slightly different from the specified ratio. Under the conditions calculated this time, 
# the composition ratio is as follows. Also keep in mind that this value will change 
# if you change the random number seed.
#--------------------------------------------------------------------------------
group ti type 1
group zr type 2
group cu type 3
group pd type 4
group ta type 5
#----------------------------
variable  nti equal count(ti)
variable  nzr equal count(zr)
variable  ncu equal count(cu)
variable  npd equal count(pd)
variable  nta equal count(ta)
#----------------------------
variable ntot equal ${nti}+${nzr}+${ncu}+${npd}+${nta}
#----------------------------
variable nnti equal ${nti}/${ntot}
variable nnzr equal ${nzr}/${ntot}
variable nncu equal ${ncu}/${ntot}
variable nnpd equal ${npd}/${ntot}
variable nnta equal ${nta}/${ntot}
#-----------------------------
variable snnti format nnti %05.3f
variable snnzr format nnzr %05.3f
variable snncu format nncu %05.3f
variable snnpd format nnpd %05.3f
variable snnta format nnta %05.3f
#----------------------------
variable pnti equal ${nti}/${ntot}*100
variable pnzr equal ${nzr}/${ntot}*100
variable pncu equal ${ncu}/${ntot}*100
variable pnpd equal ${npd}/${ntot}*100
variable pnta equal ${nta}/${ntot}*100
#-----------------------------
variable spnti format pnti %04.1f
variable spnzr format pnzr %04.1f
variable spncu format pncu %04.1f
variable spnpd format pnpd %04.1f
variable spnta format pnta %04.1f
#--------------------------------------------------------------------------------
print "Ti: ${snnti}, Zr: ${snnzr}, Cu: ${snncu}, Pd: ${snnpd}, Ta: ${snnta} [ratio]"
print "Ti: ${spnti}, Zr: ${spnzr}, Cu: ${spncu}, Pd: ${spnpd}, Ta: ${spnta} [%]"
#--------------------------------------------------------------------------------

#-------------------- Output data file ---------------------------------------------------
write_data Test.dat

#-------------------- End ----------------------------------------------------------------