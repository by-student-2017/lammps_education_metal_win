# --- INITIALIZATION ---
units metal
dimension 3
boundary p p p
atom_style atomic

# --- VARIABLES ---
variable latparam equal 3.615 # Assumed lattice parameter

# --- Simulation box size ---
if " $ { orientation } == 100" then &
  " variable sizeX equal v_Lx " &
  " variable sizeY equal v_Ly " &
  " variable sizeZ equal v_Lz " &
elif " $ { orientation } == 110" &
  " variable sizeX equal ’ v_Lx ’" &
  " variable sizeY equal ’ ceil ( v_Ly / sqrt (2) ) ’" &
  " variable sizeZ equal ’ ceil ( v_Lz / sqrt (2) ) ’" &
elif " $ { orientation } == 111" &
  " variable sizeX equal ’ ceil ( v_Lx / sqrt (8/3) ) ’" &
  " variable sizeY equal ’ ceil ( v_Ly / sqrt (2) ) ’" &
  " variable sizeZ equal ’ ceil ( v_Lz / sqrt (3) ) ’" &
else " print ’ Unknown orientation ! ’" " quit "
# Simulation box size dependent variables
variable Z_ion equal v_sizeZ *5/4 # Room for the ion

# --- ATOM DEFINITION & REGIONS ---
# Orienting according to the crystallographic orientation
if " $ { orientation } == 100" then &
" lattice fcc $ { latparam } orient x 1 0 0 orient y 0 1 0 orient z 0 0 1"
& elif " $ { orientation } == 110" &
" lattice fcc $ { latparam } orient x 0 0 -1 orient y -1 1 0 orient z 1 1 0"
& elif " $ { orientation } == 111" &
" lattice fcc $ { latparam } orient x 1 1 -2 orient y -1 1 0 orient z 1 1 1"
& else " print ’ Unknown orientation ! ’" " quit "
# Defining the region that is going to be bombarded
region regioon block 0 $ { sizeX } 0 $ { sizeY } 0 $ { sizeZ }
create_box 1 regioon
create_atoms 1 region regioon
group pind region regioon

# --- EAM POTENTIAL ---
pair_style eam / alloy
pair_coeff * * Potentials / Cu . eam . Mishin . zbl

# --- EQUILIBRATION AND SETTINGS ---
compute Pot all pe / atom
compute Kin all ke / atom
# Initial velocities / temperature
velocity pind create $ { surf_temp } 482748 mom yes rot no # Giving the
surface a temperature
fix 1 pind npt temp $ { surf_temp } $ { surf_temp } 1 iso 0 0 1
reset_timestep 0
timestep 0.002 # Timestep of 1 to 5 femtoseconds
thermo 50 # Printing out information after every ... timesteps
# Displayed parameters
thermo_style custom step cpu vol lz press pxx pyy pzz pe etotal temp dt
run $ { relax } # Relax for ... timesteps

# --- RELAXATION 2 ---
change_box all z delta -1.5 $ { Z_ion }
run $ { relax } # Relax for ... timesteps
write_dump all custom Relax / $ { POT }/ $ { surf_temp } Kelvins / RELAX . orient$ {
orientation }. $ { surf_temp } K . $ (( v_relax *2) ) TS . DUMP id type x y z vx vy vz fx
fy fz
variable NRA equal count ( pind )

# --- END OF SCRIPT ---